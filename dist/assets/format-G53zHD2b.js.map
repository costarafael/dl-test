{"version":3,"mappings":"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","names":["API_BASE","apiRequest","url","options","response","errorText","data","error","createCRUDAPI","endpoint","id","item","updates","empresasAPI","m","__vitePreload","e","tipo","holdingId","colaboradoresAPI","c","empresaId","status","query","tiposEPIAPI","categoria","estoqueAPI","tipoEPIId","novaQuantidade","dados","itemAtualizado","fichasEPIAPI","colaboradorId","fichaId","ficha","novosItens","itemId","entregasAPI","fichaEPIId","dadosAssinatura","historicoAPI","responsavel","historicoEstoqueAPI","evento","itemEstoqueId","dataInicio","dataFim","operacoesAPI","dadosEntrega","colaborador","entrega","processarEntregaEstoque","resultadoEstoque","novosItensFicha","entregaId","entregaAtual","itensAntigos","itensNovosParaEstoque","processarEdicaoEntregaEstoque","entregaAtualizada","itensFichaRestantes","dadosDevolucao","processarDevolucaoEstoque","itensAtualizados","itemDevolucao","dev","entregas","empresa","notasEntradaAPI","notaId","nota","estoqueId","notasSaidaAPI","movimentacaoNotasAPI","timestamp","numeroNota","notaData","total","notaAtual","notaAtualizada","useAPI","apiCall","dependencies","setData","useState","loading","setLoading","setError","useEffect","isMounted","result","err","useFichasEPI","fichas","setFichas","loadFichas","retryCount","api","newFicha","prev","updatedFicha","millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","date","value","toDate","argument","context","defaultOptions","getDefaultOptions","startOfWeek","weekStartsOn","_b","_a","_d","_c","_date","day","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","isDate","isValid","startOfYear","date_","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","sign","output","lightFormatters","signedYear","month","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched"],"ignoreList":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"sources":["../../src/services/api.ts","../../src/hooks/useAPI.ts","../../node_modules/date-fns/constants.js","../../node_modules/date-fns/constructFrom.js","../../node_modules/date-fns/toDate.js","../../node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/date-fns/startOfWeek.js","../../node_modules/date-fns/startOfISOWeek.js","../../node_modules/date-fns/getISOWeekYear.js","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/date-fns/startOfDay.js","../../node_modules/date-fns/differenceInCalendarDays.js","../../node_modules/date-fns/startOfISOWeekYear.js","../../node_modules/date-fns/isDate.js","../../node_modules/date-fns/isValid.js","../../node_modules/date-fns/startOfYear.js","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/date-fns/locale/en-US.js","../../node_modules/date-fns/getDayOfYear.js","../../node_modules/date-fns/getISOWeek.js","../../node_modules/date-fns/getWeekYear.js","../../node_modules/date-fns/startOfWeekYear.js","../../node_modules/date-fns/getWeek.js","../../node_modules/date-fns/_lib/addLeadingZeros.js","../../node_modules/date-fns/_lib/format/lightFormatters.js","../../node_modules/date-fns/_lib/format/formatters.js","../../node_modules/date-fns/_lib/format/longFormatters.js","../../node_modules/date-fns/_lib/protectedTokens.js","../../node_modules/date-fns/format.js"],"sourcesContent":["// Serviços de API para JSON Server\nconst API_BASE = process.env.NODE_ENV === 'production' \n  ? 'https://epi-bk.onrender.com' \n  : 'http://localhost:3001';\n\n// Helper para fazer requests\nconst apiRequest = async (url: string, options?: RequestInit) => {\n  try {\n    console.log(`🔗 API Request: ${API_BASE}${url}`);\n    \n    const response = await fetch(`${API_BASE}${url}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options?.headers,\n      },\n      mode: 'cors',\n      ...options,\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`HTTP ${response.status}: ${errorText || response.statusText}`);\n    }\n    \n    const data = await response.json();\n    console.log(`✅ API Response: ${data.length || Object.keys(data).length} items`);\n    return data;\n  } catch (error) {\n    console.error('🚨 API Request failed:', error);\n    \n    // Verificar se é um erro de conexão\n    if (error instanceof TypeError && error.message.includes('fetch')) {\n      throw new Error('Não foi possível conectar ao servidor. Verifique se o JSON Server está rodando na porta 3001.');\n    }\n    \n    throw error;\n  }\n};\n\n// ===== CRUD FACTORY =====\nconst createCRUDAPI = (endpoint: string) => ({\n  getAll: () => apiRequest(`/${endpoint}`),\n  getById: (id: string) => apiRequest(`/${endpoint}/${id}`),\n  create: (item: any) => apiRequest(`/${endpoint}`, {\n    method: 'POST',\n    body: JSON.stringify(item),\n  }),\n  update: (id: string, item: any) => apiRequest(`/${endpoint}/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(item),\n  }),\n  patch: (id: string, updates: any) => apiRequest(`/${endpoint}/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify(updates),\n  }),\n  delete: (id: string) => apiRequest(`/${endpoint}/${id}`, {\n    method: 'DELETE',\n  }),\n});\n\n// ===== HOLDINGS (MOCK DATA) =====\nexport const holdingsAPI = {\n  getAll: () => import('../mocks/data').then(m => m.holdings),\n  getById: (id: string) => import('../mocks/data').then(m => m.holdings.find(h => h.id === id)),\n};\n\n// ===== EMPRESAS (MOCK DATA) =====\nexport const empresasAPI = {\n  getAll: () => import('../mocks/data').then(m => m.empresas),\n  getById: (id: string) => import('../mocks/data').then(m => m.empresas.find(e => e.id === id)),\n  getByTipo: (tipo: 'holding' | 'contratada') => \n    import('../mocks/data').then(m => m.empresas.filter(e => e.tipo === tipo)),\n  getContratadas: (holdingId?: string) => \n    import('../mocks/data').then(m => \n      holdingId \n        ? m.empresas.filter(e => e.tipo === 'contratada' && e.holdingId === holdingId)\n        : m.empresas.filter(e => e.tipo === 'contratada')\n    ),\n};\n\n// ===== COLABORADORES (MOCK DATA) =====\nexport const colaboradoresAPI = {\n  getAll: () => import('../mocks/data').then(m => m.colaboradores),\n  getById: (id: string) => import('../mocks/data').then(m => m.colaboradores.find(c => c.id === id)),\n  getByEmpresa: (empresaId: string) => \n    import('../mocks/data').then(m => m.colaboradores.filter(c => c.empresaId === empresaId)),\n  getByStatus: (status: 'ativo' | 'afastado' | 'desligado') =>\n    import('../mocks/data').then(m => m.colaboradores.filter(c => c.status === status)),\n  search: (query: string) => \n    import('../mocks/data').then(m => m.colaboradores.filter(c => \n      c.nome.toLowerCase().includes(query.toLowerCase())\n    )),\n};\n\n// ===== TIPOS EPI (CRUD completo) =====\nexport const tiposEPIAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('tiposEPI'),\n  \n  // Métodos específicos\n  getByCategoria: (categoria: string) => \n    apiRequest(`/tiposEPI?categoria=${encodeURIComponent(categoria)}`),\n  getByStatus: (status: 'ativo' | 'inativo') =>\n    apiRequest(`/tiposEPI?status=${status}`),\n  search: (query: string) => \n    apiRequest(`/tiposEPI?nomeEquipamento_like=${encodeURIComponent(query)}`),\n};\n\n// ===== ESTOQUE (CRUD completo) =====\nexport const estoqueAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('estoque'),\n  \n  // Métodos de consulta específicos\n  getByEmpresa: (empresaId: string) => \n    apiRequest(`/estoque?empresaId=${empresaId}`),\n  getByTipoEPI: (tipoEPIId: string) => \n    apiRequest(`/estoque?tipoEPIId=${tipoEPIId}`),\n  getByStatus: (status: 'disponivel' | 'baixo_estoque' | 'vencido' | 'esgotado') =>\n    apiRequest(`/estoque?status=${status}`),\n  getBaixoEstoque: () => \n    apiRequest('/estoque?status=baixo_estoque'),\n  \n  // Operações específicas\n  ajustarQuantidade: (id: string, novaQuantidade: number) => \n    apiRequest(`/estoque/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ quantidade: novaQuantidade }),\n    }),\n  \n  // Operações de movimentação (para registrar no histórico)\n  entrada: async (id: string, dados: {\n    quantidade: number;\n    responsavelId: string;\n    motivo: string;\n    notaFiscal?: string;\n    observacoes?: string;\n  }) => {\n    // Buscar item atual\n    const item = await apiRequest(`/estoque/${id}`);\n    const novaQuantidade = item.quantidade + dados.quantidade;\n    \n    // Atualizar quantidade\n    const itemAtualizado = await apiRequest(`/estoque/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ quantidade: novaQuantidade }),\n    });\n    \n    // Registrar movimentação\n    await apiRequest('/movimentacoesEstoque', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: `mov_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n        itemEstoqueId: id,\n        tipo: 'entrada',\n        quantidade: dados.quantidade,\n        quantidadeAnterior: item.quantidade,\n        quantidadeAtual: novaQuantidade,\n        responsavelId: dados.responsavelId,\n        motivo: dados.motivo,\n        data: new Date().toISOString(),\n        observacoes: dados.observacoes,\n        notaFiscal: dados.notaFiscal,\n      }),\n    });\n    \n    return itemAtualizado;\n  },\n  \n  saida: async (id: string, dados: {\n    quantidade: number;\n    responsavelId: string;\n    motivo: string;\n    entregaId?: string;\n    observacoes?: string;\n  }) => {\n    // Buscar item atual\n    const item = await apiRequest(`/estoque/${id}`);\n    const novaQuantidade = item.quantidade - dados.quantidade;\n    \n    // Atualizar quantidade\n    const itemAtualizado = await apiRequest(`/estoque/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ quantidade: novaQuantidade }),\n    });\n    \n    // Registrar movimentação\n    await apiRequest('/movimentacoesEstoque', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: `mov_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n        itemEstoqueId: id,\n        tipo: dados.entregaId ? 'entrega' : 'saida',\n        quantidade: dados.quantidade,\n        quantidadeAnterior: item.quantidade,\n        quantidadeAtual: novaQuantidade,\n        responsavelId: dados.responsavelId,\n        motivo: dados.motivo,\n        data: new Date().toISOString(),\n        observacoes: dados.observacoes,\n        entregaId: dados.entregaId,\n      }),\n    });\n    \n    return itemAtualizado;\n  },\n  \n  ajuste: async (id: string, dados: {\n    novaQuantidade: number;\n    responsavelId: string;\n    motivo: string;\n    observacoes?: string;\n  }) => {\n    // Buscar item atual\n    const item = await apiRequest(`/estoque/${id}`);\n    \n    // Atualizar quantidade\n    const itemAtualizado = await apiRequest(`/estoque/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ quantidade: dados.novaQuantidade }),\n    });\n    \n    // Registrar movimentação\n    await apiRequest('/movimentacoesEstoque', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: `mov_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n        itemEstoqueId: id,\n        tipo: 'ajuste',\n        quantidade: Math.abs(dados.novaQuantidade - item.quantidade),\n        quantidadeAnterior: item.quantidade,\n        quantidadeAtual: dados.novaQuantidade,\n        responsavelId: dados.responsavelId,\n        motivo: dados.motivo,\n        data: new Date().toISOString(),\n        observacoes: dados.observacoes,\n      }),\n    });\n    \n    return itemAtualizado;\n  },\n};\n\n// ===== FICHAS EPI (CRUD completo) =====\nexport const fichasEPIAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('fichasEPI'),\n  \n  // Métodos de consulta específicos\n  getByColaborador: (colaboradorId: string) => \n    apiRequest(`/fichasEPI?colaboradorId=${colaboradorId}`),\n  getByEmpresa: (empresaId: string) => \n    apiRequest(`/fichasEPI?empresaId=${empresaId}`),\n  getByStatus: (status: 'ativo' | 'suspenso' | 'arquivado' | 'vencido') =>\n    apiRequest(`/fichasEPI?status=${status}`),\n  \n  // Operações específicas\n  adicionarItem: (fichaId: string, item: any) => {\n    return apiRequest(`/fichasEPI/${fichaId}`)\n      .then(ficha => {\n        const novosItens = [...(ficha.itens || []), item];\n        return apiRequest(`/fichasEPI/${fichaId}`, {\n          method: 'PATCH',\n          body: JSON.stringify({ itens: novosItens }),\n        });\n      });\n  },\n  \n  removerItem: (fichaId: string, itemId: string) => {\n    return apiRequest(`/fichasEPI/${fichaId}`)\n      .then(ficha => {\n        const novosItens = (ficha.itens || []).filter((item: any) => item.id !== itemId);\n        return apiRequest(`/fichasEPI/${fichaId}`, {\n          method: 'PATCH',\n          body: JSON.stringify({ itens: novosItens }),\n        });\n      });\n  },\n};\n\n// ===== ENTREGAS (CRUD completo) =====\nexport const entregasAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('entregas'),\n  \n  // Métodos de consulta específicos\n  getByFicha: (fichaEPIId: string) => \n    apiRequest(`/entregas?fichaEPIId=${fichaEPIId}`),\n  getByStatus: (status: 'nao_assinado' | 'assinado' | 'pendente') =>\n    apiRequest(`/entregas?status=${status}`),\n  getPendentesAssinatura: () => \n    apiRequest('/entregas?status=nao_assinado'),\n  \n  // Operações específicas\n  assinar: (id: string, dadosAssinatura: any) => \n    apiRequest(`/entregas/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        status: 'assinado',\n        assinatura: {\n          dataAssinatura: new Date().toISOString(),\n          ...dadosAssinatura,\n        },\n      }),\n    }),\n  \n  cancelarAssinatura: (id: string) => \n    apiRequest(`/entregas/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        status: 'nao_assinado',\n        assinatura: null,\n      }),\n    }),\n};\n\n// ===== MOVIMENTAÇÕES ESTOQUE (CRUD completo) =====\nexport const movimentacoesAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('movimentacoesEstoque'),\n  \n  // Métodos de consulta específicos\n  getByItem: (itemEstoqueId: string) => \n    apiRequest(`/movimentacoesEstoque?itemEstoqueId=${itemEstoqueId}`),\n  getByTipo: (tipo: 'entrada' | 'saida' | 'ajuste' | 'devolucao' | 'perda' | 'vencimento') =>\n    apiRequest(`/movimentacoesEstoque?tipo=${tipo}`),\n  getByResponsavel: (responsavelId: string) => \n    apiRequest(`/movimentacoesEstoque?responsavelId=${responsavelId}`),\n};\n\n// ===== NOTIFICAÇÕES (CRUD completo) =====\nexport const notificacoesAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('notificacoes'),\n  \n  // Métodos de consulta específicos\n  getNaoLidas: () => apiRequest('/notificacoes?lida=false'),\n  getByTipo: (tipo: string) => \n    apiRequest(`/notificacoes?tipo=${tipo}`),\n  \n  // Operações específicas\n  marcarComoLida: (id: string) => \n    apiRequest(`/notificacoes/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ lida: true }),\n    }),\n  \n  marcarComoNaoLida: (id: string) => \n    apiRequest(`/notificacoes/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ lida: false }),\n    }),\n};\n\n// ===== HISTÓRICO (CRUD completo) =====\nexport const historicoAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('historico'),\n  \n  // Métodos de consulta específicos\n  getByFicha: (fichaEPIId: string) => \n    apiRequest(`/historico?fichaEPIId=${fichaEPIId}&_sort=data&_order=desc`),\n  getByTipo: (tipo: string) => \n    apiRequest(`/historico?tipo=${tipo}`),\n  getByResponsavel: (responsavel: string) => \n    apiRequest(`/historico?responsavel=${responsavel}`),\n};\n\n// ===== HISTÓRICO DE ESTOQUE (específico para movimentações) =====\nexport const historicoEstoqueAPI = {\n  // CRUD básico usando factory (só getAll, getById, create para este caso)\n  getAll: () => apiRequest('/historicoEstoque'),\n  getById: (id: string) => apiRequest(`/historicoEstoque/${id}`),\n  create: (evento: any) => apiRequest('/historicoEstoque', {\n    method: 'POST',\n    body: JSON.stringify(evento),\n  }),\n  \n  // Métodos de consulta específicos\n  getByItem: (itemEstoqueId: string) => \n    apiRequest(`/historicoEstoque?itemEstoqueId=${itemEstoqueId}&_sort=data&_order=desc`),\n  getByTipo: (tipo: string) => \n    apiRequest(`/historicoEstoque?tipo=${tipo}`),\n  getByResponsavel: (responsavel: string) => \n    apiRequest(`/historicoEstoque?responsavel=${responsavel}`),\n  getByPeriodo: (dataInicio: string, dataFim: string) =>\n    apiRequest(`/historicoEstoque?data_gte=${dataInicio}&data_lte=${dataFim}&_sort=data&_order=desc`),\n  \n  // Helper para criar eventos de estoque automaticamente\n  registrarEvento: async (dados: {\n    itemEstoqueId: string;\n    tipo: 'entrada' | 'saida' | 'ajuste' | 'devolucao' | 'perda' | 'vencimento' | 'entrega' | 'cadastro';\n    responsavel: string;\n    descricao: string;\n    quantidadeAnterior: number;\n    quantidadeAtual: number;\n    quantidade: number;\n    detalhes?: any;\n  }) => {\n    const evento = {\n      id: `hist_est_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      ...dados,\n      data: new Date().toISOString(),\n    };\n    \n    return apiRequest('/historicoEstoque', {\n      method: 'POST',\n      body: JSON.stringify(evento),\n    });\n  }\n};\n\n// ===== OPERAÇÕES COMPOSTAS =====\nexport const operacoesAPI = {\n  // Criar entrega completa (entrega + atualizar ficha + movimentar estoque)\n  criarEntregaCompleta: async (dadosEntrega: {\n    fichaEPIId: string;\n    itens: any[];\n    responsavel: string;\n  }) => {\n    try {\n      // 0. Buscar dados da ficha para obter empresaId e colaborador\n      const ficha = await fichasEPIAPI.getById(dadosEntrega.fichaEPIId);\n      const colaborador = await colaboradoresAPI.getById(ficha.colaboradorId);\n      \n      if (!colaborador) {\n        throw new Error('Colaborador não encontrado');\n      }\n      \n      // 1. Criar a entrega\n      const entrega = await entregasAPI.create({\n        id: `entrega_${Date.now()}`,\n        fichaEPIId: dadosEntrega.fichaEPIId,\n        dataEntrega: new Date().toISOString(),\n        itens: dadosEntrega.itens,\n        responsavel: dadosEntrega.responsavel,\n        status: 'nao_assinado',\n        qrCode: `QR_${Date.now()}`,\n        linkAssinatura: `https://app.datalife.com/assinatura/${Date.now()}`,\n      });\n      \n      // 2. Processar redução de estoque automaticamente\n      try {\n        const { processarEntregaEstoque } = await import('../utils/estoqueHelpers');\n        const resultadoEstoque = await processarEntregaEstoque(\n          entrega.id,\n          dadosEntrega.fichaEPIId,\n          dadosEntrega.itens.map(item => ({\n            tipoEPIId: item.tipoEPIId,\n            quantidade: item.quantidade\n          })),\n          ficha.empresaId,\n          colaborador.nome,\n          dadosEntrega.responsavel\n        );\n        \n        if (!resultadoEstoque.sucesso && resultadoEstoque.erros.length > 0) {\n          console.warn('Alertas na redução de estoque:', resultadoEstoque.erros);\n          // Continuar mesmo com alertas, mas logar para análise\n        }\n        \n        console.log('Estoque processado (entrega):', resultadoEstoque.itensProcessados);\n      } catch (error) {\n        console.error('Erro ao processar estoque durante entrega:', error);\n        // Não falhar a entrega por erro de estoque, mas alertar\n        console.warn('Entrega criada, mas estoque não foi atualizado automaticamente');\n      }\n      \n      // 3. Atualizar a ficha com os novos itens\n      const novosItensFicha = dadosEntrega.itens.map(item => ({\n        id: `ficha_${item.id}`,\n        tipoEPIId: item.tipoEPIId,\n        quantidade: item.quantidade,\n        dataEntrega: entrega.dataEntrega,\n        dataValidade: item.dataValidade,\n        status: 'entregue',\n        entregaId: entrega.id,\n        observacoes: `Entrega #${entrega.id}`,\n      }));\n      \n      await fichasEPIAPI.patch(dadosEntrega.fichaEPIId, {\n        itens: [...(ficha.itens || []), ...novosItensFicha],\n      });\n      \n      // 4. Registrar no histórico\n      await historicoAPI.create({\n        id: `hist_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        fichaEPIId: dadosEntrega.fichaEPIId,\n        tipo: 'entrega_criada',\n        responsavel: dadosEntrega.responsavel,\n        descricao: `Entrega #${entrega.id} criada com ${dadosEntrega.itens.length} item(ns)`,\n        data: new Date().toISOString(),\n        detalhes: {\n          entregaId: entrega.id,\n          equipamentos: dadosEntrega.itens.map(item => item.tipoEPIId),\n          quantidades: dadosEntrega.itens.map(item => item.quantidade)\n        }\n      });\n\n      return entrega;\n    } catch (error) {\n      console.error('Erro ao criar entrega completa:', error);\n      throw error;\n    }\n  },\n\n  // Editar entrega completa (entrega + atualizar ficha + ajustar estoque)\n  editarEntregaCompleta: async (\n    entregaId: string,\n    novosItens: any[]\n  ) => {\n    try {\n      // 1. Buscar entrega atual\n      const entregaAtual = await entregasAPI.getById(entregaId);\n      const ficha = await fichasEPIAPI.getById(entregaAtual.fichaEPIId);\n      const colaborador = await colaboradoresAPI.getById(ficha.colaboradorId);\n      \n      if (!colaborador) {\n        throw new Error('Colaborador não encontrado');\n      }\n      \n      // 2. Preparar dados para comparação do estoque\n      const itensAntigos = entregaAtual.itens.map((item: any) => ({\n        tipoEPIId: item.tipoEPIId,\n        quantidade: item.quantidade\n      }));\n      \n      const itensNovosParaEstoque = novosItens.map((item: any) => ({\n        tipoEPIId: item.tipoEPIId,\n        quantidade: item.quantidade\n      }));\n      \n      // 3. Processar ajuste de estoque automaticamente\n      try {\n        const { processarEdicaoEntregaEstoque } = await import('../utils/estoqueHelpers');\n        const resultadoEstoque = await processarEdicaoEntregaEstoque(\n          entregaId,\n          itensAntigos,\n          itensNovosParaEstoque,\n          ficha.empresaId,\n          colaborador.nome,\n          entregaAtual.responsavel\n        );\n        \n        if (!resultadoEstoque.sucesso && resultadoEstoque.erros.length > 0) {\n          console.warn('Alertas no ajuste de estoque (edição):', resultadoEstoque.erros);\n        }\n        \n        console.log('Estoque ajustado (edição):', resultadoEstoque.ajustes);\n      } catch (error) {\n        console.error('Erro ao processar ajuste de estoque durante edição:', error);\n        // Não falhar a edição por erro de estoque, mas alertar\n        console.warn('Entrega editada, mas estoque não foi ajustado automaticamente');\n      }\n      \n      // 4. Atualizar a entrega\n      const entregaAtualizada = await entregasAPI.update(entregaId, {\n        ...entregaAtual,\n        itens: novosItens,\n        dataEntrega: new Date().toISOString()\n      });\n\n      // 5. Remover itens antigos da ficha que pertencem a esta entrega\n      const itensFichaRestantes = ficha.itens.filter((item: any) => item.entregaId !== entregaId);\n      \n      // 6. Adicionar novos itens à ficha\n      const novosItensFicha = novosItens.map((item: any) => ({\n        id: `ficha_edit_${item.id}`,\n        tipoEPIId: item.tipoEPIId,\n        quantidade: item.quantidade,\n        dataEntrega: entregaAtualizada.dataEntrega,\n        dataValidade: item.dataValidade,\n        status: 'entregue',\n        entregaId: entregaId,\n        observacoes: `Entrega #${entregaId} (editada)`\n      }));\n\n      // 7. Atualizar a ficha\n      await fichasEPIAPI.update(entregaAtual.fichaEPIId, {\n        ...ficha,\n        itens: [...itensFichaRestantes, ...novosItensFicha]\n      });\n\n      // 8. Registrar no histórico\n      await historicoAPI.create({\n        id: `hist_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        fichaEPIId: entregaAtual.fichaEPIId,\n        tipo: 'entrega_editada',\n        responsavel: entregaAtual.responsavel,\n        descricao: `Entrega #${entregaId} editada - ${novosItens.length} item(ns)`,\n        data: new Date().toISOString(),\n        detalhes: {\n          entregaId: entregaId,\n          equipamentos: novosItens.map(item => item.tipoEPIId),\n          quantidades: novosItens.map(item => item.quantidade)\n        }\n      });\n\n      return entregaAtualizada;\n    } catch (error) {\n      console.error('Erro ao editar entrega completa:', error);\n      throw error;\n    }\n  },\n\n  // Excluir entrega completa (entrega + remover da ficha + registrar histórico)\n  excluirEntregaCompleta: async (entregaId: string) => {\n    try {\n      // 1. Buscar entrega atual\n      const entrega = await entregasAPI.getById(entregaId);\n      const ficha = await fichasEPIAPI.getById(entrega.fichaEPIId);\n      \n      // 2. Remover itens da ficha que pertencem a esta entrega\n      const itensFichaRestantes = ficha.itens.filter((item: any) => item.entregaId !== entregaId);\n      \n      // 3. Atualizar a ficha\n      await fichasEPIAPI.update(entrega.fichaEPIId, {\n        ...ficha,\n        itens: itensFichaRestantes\n      });\n\n      // 4. Registrar no histórico\n      await historicoAPI.create({\n        id: `hist_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        fichaEPIId: entrega.fichaEPIId,\n        tipo: 'entrega_excluida',\n        responsavel: entrega.responsavel,\n        descricao: `Entrega #${entregaId} excluída - ${entrega.itens.length} item(ns) removidos`,\n        data: new Date().toISOString(),\n        detalhes: {\n          entregaId: entregaId,\n          equipamentos: entrega.itens.map((item: any) => item.tipoEPIId),\n          quantidades: entrega.itens.map((item: any) => item.quantidade)\n        }\n      });\n\n      // 5. Excluir a entrega\n      await entregasAPI.delete(entregaId);\n\n      return true;\n    } catch (error) {\n      console.error('Erro ao excluir entrega completa:', error);\n      throw error;\n    }\n  },\n\n  // Processar devolução de itens EPI\n  processarDevolucao: async (dadosDevolucao: {\n    fichaEPIId: string;\n    itens: Array<{ id: string; tipoEPIId: string; quantidade: number; motivo?: string }>;\n    responsavel: string;\n  }) => {\n    try {\n      // 0. Buscar dados da ficha para obter empresaId e colaborador\n      const ficha = await fichasEPIAPI.getById(dadosDevolucao.fichaEPIId);\n      const colaborador = await colaboradoresAPI.getById(ficha.colaboradorId);\n      \n      if (!colaborador) {\n        throw new Error('Colaborador não encontrado');\n      }\n      \n      // 1. Processar devolução no estoque automaticamente\n      try {\n        const { processarDevolucaoEstoque } = await import('../utils/estoqueHelpers');\n        const resultadoEstoque = await processarDevolucaoEstoque(\n          dadosDevolucao.fichaEPIId,\n          dadosDevolucao.itens.map((item: any) => ({\n            tipoEPIId: item.tipoEPIId,\n            quantidade: item.quantidade,\n            motivo: item.motivo\n          })),\n          ficha.empresaId,\n          colaborador.nome,\n          dadosDevolucao.responsavel\n        );\n        \n        if (!resultadoEstoque.sucesso && resultadoEstoque.erros.length > 0) {\n          console.warn('Alertas na devolução de estoque:', resultadoEstoque.erros);\n        }\n        \n        console.log('Estoque processado (devolução):', resultadoEstoque.itensProcessados);\n      } catch (error) {\n        console.error('Erro ao processar devolução no estoque:', error);\n        // Não falha a operação principal, apenas registra o erro\n      }\n      \n      // 2. Atualizar status dos itens na ficha\n      const itensAtualizados = ficha.itens.map((item: any) => {\n        const itemDevolucao = dadosDevolucao.itens.find(dev => dev.id === item.id);\n        if (itemDevolucao) {\n          return {\n            ...item,\n            status: 'devolvido',\n            dataVencimento: new Date().toISOString(),\n            observacoes: itemDevolucao.motivo || 'Item devolvido'\n          };\n        }\n        return item;\n      });\n      \n      // 3. Atualizar a ficha\n      await fichasEPIAPI.update(dadosDevolucao.fichaEPIId, {\n        ...ficha,\n        itens: itensAtualizados\n      });\n      \n      // 4. Registrar no histórico\n      await historicoAPI.create({\n        id: `hist_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        fichaEPIId: dadosDevolucao.fichaEPIId,\n        tipo: 'devolucao_processada',\n        responsavel: dadosDevolucao.responsavel,\n        descricao: `Devolução de ${dadosDevolucao.itens.length} item(ns) processada`,\n        data: new Date().toISOString(),\n        detalhes: {\n          equipamentos: dadosDevolucao.itens.map(item => item.tipoEPIId),\n          quantidades: dadosDevolucao.itens.map(item => item.quantidade),\n          motivos: dadosDevolucao.itens.map(item => item.motivo || 'Não informado')\n        }\n      });\n\n      return {\n        sucesso: true,\n        itensDevolvidos: dadosDevolucao.itens.length\n      };\n    } catch (error) {\n      console.error('Erro ao processar devolução:', error);\n      throw error;\n    }\n  },\n  \n  // Buscar dados completos de uma ficha (com colaborador, empresa, etc.)\n  getFichaCompleta: async (fichaId: string) => {\n    try {\n      const [ficha, entregas] = await Promise.all([\n        fichasEPIAPI.getById(fichaId),\n        entregasAPI.getByFicha(fichaId),\n      ]);\n      \n      const [colaborador, empresa] = await Promise.all([\n        colaboradoresAPI.getById(ficha.colaboradorId),\n        empresasAPI.getById(ficha.empresaId),\n      ]);\n      \n      return {\n        ficha,\n        colaborador,\n        empresa,\n        entregas,\n      };\n    } catch (error) {\n      console.error('Erro ao buscar ficha completa:', error);\n      throw error;\n    }\n  },\n};\n\n// ===== NOTAS DE ENTRADA (CRUD completo) =====\nexport const notasEntradaAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('notasEntrada'),\n  \n  // Métodos de consulta específicos\n  getByEmpresa: (empresaId: string) => \n    apiRequest(`/notasEntrada?empresaId=${empresaId}&_sort=data&_order=desc`),\n  getByStatus: (status: 'pendente' | 'processada' | 'cancelada') =>\n    apiRequest(`/notasEntrada?status=${status}&_sort=data&_order=desc`),\n  getByResponsavel: (responsavel: string) => \n    apiRequest(`/notasEntrada?responsavel=${responsavel}&_sort=data&_order=desc`),\n  getByPeriodo: (dataInicio: string, dataFim: string) =>\n    apiRequest(`/notasEntrada?data_gte=${dataInicio}&data_lte=${dataFim}&_sort=data&_order=desc`),\n  \n  // Processar nota de entrada (atualizar estoque)\n  processar: async (notaId: string) => {\n    const nota = await apiRequest(`/notasEntrada/${notaId}`);\n    \n    // Atualizar status para processada\n    await apiRequest(`/notasEntrada/${notaId}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        status: 'processada',\n        dataProcessamento: new Date().toISOString()\n      })\n    });\n    \n    // Processar cada item da nota\n    for (const item of nota.itens) {\n      try {\n        const estoqueId = `estoque_almox_${item.tipoEPIId}`;\n        \n        // Verificar se o item de estoque existe\n        try {\n          await estoqueAPI.getById(estoqueId);\n        } catch (error) {\n          // Se não existe, criar o item de estoque primeiro\n          console.log(`Criando item de estoque para ${item.tipoEPIId}`);\n          await estoqueAPI.create({\n            id: estoqueId,\n            tipoEPIId: item.tipoEPIId,\n            empresaId: 'almoxarifado',\n            quantidade: 0,\n            quantidadeMinima: 10,\n            localizacao: 'Almoxarifado Central',\n            lote: item.lote || `LOTE-${Date.now()}`,\n            dataValidade: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] // 1 ano\n          });\n        }\n        \n        await estoqueAPI.entrada(estoqueId, {\n          quantidade: item.quantidade,\n          responsavelId: nota.responsavel,\n          motivo: `Entrada via Nota ${nota.numeroNota}`,\n          notaFiscal: nota.notaFiscal,\n          observacoes: `Processamento automático da nota de entrada ${nota.numeroNota}`\n        });\n      } catch (error) {\n        console.error(`Erro ao processar item ${item.tipoEPIId} da nota ${nota.numeroNota}:`, error);\n      }\n    }\n    \n    return nota;\n  }\n};\n\n// ===== NOTAS DE SAÍDA (CRUD completo) =====\nexport const notasSaidaAPI = {\n  // CRUD básico usando factory\n  ...createCRUDAPI('notasSaida'),\n  \n  // Métodos de consulta específicos\n  getByEmpresa: (empresaId: string) => \n    apiRequest(`/notasSaida?empresaId=${empresaId}&_sort=data&_order=desc`),\n  getByStatus: (status: 'pendente' | 'processada' | 'cancelada') =>\n    apiRequest(`/notasSaida?status=${status}&_sort=data&_order=desc`),\n  getByResponsavel: (responsavel: string) => \n    apiRequest(`/notasSaida?responsavel=${responsavel}&_sort=data&_order=desc`),\n  getByPeriodo: (dataInicio: string, dataFim: string) =>\n    apiRequest(`/notasSaida?data_gte=${dataInicio}&data_lte=${dataFim}&_sort=data&_order=desc`),\n  \n  // Processar nota de saída (reduzir estoque)\n  processar: async (notaId: string) => {\n    const nota = await apiRequest(`/notasSaida/${notaId}`);\n    \n    // Atualizar status para processada\n    await apiRequest(`/notasSaida/${notaId}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        status: 'processada',\n        dataProcessamento: new Date().toISOString()\n      })\n    });\n    \n    // Processar cada item da nota\n    for (const item of nota.itens) {\n      try {\n        const estoqueId = `estoque_almox_${item.tipoEPIId}`;\n        \n        // Verificar se o item de estoque existe\n        try {\n          await estoqueAPI.getById(estoqueId);\n        } catch (error) {\n          console.warn(`Item de estoque ${estoqueId} não encontrado para saída. Operação cancelada.`);\n          continue; // Pular este item se não existe no estoque\n        }\n        \n        await estoqueAPI.saida(estoqueId, {\n          quantidade: item.quantidade,\n          responsavelId: nota.responsavel,\n          motivo: `Saída via Nota ${nota.numeroNota}`,\n          observacoes: `Processamento automático da nota de saída ${nota.numeroNota} - ${nota.destinatario || 'Destinatário não informado'}`\n        });\n      } catch (error) {\n        console.error(`Erro ao processar item ${item.tipoEPIId} da nota ${nota.numeroNota}:`, error);\n      }\n    }\n    \n    return nota;\n  }\n};\n\n// ===== OPERAÇÕES DE MOVIMENTAÇÃO (novas funcionalidades) =====\nexport const movimentacaoNotasAPI = {\n  // Criar nova movimentação multi-item (gera nota)\n  criarMovimentacao: async (dados: {\n    tipo: 'entrada' | 'saida';\n    responsavel: string;\n    motivo: string;\n    observacoes?: string;\n    fornecedor?: string;\n    notaFiscal?: string;\n    destinatario?: string;\n    solicitante?: string;\n    itens: Array<{\n      tipoEPIId: string;\n      quantidade: number;\n      custoUnitario?: number;\n      lote?: string;\n      observacoes?: string;\n    }>;\n  }) => {\n    const timestamp = Date.now();\n    const numeroNota = `${dados.tipo.toUpperCase()}-${timestamp}`;\n    \n    // Preparar dados da nota\n    const notaData = {\n      id: `nota_${dados.tipo}_${timestamp}`,\n      numeroNota,\n      empresaId: 'almoxarifado',\n      data: new Date().toISOString(),\n      responsavel: dados.responsavel,\n      motivo: dados.motivo,\n      status: 'pendente',\n      observacoes: dados.observacoes,\n      itens: dados.itens.map(item => ({\n        id: `item_${timestamp}_${Math.random().toString(36).substr(2, 5)}`,\n        ...item\n      }))\n    };\n    \n    // Adicionar campos específicos do tipo\n    if (dados.tipo === 'entrada') {\n      Object.assign(notaData, {\n        fornecedor: dados.fornecedor,\n        notaFiscal: dados.notaFiscal,\n        valorTotal: dados.itens.reduce((total, item) => \n          total + (item.quantidade * (item.custoUnitario || 0)), 0\n        )\n      });\n    } else {\n      Object.assign(notaData, {\n        destinatario: dados.destinatario,\n        solicitante: dados.solicitante\n      });\n    }\n    \n    // Criar a nota\n    const nota = dados.tipo === 'entrada' \n      ? await notasEntradaAPI.create(notaData)\n      : await notasSaidaAPI.create(notaData);\n    \n    // Processar automaticamente (atualizar estoque)\n    if (dados.tipo === 'entrada') {\n      await notasEntradaAPI.processar(nota.id);\n    } else {\n      await notasSaidaAPI.processar(nota.id);\n    }\n    \n    return nota;\n  },\n  \n  // Editar nota existente (com reflexão no estoque)\n  editarNota: async (\n    notaId: string, \n    tipo: 'entrada' | 'saida',\n    novosItens: any[]\n  ) => {\n    // Buscar nota atual\n    const notaAtual = tipo === 'entrada' \n      ? await notasEntradaAPI.getById(notaId)\n      : await notasSaidaAPI.getById(notaId);\n    \n    // Se já foi processada, reverter movimentações antigas\n    if (notaAtual.status === 'processada') {\n      for (const item of notaAtual.itens) {\n        try {\n          // Reverter movimentação anterior\n          if (tipo === 'entrada') {\n            await estoqueAPI.saida(`estoque_almox_${item.tipoEPIId}`, {\n              quantidade: item.quantidade,\n              responsavelId: notaAtual.responsavel,\n              motivo: `Reversão da nota ${notaAtual.numeroNota} (edição)`,\n              observacoes: `Estorno automático para edição da nota`\n            });\n          } else {\n            await estoqueAPI.entrada(`estoque_almox_${item.tipoEPIId}`, {\n              quantidade: item.quantidade,\n              responsavelId: notaAtual.responsavel,\n              motivo: `Reversão da nota ${notaAtual.numeroNota} (edição)`,\n              observacoes: `Estorno automático para edição da nota`\n            });\n          }\n        } catch (error) {\n          console.error(`Erro ao reverter item ${item.tipoEPIId}:`, error);\n        }\n      }\n    }\n    \n    // Atualizar nota\n    const notaAtualizada = {\n      ...notaAtual,\n      itens: novosItens,\n      status: 'pendente' // Reset para pendente após edição\n    };\n    \n    const nota = tipo === 'entrada'\n      ? await notasEntradaAPI.update(notaId, notaAtualizada)\n      : await notasSaidaAPI.update(notaId, notaAtualizada);\n    \n    // Processar novamente\n    if (tipo === 'entrada') {\n      await notasEntradaAPI.processar(notaId);\n    } else {\n      await notasSaidaAPI.processar(notaId);\n    }\n    \n    return nota;\n  }\n};\n\n// Exportar todas as APIs\nexport default {\n  holdings: holdingsAPI,\n  empresas: empresasAPI,\n  colaboradores: colaboradoresAPI,\n  tiposEPI: tiposEPIAPI,\n  estoque: estoqueAPI,\n  fichasEPI: fichasEPIAPI,\n  entregas: entregasAPI,\n  movimentacoes: movimentacoesAPI,\n  notificacoes: notificacoesAPI,\n  historico: historicoAPI,\n  historicoEstoque: historicoEstoqueAPI,\n  operacoes: operacoesAPI,\n  notasEntrada: notasEntradaAPI,\n  notasSaida: notasSaidaAPI,\n  movimentacaoNotas: movimentacaoNotasAPI,\n};","import { useState, useEffect } from 'react';\n\n// Hook genérico para operações de API\nexport function useAPI<T>(\n  apiCall: () => Promise<T>,\n  dependencies: any[] = []\n) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await apiCall();\n        \n        if (isMounted) {\n          setData(result);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setError(err instanceof Error ? err.message : 'Erro desconhecido');\n          console.error('API Error:', err);\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, dependencies);\n\n  const refetch = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await apiCall();\n      setData(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro desconhecido');\n      console.error('API Refetch Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, refetch };\n}\n\n// Hook para operações CRUD\nexport function useCRUD<T>(apiService: {\n  getAll: () => Promise<T[]>;\n  create: (item: any) => Promise<T>;\n  update: (id: string, item: any) => Promise<T>;\n  delete: (id: string) => Promise<void>;\n}) {\n  const [items, setItems] = useState<T[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    loadItems();\n  }, []);\n\n  const loadItems = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await apiService.getAll();\n      setItems(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar dados');\n      console.error('Load Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createItem = async (item: any) => {\n    try {\n      const newItem = await apiService.create(item);\n      setItems(prev => [...prev, newItem]);\n      return newItem;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar item');\n      throw err;\n    }\n  };\n\n  const updateItem = async (id: string, updates: any) => {\n    try {\n      const updatedItem = await apiService.update(id, updates);\n      setItems(prev => prev.map(item => \n        (item as any).id === id ? updatedItem : item\n      ));\n      return updatedItem;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao atualizar item');\n      throw err;\n    }\n  };\n\n  const deleteItem = async (id: string) => {\n    try {\n      await apiService.delete(id);\n      setItems(prev => prev.filter(item => (item as any).id !== id));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao deletar item');\n      throw err;\n    }\n  };\n\n  return {\n    items,\n    loading,\n    error,\n    loadItems,\n    createItem,\n    updateItem,\n    deleteItem,\n  };\n}\n\n// Hook específico para fichas EPI\nexport function useFichasEPI() {\n  const [fichas, setFichas] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFichas = async (retryCount = 0) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Importar API dinamicamente para evitar problemas de importação circular\n      const { fichasEPIAPI } = await import('../services/api');\n      const data = await fichasEPIAPI.getAll();\n      setFichas(data);\n    } catch (err) {\n      console.error('Load Fichas Error:', err);\n      \n      // Tentar novamente até 3 vezes se for erro de conexão\n      if (retryCount < 3 && err instanceof Error && err.message.includes('conectar ao servidor')) {\n        console.log(`Tentativa ${retryCount + 1}/3 de reconexão em 2s...`);\n        setTimeout(() => loadFichas(retryCount + 1), 2000);\n        return;\n      }\n      \n      setError(err instanceof Error ? err.message : 'Erro ao carregar fichas');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFichas();\n  }, []);\n\n  const createFicha = async (ficha: any) => {\n    try {\n      const { fichasEPIAPI } = await import('../services/api');\n      const newFicha = await fichasEPIAPI.create(ficha);\n      setFichas(prev => [...prev, newFicha]);\n      return newFicha;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar ficha');\n      throw err;\n    }\n  };\n\n  const updateFicha = async (id: string, updates: any) => {\n    try {\n      const { fichasEPIAPI } = await import('../services/api');\n      const updatedFicha = await fichasEPIAPI.update(id, updates);\n      setFichas(prev => prev.map(ficha => \n        ficha.id === id ? updatedFicha : ficha\n      ));\n      return updatedFicha;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao atualizar ficha');\n      throw err;\n    }\n  };\n\n  return {\n    fichas,\n    loading,\n    error,\n    loadFichas,\n    createFicha,\n    updateFicha,\n  };\n}\n\n// Hook específico para entregas\nexport function useEntregas(fichaId?: string) {\n  const [entregas, setEntregas] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadEntregas = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { entregasAPI } = await import('../services/api');\n      const data = fichaId \n        ? await entregasAPI.getByFicha(fichaId)\n        : await entregasAPI.getAll();\n      setEntregas(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar entregas');\n      console.error('Load Entregas Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadEntregas();\n  }, [fichaId]);\n\n  const createEntrega = async (entrega: any) => {\n    try {\n      const { entregasAPI } = await import('../services/api');\n      const newEntrega = await entregasAPI.create(entrega);\n      setEntregas(prev => [...prev, newEntrega]);\n      return newEntrega;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar entrega');\n      throw err;\n    }\n  };\n\n  const updateEntrega = async (id: string, updates: any) => {\n    try {\n      const { entregasAPI } = await import('../services/api');\n      const updatedEntrega = await entregasAPI.update(id, updates);\n      setEntregas(prev => prev.map(entrega => \n        entrega.id === id ? updatedEntrega : entrega\n      ));\n      return updatedEntrega;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao atualizar entrega');\n      throw err;\n    }\n  };\n\n  return {\n    entregas,\n    loading,\n    error,\n    loadEntregas,\n    createEntrega,\n    updateEntrega,\n  };\n}\n\n// Hook para gerenciar filtros de páginas\nexport function useFilters<T extends Record<string, any>>(initialFilters: T) {\n  const [filters, setFilters] = useState<T>(initialFilters);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const updateFilter = (key: keyof T, value: any) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setCurrentPage(1); // Reset page when filter changes\n  };\n\n  const resetFilters = () => {\n    setFilters(initialFilters);\n    setSearchTerm('');\n    setCurrentPage(1);\n  };\n\n  const resetSearch = () => {\n    setSearchTerm('');\n    setCurrentPage(1);\n  };\n\n  return {\n    filters,\n    searchTerm,\n    currentPage,\n    setSearchTerm,\n    setCurrentPage,\n    updateFilter,\n    resetFilters,\n    resetSearch,\n  };\n}","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n"],"file":"assets/format-G53zHD2b.js"}