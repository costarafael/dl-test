{"version":3,"file":"EstoqueEPIs-nGA4B8TF.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/AdjustmentsHorizontalIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowUpIcon.js","../../src/pages/EstoqueEPIs.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction AdjustmentsHorizontalIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(AdjustmentsHorizontalIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\nimport { \n  Button, \n  Badge, \n  Modal, \n  TextInput, \n  Label, \n  Select, \n  Textarea,\n  Checkbox,\n  Dropdown,\n  Pagination\n} from 'flowbite-react';\nimport IconContainer from '../components/common/IconContainer';\nimport { \n  ArrowUpIcon,\n  AdjustmentsHorizontalIcon as AdjustmentsIcon,\n  EllipsisVerticalIcon,\n  ArrowDownTrayIcon,\n  FunnelIcon\n} from '@heroicons/react/24/outline';\nimport { estoque, tiposEPI } from '../mocks/data';\nimport { ItemEstoque } from '../types';\nimport StatusIndicator from '../components/StatusIndicator';\nimport { getCategoryIcon } from '../utils/epiIcons';\n\nconst EstoqueEPIs: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState<'entrada' | 'ajuste'>('entrada');\n  const [selectedItem, setSelectedItem] = useState<ItemEstoque | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtroStatus, setFiltroStatus] = useState('');\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n\n  // Função auxiliar para obter o saldo de um item de estoque\n  const getSaldo = (item: ItemEstoque): number => {\n    return item.quantidade || 0;\n  };\n\n  // Função auxiliar para obter a data formatada\n  const formatarData = (data?: Date | string): string => {\n    if (!data) return '-';\n    const dateObj = typeof data === 'string' ? new Date(data) : data;\n    return dateObj.toLocaleDateString('pt-BR');\n  };\n\n  const getStatusText = (saldo: number) => {\n    if (saldo <= 0) return 'falta';\n    if (saldo <= 10) return 'baixo';\n    return 'normal';\n  };\n\n  const handleOpenModal = (type: 'entrada' | 'ajuste', itemEstoque?: ItemEstoque) => {\n    setModalType(type);\n    setSelectedItem(itemEstoque || null);\n    setShowModal(true);\n  };\n\n  const filteredEstoque = estoque.filter(item => {\n    const tipoEPI = tiposEPI.find(tipo => tipo.id === item.tipoEPIId);\n    if (!tipoEPI) return false;\n    \n    const matchesSearch = !searchTerm || \n      tipoEPI.nomeEquipamento.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      tipoEPI.numeroCA.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      tipoEPI.fabricante.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const saldo = getSaldo(item);\n    const matchesStatus = !filtroStatus || \n      (filtroStatus === 'normal' && saldo > 10) ||\n      (filtroStatus === 'baixo' && saldo > 0 && saldo <= 10) ||\n      (filtroStatus === 'falta' && saldo <= 0);\n    \n    return matchesSearch && matchesStatus;\n  });\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedItems(filteredEstoque.map(item => item.id));\n    } else {\n      setSelectedItems([]);\n    }\n  };\n\n  const handleSelectItem = (itemId: string, checked: boolean) => {\n    if (checked) {\n      setSelectedItems([...selectedItems, itemId]);\n    } else {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900\">\n      <div className=\"mx-auto max-w-full\">\n        {/* Header */}\n        <div className=\"bg-white dark:bg-gray-900 relative shadow-md sm:rounded-lg overflow-hidden\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4\">\n            <div className=\"w-full md:w-1/2\">\n              <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Estoque</h1>\n              <p className=\"text-gray-500 dark:text-gray-400\">Controle de entrada, saída e níveis de estoque</p>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Button onClick={() => handleOpenModal('entrada')} color=\"success\" sizing=\"sm\" className=\"rounded-sm\">\n                <ArrowUpIcon className=\"w-4 h-4 mr-2\" />\n                Entrada\n              </Button>\n              <Button onClick={() => handleOpenModal('ajuste')} color=\"light\" sizing=\"sm\" className=\"rounded-sm\">\n                <AdjustmentsIcon className=\"w-4 h-4 mr-2\" />\n                Ajuste\n              </Button>\n              <Dropdown\n                label=\"\"\n                dismissOnClick={false}\n                renderTrigger={() => (\n                  <Button color=\"light\" sizing=\"sm\" className=\"rounded-sm\">\n                    <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                  </Button>\n                )}\n              >\n                <Dropdown.Item icon={ArrowDownTrayIcon}>\n                  Exportar\n                </Dropdown.Item>\n                <Dropdown.Item icon={ArrowUpIcon}>\n                  Relatório de estoque\n                </Dropdown.Item>\n              </Dropdown>\n            </div>\n          </div>\n\n          {/* Search and Filters */}\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4 border-t dark:border-gray-700\">\n            <div className=\"w-full md:w-1/3\">\n              <Label htmlFor=\"table-search\" className=\"sr-only\">Buscar</Label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\"></path>\n                  </svg>\n                </div>\n                <TextInput\n                  id=\"table-search\"\n                  placeholder=\"Buscar itens do estoque...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  sizing=\"sm\"\n                  className=\"pl-10 rounded-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Select value={filtroStatus} onChange={(e) => setFiltroStatus(e.target.value)} sizing=\"sm\" className=\"rounded-sm\">\n                <option value=\"\">Todos os status</option>\n                <option value=\"normal\">Normal</option>\n                <option value=\"baixo\">Baixo</option>\n                <option value=\"falta\">Em falta</option>\n              </Select>\n              <Button color=\"light\" sizing=\"sm\" className=\"rounded-sm\">\n                <FunnelIcon className=\"w-4 h-4 mr-2\" />\n                Filtros\n              </Button>\n            </div>\n          </div>\n\n          {/* Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                <tr>\n                  <th scope=\"col\" className=\"p-4\">\n                    <div className=\"flex items-center\">\n                      <Checkbox\n                        checked={selectedItems.length === filteredEstoque.length && filteredEstoque.length > 0}\n                        onChange={(e) => handleSelectAll(e.target.checked)}\n                      />\n                      <Label htmlFor=\"checkbox-all\" className=\"sr-only\">checkbox</Label>\n                    </div>\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3\">EPI</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">N° CA</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">Categoria</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">Saldo</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">Status</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">Validade</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">Lote</th>\n                  <th scope=\"col\" className=\"px-4 py-3\">\n                    <span className=\"sr-only\">Ações</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredEstoque.map((item) => {\n                  const tipoEPI = tiposEPI.find(tipo => tipo.id === item.tipoEPIId);\n                  if (!tipoEPI) return null;\n\n                  const saldo = getSaldo(item);\n                  \n                  return (\n                    <tr key={item.id} className=\"border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\n                      <td className=\"w-4 p-4\">\n                        <div className=\"flex items-center\">\n                          <Checkbox\n                            checked={selectedItems.includes(item.id)}\n                            onChange={(e) => handleSelectItem(item.id, e.target.checked)}\n                          />\n                          <Label htmlFor={`checkbox-${item.id}`} className=\"sr-only\">checkbox</Label>\n                        </div>\n                      </td>\n                      <th scope=\"row\" className=\"flex items-center px-4 py-4 text-gray-900 whitespace-nowrap dark:text-white\">\n                        <IconContainer \n                          icon={getCategoryIcon(tipoEPI.categoria, \"w-6 h-6\")}\n                          color=\"gray\"\n                          size=\"lg\"\n                        />\n                        <div className=\"ps-3\">\n                          <div className=\"text-base font-semibold\">{tipoEPI.nomeEquipamento}</div>\n                          <div className=\"font-normal text-gray-500 dark:text-gray-400\">{tipoEPI.fabricante}</div>\n                        </div>\n                      </th>\n                      <td className=\"px-4 py-4 font-medium text-gray-900 dark:text-white\">\n                        {tipoEPI.numeroCA}\n                      </td>\n                      <td className=\"px-4 py-4\">\n                        <Badge color=\"gray\">{tipoEPI.categoria}</Badge>\n                      </td>\n                      <td className=\"px-4 py-4 font-bold text-gray-900 dark:text-white\">\n                        {saldo}\n                      </td>\n                      <td className=\"px-4 py-4\">\n                        <StatusIndicator status={getStatusText(saldo)} variant=\"estoque\" />\n                      </td>\n                      <td className=\"px-4 py-4 text-gray-900 dark:text-white\">\n                        {formatarData(item.dataValidade)}\n                      </td>\n                      <td className=\"px-4 py-4 text-gray-900 dark:text-white\">\n                        {item.lote || '-'}\n                      </td>\n                      <td className=\"px-4 py-4 flex items-center justify-end\">\n                        <Button\n                          sizing=\"sm\"\n                          color=\"success\"\n                          onClick={() => handleOpenModal('entrada', item)}\n                          className=\"mr-2 rounded-sm\"\n                        >\n                          <ArrowUpIcon className=\"w-4 h-4\" />\n                        </Button>\n                        <Button\n                          sizing=\"sm\"\n                          color=\"light\"\n                          onClick={() => handleOpenModal('ajuste', item)}\n                          className=\"mr-2 rounded-sm\"\n                        >\n                          <AdjustmentsIcon className=\"w-4 h-4\" />\n                        </Button>\n                        <Dropdown\n                          label=\"\"\n                          dismissOnClick={false}\n                          renderTrigger={() => (\n                            <Button sizing=\"sm\" color=\"light\" className=\"rounded-sm\">\n                              <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                            </Button>\n                          )}\n                        >\n                          <Dropdown.Item icon={ArrowDownTrayIcon}>\n                            Exportar histórico\n                          </Dropdown.Item>\n                          <Dropdown.Item>\n                            Ver movimentações\n                          </Dropdown.Item>\n                        </Dropdown>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          {/* Pagination */}\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4\">\n            <span className=\"text-sm font-normal text-gray-500 dark:text-gray-400\">\n              Mostrando <span className=\"font-semibold text-gray-900 dark:text-white\">1-{filteredEstoque.length}</span> de <span className=\"font-semibold text-gray-900 dark:text-white\">{filteredEstoque.length}</span>\n            </span>\n            <Pagination\n              currentPage={1}\n              totalPages={1}\n              onPageChange={() => {}}\n              showIcons\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Modal de Movimentação */}\n      <Modal show={showModal} onClose={() => setShowModal(false)} size=\"xl\">\n        <div className=\"p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n            {modalType === 'entrada' ? 'Entrada de Estoque' : 'Ajuste de Estoque'}\n          </h3>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"epi\" className=\"text-gray-700 dark:text-gray-300\">EPI</Label>\n              <Select \n                id=\"epi\" \n                defaultValue={selectedItem?.tipoEPIId || ''}\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n              >\n                <option value=\"\">Selecione um EPI</option>\n                {tiposEPI.map(epi => (\n                  <option key={epi.id} value={epi.id}>\n                    {epi.numeroCA} - {epi.nomeEquipamento}\n                  </option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"quantidade\" className=\"text-gray-700 dark:text-gray-300\">Quantidade</Label>\n                <TextInput\n                  id=\"quantidade\"\n                  type=\"number\"\n                  placeholder=\"Ex: 50\"\n                  required\n                  sizing=\"sm\"\n                  className=\"rounded-sm\"\n                />\n              </div>\n              {modalType === 'ajuste' && (\n                <div>\n                  <Label htmlFor=\"tipoAjuste\" className=\"text-gray-700 dark:text-gray-300\">Tipo de Ajuste</Label>\n                  <Select id=\"tipoAjuste\" sizing=\"sm\" className=\"rounded-sm\">\n                    <option value=\"entrada\">Entrada</option>\n                    <option value=\"saida\">Saída</option>\n                  </Select>\n                </div>\n              )}\n            </div>\n\n            {modalType === 'entrada' && (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"dataFabricacao\" className=\"text-gray-700 dark:text-gray-300\">Data de Fabricação</Label>\n                  <TextInput\n                    id=\"dataFabricacao\"\n                    type=\"date\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"numeroNF\" className=\"text-gray-700 dark:text-gray-300\">Número da NF</Label>\n                  <TextInput\n                    id=\"numeroNF\"\n                    placeholder=\"Ex: NF-001234\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                  />\n                </div>\n              </div>\n            )}\n\n            <div>\n              <Label htmlFor=\"observacao\" className=\"text-gray-700 dark:text-gray-300\">\n                {modalType === 'entrada' ? 'Observação' : 'Justificativa'}\n              </Label>\n              <Textarea\n                id=\"observacao\"\n                placeholder={modalType === 'entrada' ? 'Observações sobre a entrada...' : 'Justificativa para o ajuste...'}\n                rows={3}\n                className=\"rounded-sm\"\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-3 mt-6 pt-4 border-t border-gray-200 dark:border-gray-700\">\n            <Button onClick={() => setShowModal(false)} color=\"light\" sizing=\"sm\" className=\"rounded-sm\">\n              Cancelar\n            </Button>\n            <Button onClick={() => setShowModal(false)} color=\"blue\" sizing=\"sm\" className=\"rounded-sm\">\n              {modalType === 'entrada' ? 'Registrar Entrada' : 'Aplicar Ajuste'}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EstoqueEPIs;"],"names":["AdjustmentsHorizontalIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ArrowUpIcon","EstoqueEPIs","showModal","setShowModal","useState","modalType","setModalType","selectedItem","setSelectedItem","searchTerm","setSearchTerm","filtroStatus","setFiltroStatus","selectedItems","setSelectedItems","getSaldo","item","formatarData","data","getStatusText","saldo","handleOpenModal","type","itemEstoque","filteredEstoque","estoque","tipoEPI","tiposEPI","tipo","matchesSearch","matchesStatus","handleSelectAll","checked","handleSelectItem","itemId","id","jsxs","jsx","Button","AdjustmentsIcon","Dropdown","EllipsisVerticalIcon","ArrowDownTrayIcon","Label","TextInput","e","Select","FunnelIcon","Checkbox","IconContainer","getCategoryIcon","Badge","StatusIndicator","Pagination","Modal","epi","Textarea"],"mappings":"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","x_google_ignoreList":[0,1]}