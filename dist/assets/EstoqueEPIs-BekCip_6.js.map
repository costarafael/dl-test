{"version":3,"mappings":"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","names":["AdjustmentsHorizontalIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ArrowUpTrayIcon","InventoryStats","stats","jsxs","jsx","ChartBarIcon","ExclamationTriangleIcon","ClockIcon","statusOptions","InventoryFilters","searchTerm","setSearchTerm","filtroStatus","setFiltroStatus","filtroLocalizacao","setFiltroLocalizacao","localizacoes","Label","TextInput","e","SearchableDropdown","loc","Button","FunnelIcon","getStatusInfo","status","InventoryTable","itens","getTipoEPI","onAjuste","onHistorico","Table","item","tipoEPI","calcularStatusEstoque","statusInfo","proximoVencimento","isProximoVencimento","Badge","formatarData","motivosEntrada","motivosSaida","motivosAjuste","MovementForm","tipo","formData","onChange","currentStock","disabled","getMotivos","getQuantidadeLabel","getMaxQuantidade","Select","motivo","Fragment","Textarea","getTipoLabel","MovementModal","show","onClose","onSave","isLoading","handleSubmit","error","isFormValid","Modal","getTipoInfo","HistoryModal","historico","setHistorico","useState","loading","setLoading","setError","useEffect","buscarHistorico","eventos","historicoEstoqueAPI","a","b","evento","tipoInfo","INITIAL_FORM_DATA","useInventoryMovements","refetch","showMovimentacaoModal","setShowMovimentacaoModal","showHistoricoModal","setShowHistoricoModal","tipoMovimentacao","setTipoMovimentacao","selectedItem","setSelectedItem","setFormData","abrirMovimentacao","resetForm","estoqueAPI","field","value","prev","ITEMS_PER_PAGE","useInventoryFilters","itensEstoque","tiposEPI","currentPage","setCurrentPage","createEntityLookup","itensFiltrados","useMemo","searchMatch","statusMatch","localizacaoMatch","totalPages","paginatedItens","estatisticas","total","EstoqueEPIsPage","navigate","useNavigate","showNewMovementModal","setShowNewMovementModal","useAPI","tiposEPIAPI","executarMovimentacao","handleInputChange","handleAjuste","handleHistorico","onPageChange","page","handleNewMovement","movementData","movimentacaoNotasAPI","__vitePreload","n","ClipboardDocumentListIcon","Dropdown","EllipsisVerticalIcon","ArrowDownTrayIcon","Pagination","NewMovementModal"],"ignoreList":[0,1],"sources":["../../node_modules/@heroicons/react/24/outline/esm/AdjustmentsHorizontalIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowUpTrayIcon.js","../../src/components/inventory/InventoryStats.tsx","../../src/components/inventory/InventoryFilters.tsx","../../src/components/inventory/InventoryTable.tsx","../../src/components/inventory/MovementForm.tsx","../../src/components/inventory/MovementModal.tsx","../../src/components/inventory/HistoryModal.tsx","../../src/hooks/useInventoryMovements.ts","../../src/hooks/useInventoryFilters.ts","../../src/pages/EstoqueEPIs.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction AdjustmentsHorizontalIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(AdjustmentsHorizontalIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpTrayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpTrayIcon);\nexport default ForwardRef;","import React from 'react';\nimport { \n  ChartBarIcon, \n  ClockIcon, \n  ExclamationTriangleIcon \n} from '@heroicons/react/24/outline';\n\ninterface InventoryStatsProps {\n  stats: {\n    totalItens: number;\n    totalDisponivel: number;\n    estoqueMinimo: number;\n    proximoVencimento: number;\n  };\n}\n\nconst InventoryStats: React.FC<InventoryStatsProps> = ({ stats }) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-blue-600 dark:text-blue-400\">Total de Itens</p>\n            <p className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">\n              {stats.totalItens}\n            </p>\n          </div>\n          <ChartBarIcon className=\"w-8 h-8 text-blue-500\" />\n        </div>\n      </div>\n\n      <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-green-600 dark:text-green-400\">Disponível</p>\n            <p className=\"text-2xl font-bold text-green-700 dark:text-green-300\">\n              {stats.totalDisponivel}\n            </p>\n          </div>\n          <ChartBarIcon className=\"w-8 h-8 text-green-500\" />\n        </div>\n      </div>\n\n      <div className=\"bg-orange-50 dark:bg-orange-900/20 p-4 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-orange-600 dark:text-orange-400\">Estoque Baixo</p>\n            <p className=\"text-2xl font-bold text-orange-700 dark:text-orange-300\">\n              {stats.estoqueMinimo}\n            </p>\n          </div>\n          <ExclamationTriangleIcon className=\"w-8 h-8 text-orange-500\" />\n        </div>\n      </div>\n\n      <div className=\"bg-red-50 dark:bg-red-900/20 p-4 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-red-600 dark:text-red-400\">Próx. Vencimento</p>\n            <p className=\"text-2xl font-bold text-red-700 dark:text-red-300\">\n              {stats.proximoVencimento}\n            </p>\n          </div>\n          <ClockIcon className=\"w-8 h-8 text-red-500\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InventoryStats;","import React from 'react';\nimport { Button, TextInput, Label } from 'flowbite-react';\nimport { FunnelIcon } from '@heroicons/react/24/outline';\nimport SearchableDropdown from '../common/SearchableDropdown';\n\ninterface InventoryFiltersProps {\n  searchTerm: string;\n  setSearchTerm: (value: string) => void;\n  filtroStatus: string;\n  setFiltroStatus: (value: string) => void;\n  filtroLocalizacao: string;\n  setFiltroLocalizacao: (value: string) => void;\n  localizacoes: string[];\n}\n\nconst statusOptions = [\n  { value: 'disponivel', label: 'Disponível' },\n  { value: 'baixo', label: 'Estoque baixo' },\n  { value: 'vencendo', label: 'Próximo ao vencimento' },\n  { value: 'vencido', label: 'Vencido' }\n];\n\nconst InventoryFilters: React.FC<InventoryFiltersProps> = ({\n  searchTerm,\n  setSearchTerm,\n  filtroStatus,\n  setFiltroStatus,\n  filtroLocalizacao,\n  setFiltroLocalizacao,\n  localizacoes\n}) => {\n  return (\n    <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4 border-t dark:border-gray-700\">\n      <div className=\"w-full md:w-1/3\">\n        <Label htmlFor=\"table-search\" className=\"sr-only\">Buscar</Label>\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n            <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\"></path>\n            </svg>\n          </div>\n          <TextInput\n            id=\"table-search\"\n            placeholder=\"Buscar por equipamento, CA ou localização...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            sizing=\"sm\"\n            className=\"pl-10 rounded-sm\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n        <SearchableDropdown\n          options={statusOptions}\n          value={filtroStatus}\n          onChange={setFiltroStatus}\n          placeholder=\"Selecionar status...\"\n          searchPlaceholder=\"Buscar status...\"\n          allOptionsLabel=\"Todos os status\"\n          sizing=\"sm\"\n        />\n        \n        <SearchableDropdown\n          options={localizacoes.map(loc => ({\n            value: loc,\n            label: loc\n          }))}\n          value={filtroLocalizacao}\n          onChange={setFiltroLocalizacao}\n          placeholder=\"Selecionar localização...\"\n          searchPlaceholder=\"Buscar localizações...\"\n          allOptionsLabel=\"Todas as localizações\"\n          sizing=\"sm\"\n        />\n        \n        <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n          <FunnelIcon className=\"w-4 h-4 mr-2\" />\n          Filtros\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default InventoryFilters;","import React from 'react';\nimport { Table, Badge, Button } from 'flowbite-react';\nimport { \n  AdjustmentsHorizontalIcon, \n  ClockIcon \n} from '@heroicons/react/24/outline';\nimport { ItemEstoque, TipoEPI } from '../../types';\nimport { calcularStatusEstoque, isProximoVencimento } from '../../utils/estoqueHelpers';\nimport { formatarData } from '../../utils/dateHelpers';\n\ninterface InventoryTableProps {\n  itens: ItemEstoque[];\n  getTipoEPI: (id: string) => TipoEPI | undefined;\n  onAjuste: (item: ItemEstoque) => void;\n  onHistorico: (item: ItemEstoque) => void;\n}\n\nconst getStatusInfo = (status: string) => {\n  switch (status) {\n    case 'disponivel':\n      return { color: 'green' as const, label: 'Disponível' };\n    case 'baixo':\n      return { color: 'yellow' as const, label: 'Estoque baixo' };\n    case 'vencendo':\n      return { color: 'orange' as const, label: 'Próximo ao vencimento' };\n    case 'vencido':\n      return { color: 'red' as const, label: 'Vencido' };\n    default:\n      return { color: 'gray' as const, label: 'Indefinido' };\n  }\n};\n\nconst InventoryTable: React.FC<InventoryTableProps> = ({\n  itens,\n  getTipoEPI,\n  onAjuste,\n  onHistorico\n}) => {\n  return (\n    <div className=\"overflow-x-auto\">\n      <Table hoverable className=\"min-w-full\">\n        <Table.Head>\n          <Table.HeadCell>Equipamento</Table.HeadCell>\n          <Table.HeadCell>Localização</Table.HeadCell>\n          <Table.HeadCell>Lote</Table.HeadCell>\n          <Table.HeadCell>Quantidade</Table.HeadCell>\n          <Table.HeadCell>Status</Table.HeadCell>\n          <Table.HeadCell>Validade</Table.HeadCell>\n          <Table.HeadCell className=\"w-32\">\n            <span className=\"sr-only\">Ações</span>\n          </Table.HeadCell>\n        </Table.Head>\n        <Table.Body className=\"divide-y\">\n          {itens.length > 0 ? (\n            itens.map((item) => {\n              const tipoEPI = getTipoEPI(item.tipoEPIId);\n              const status = calcularStatusEstoque(item);\n              const statusInfo = getStatusInfo(status);\n              const proximoVencimento = isProximoVencimento(item);\n              \n              return (\n                <Table.Row \n                  key={item.id} \n                  className=\"bg-white dark:border-gray-700 dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                >\n                  <Table.Cell>\n                    <div>\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\n                        {tipoEPI?.nomeEquipamento}\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        CA {tipoEPI?.numeroCA} • {tipoEPI?.fabricante}\n                      </div>\n                    </div>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <div className=\"text-sm text-gray-900 dark:text-white\">\n                      {item.localizacao}\n                    </div>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <div className=\"text-sm text-gray-900 dark:text-white\">\n                      {item.lote}\n                    </div>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <div className=\"flex items-center\">\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {item.quantidade}\n                      </span>\n                      <span className=\"ml-1 text-sm text-gray-500 dark:text-gray-400\">\n                        un.\n                      </span>\n                    </div>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Badge \n                      color={statusInfo.color} \n                      size=\"sm\" \n                      className=\"w-fit\"\n                    >\n                      {statusInfo.label}\n                    </Badge>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <div className=\"flex items-center\">\n                      <span className=\"text-sm text-gray-900 dark:text-white\">\n                        {formatarData(item.dataValidade)}\n                      </span>\n                      {proximoVencimento && (\n                        <ClockIcon className=\"w-4 h-4 ml-2 text-orange-500\" title=\"Próximo ao vencimento\" />\n                      )}\n                    </div>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <div className=\"flex space-x-1\">\n                      <Button\n                        sizing=\"xs\"\n                        color=\"gray\"\n                        onClick={() => onAjuste(item)}\n                        title=\"Ajustar quantidade\"\n                        className=\"rounded-sm\"\n                      >\n                        <AdjustmentsHorizontalIcon className=\"w-4 h-4\" />\n                      </Button>\n                      <Button\n                        sizing=\"xs\"\n                        color=\"light\"\n                        onClick={() => onHistorico(item)}\n                        title=\"Ver histórico\"\n                        className=\"rounded-sm\"\n                      >\n                        <ClockIcon className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })\n          ) : (\n            <Table.Row>\n              <Table.Cell colSpan={7} className=\"text-center py-8\">\n                <div className=\"flex flex-col items-center justify-center\">\n                  <svg className=\"w-12 h-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-4m-12 0H4m16 0H4\" />\n                  </svg>\n                  <p className=\"text-gray-500 dark:text-gray-400\">Nenhum item encontrado</p>\n                  <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                    Ajuste os filtros ou adicione novos itens ao estoque\n                  </p>\n                </div>\n              </Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default InventoryTable;","import React from 'react';\nimport { Label, TextInput, Select, Textarea } from 'flowbite-react';\n\ninterface MovementFormData {\n  quantidade: number;\n  responsavelId: string;\n  motivo: string;\n  custoUnitario?: number;\n  notaFiscal?: string;\n  lote?: string;\n  observacoes?: string;\n}\n\ninterface MovementFormProps {\n  tipo: 'entrada' | 'saida' | 'ajuste';\n  formData: MovementFormData;\n  onChange: (field: keyof MovementFormData, value: string | number) => void;\n  currentStock: number;\n  disabled?: boolean;\n}\n\nconst motivosEntrada = [\n  'Compra',\n  'Doação',\n  'Transferência',\n  'Devolução',\n  'Ajuste de inventário',\n  'Outros'\n];\n\nconst motivosSaida = [\n  'Entrega ao colaborador',\n  'Transferência',\n  'Descarte por vencimento',\n  'Descarte por avaria',\n  'Perda',\n  'Outros'\n];\n\nconst motivosAjuste = [\n  'Contagem física',\n  'Correção de erro',\n  'Avaria detectada',\n  'Atualização do sistema',\n  'Outros'\n];\n\nconst MovementForm: React.FC<MovementFormProps> = ({\n  tipo,\n  formData,\n  onChange,\n  currentStock,\n  disabled = false\n}) => {\n  const getMotivos = () => {\n    switch (tipo) {\n      case 'entrada': return motivosEntrada;\n      case 'saida': return motivosSaida;\n      case 'ajuste': return motivosAjuste;\n      default: return [];\n    }\n  };\n\n  const getQuantidadeLabel = () => {\n    switch (tipo) {\n      case 'entrada': return 'Quantidade a adicionar';\n      case 'saida': return 'Quantidade a retirar';\n      case 'ajuste': return 'Nova quantidade total';\n      default: return 'Quantidade';\n    }\n  };\n\n  const getMaxQuantidade = () => {\n    return tipo === 'saida' ? currentStock : undefined;\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Quantidade */}\n      <div>\n        <Label htmlFor=\"quantidade\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          {getQuantidadeLabel()} <span className=\"text-red-500\">*</span>\n        </Label>\n        <TextInput\n          id=\"quantidade\"\n          type=\"number\"\n          min=\"1\"\n          max={getMaxQuantidade()}\n          value={formData.quantidade}\n          onChange={(e) => onChange('quantidade', parseInt(e.target.value) || 0)}\n          placeholder=\"Digite a quantidade\"\n          sizing=\"sm\"\n          className=\"rounded-sm\"\n          required\n          disabled={disabled}\n        />\n        {tipo === 'saida' && (\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Máximo disponível: {currentStock} unidades\n          </p>\n        )}\n      </div>\n\n      {/* Responsável */}\n      <div>\n        <Label htmlFor=\"responsavel\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Responsável <span className=\"text-red-500\">*</span>\n        </Label>\n        <TextInput\n          id=\"responsavel\"\n          value={formData.responsavelId}\n          onChange={(e) => onChange('responsavelId', e.target.value)}\n          placeholder=\"Nome do responsável\"\n          sizing=\"sm\"\n          className=\"rounded-sm\"\n          required\n          disabled={disabled}\n        />\n      </div>\n\n      {/* Motivo */}\n      <div>\n        <Label htmlFor=\"motivo\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Motivo <span className=\"text-red-500\">*</span>\n        </Label>\n        <Select\n          id=\"motivo\"\n          value={formData.motivo}\n          onChange={(e) => onChange('motivo', e.target.value)}\n          sizing=\"sm\"\n          className=\"rounded-sm\"\n          required\n          disabled={disabled}\n        >\n          <option value=\"\">Selecione o motivo</option>\n          {getMotivos().map(motivo => (\n            <option key={motivo} value={motivo}>{motivo}</option>\n          ))}\n        </Select>\n      </div>\n\n      {/* Campos específicos para entrada */}\n      {tipo === 'entrada' && (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"custoUnitario\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Custo Unitário (R$)\n              </Label>\n              <TextInput\n                id=\"custoUnitario\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.custoUnitario || ''}\n                onChange={(e) => onChange('custoUnitario', parseFloat(e.target.value) || 0)}\n                placeholder=\"0,00\"\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n                disabled={disabled}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"notaFiscal\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Nota Fiscal\n              </Label>\n              <TextInput\n                id=\"notaFiscal\"\n                value={formData.notaFiscal || ''}\n                onChange={(e) => onChange('notaFiscal', e.target.value)}\n                placeholder=\"Número da NF\"\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n                disabled={disabled}\n              />\n            </div>\n          </div>\n\n          <div>\n            <Label htmlFor=\"lote\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n              Lote/Série\n            </Label>\n            <TextInput\n              id=\"lote\"\n              value={formData.lote || ''}\n              onChange={(e) => onChange('lote', e.target.value)}\n              placeholder=\"Número do lote ou série\"\n              sizing=\"sm\"\n              className=\"rounded-sm\"\n              disabled={disabled}\n            />\n          </div>\n        </>\n      )}\n\n      {/* Observações */}\n      <div>\n        <Label htmlFor=\"observacoes\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Observações\n        </Label>\n        <Textarea\n          id=\"observacoes\"\n          value={formData.observacoes || ''}\n          onChange={(e) => onChange('observacoes', e.target.value)}\n          placeholder=\"Observações adicionais sobre a movimentação...\"\n          rows={3}\n          className=\"rounded-sm\"\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MovementForm;","import React from 'react';\nimport { Modal, Button } from 'flowbite-react';\nimport { ItemEstoque, TipoEPI } from '../../types';\nimport MovementForm from './MovementForm';\n\ninterface MovementFormData {\n  quantidade: number;\n  responsavelId: string;\n  motivo: string;\n  custoUnitario?: number;\n  notaFiscal?: string;\n  lote?: string;\n  observacoes?: string;\n}\n\ninterface MovementModalProps {\n  show: boolean;\n  onClose: () => void;\n  onSave: () => Promise<void>;\n  item: ItemEstoque | null; // Item pré-selecionado para ajuste\n  tipo: 'entrada' | 'saida' | 'ajuste';\n  formData: MovementFormData;\n  onChange: (field: keyof MovementFormData, value: string | number) => void;\n  getTipoEPI: (id: string) => TipoEPI | undefined;\n  isLoading?: boolean;\n}\n\nconst getTipoLabel = (tipo: 'entrada' | 'saida' | 'ajuste') => {\n  switch (tipo) {\n    case 'entrada': return 'Nova Movimentação - Entrada';\n    case 'saida': return 'Nova Movimentação - Saída';\n    case 'ajuste': return 'Ajustar Quantidade de Item';\n    default: return 'Nova Movimentação';\n  }\n};\n\nconst MovementModal: React.FC<MovementModalProps> = ({\n  show,\n  onClose,\n  onSave,\n  item,\n  tipo,\n  formData,\n  onChange,\n  getTipoEPI,\n  isLoading = false\n}) => {\n  // Para ajuste, item é obrigatório. Para entrada/saída, item é opcional\n  const tipoEPI = item ? getTipoEPI(item.tipoEPIId) : null;\n\n  const handleSubmit = async () => {\n    try {\n      await onSave();\n    } catch (error) {\n      console.error('Erro na movimentação:', error);\n      alert('Erro ao executar movimentação. Tente novamente.');\n    }\n  };\n\n  const isFormValid = () => {\n    return formData.quantidade > 0 && \n           formData.responsavelId && \n           formData.motivo;\n  };\n\n  return (\n    <Modal \n      show={show} \n      onClose={onClose} \n      size=\"xl\"\n    >\n      <Modal.Header>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n          {getTipoLabel(tipo)}\n        </h3>\n      </Modal.Header>\n\n      <Modal.Body className=\"overflow-y-auto max-h-96\">\n        <div className=\"space-y-6\">\n          {/* Informações do Item - apenas para ajuste */}\n          {tipo === 'ajuste' && item && (\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                Item para Ajuste\n              </h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Equipamento:</span>\n                  <p className=\"text-gray-900 dark:text-white font-medium\">\n                    {tipoEPI?.nomeEquipamento}\n                  </p>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">CA:</span>\n                  <p className=\"text-gray-900 dark:text-white\">\n                    {tipoEPI?.numeroCA}\n                  </p>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Localização:</span>\n                  <p className=\"text-gray-900 dark:text-white\">\n                    {item.localizacao}\n                  </p>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Estoque atual:</span>\n                  <p className=\"text-gray-900 dark:text-white font-medium\">\n                    {item.quantidade} unidades\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Descrição para movimentações gerais */}\n          {tipo !== 'ajuste' && (\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\n              <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-300 mb-2\">\n                {tipo === 'entrada' ? 'Nova Entrada de Estoque' : 'Nova Saída de Estoque'}\n              </h4>\n              <p className=\"text-sm text-blue-700 dark:text-blue-400\">\n                {tipo === 'entrada' \n                  ? 'Registre uma nova entrada de itens no estoque. Você pode adicionar múltiplos itens de uma vez.'\n                  : 'Registre uma nova saída de itens do estoque. Especifique os itens e quantidades.'}\n              </p>\n            </div>\n          )}\n\n          {/* Formulário de Movimentação */}\n          <MovementForm\n            tipo={tipo}\n            formData={formData}\n            onChange={onChange}\n            currentStock={item?.quantidade || 0}\n            disabled={isLoading}\n          />\n        </div>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <div className=\"flex justify-end space-x-3 w-full\">\n          <Button \n            onClick={onClose}\n            color=\"gray\" \n            sizing=\"xs\" \n            className=\"rounded-sm\"\n            disabled={isLoading}\n          >\n            Cancelar\n          </Button>\n          <Button \n            onClick={handleSubmit}\n            color=\"primary\" \n            sizing=\"xs\" \n            className=\"rounded-sm\"\n            disabled={!isFormValid() || isLoading}\n          >\n            {isLoading ? 'Executando...' : \n             tipo === 'ajuste' ? 'Ajustar Quantidade' : \n             `Registrar ${tipo === 'entrada' ? 'Entrada' : 'Saída'}`}\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MovementModal;","import React, { useState, useEffect } from 'react';\nimport { Modal, Button, Badge } from 'flowbite-react';\nimport { ItemEstoque, TipoEPI, EventoEstoque } from '../../types';\nimport { formatarData } from '../../utils/dateHelpers';\nimport { historicoEstoqueAPI } from '../../services/api';\n\ninterface HistoryModalProps {\n  show: boolean;\n  onClose: () => void;\n  item: ItemEstoque | null;\n  getTipoEPI: (id: string) => TipoEPI | undefined;\n}\n\nconst getTipoInfo = (tipo: string) => {\n  switch (tipo) {\n    case 'entrada':\n      return { color: 'green' as const, label: 'Entrada', symbol: '+' };\n    case 'saida':\n      return { color: 'red' as const, label: 'Saída', symbol: '-' };\n    case 'entrega':\n      return { color: 'blue' as const, label: 'Entrega', symbol: '-' };\n    case 'devolucao':\n      return { color: 'purple' as const, label: 'Devolução', symbol: '+' };\n    case 'ajuste':\n      return { color: 'yellow' as const, label: 'Ajuste', symbol: '±' };\n    case 'cadastro':\n      return { color: 'gray' as const, label: 'Cadastro', symbol: '●' };\n    case 'perda':\n      return { color: 'failure' as const, label: 'Perda', symbol: '-' };\n    case 'vencimento':\n      return { color: 'warning' as const, label: 'Vencimento', symbol: '-' };\n    default:\n      return { color: 'gray' as const, label: 'Indefinido', symbol: '?' };\n  }\n};\n\nconst HistoryModal: React.FC<HistoryModalProps> = ({\n  show,\n  onClose,\n  item,\n  getTipoEPI\n}) => {\n  const [historico, setHistorico] = useState<EventoEstoque[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Buscar histórico quando o modal abrir\n  useEffect(() => {\n    if (show && item) {\n      buscarHistorico();\n    }\n  }, [show, item]);\n\n  const buscarHistorico = async () => {\n    if (!item) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const eventos = await historicoEstoqueAPI.getByItem(item.id);\n      setHistorico(eventos.sort((a: EventoEstoque, b: EventoEstoque) => new Date(b.data).getTime() - new Date(a.data).getTime()));\n    } catch (error) {\n      console.error('Erro ao buscar histórico:', error);\n      setError('Erro ao carregar histórico de movimentações');\n      setHistorico([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!item) return null;\n\n  const tipoEPI = getTipoEPI(item.tipoEPIId);\n\n  return (\n    <Modal \n      show={show} \n      onClose={onClose} \n      size=\"lg\"\n    >\n      <Modal.Header>\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n            Histórico de Movimentações\n          </h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {tipoEPI?.nomeEquipamento} • CA {tipoEPI?.numeroCA}\n          </p>\n        </div>\n      </Modal.Header>\n\n      <Modal.Body className=\"overflow-y-auto max-h-96\">\n        {loading ? (\n          <div className=\"flex justify-center items-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Carregando histórico...</span>\n          </div>\n        ) : error ? (\n          <div className=\"text-center py-8\">\n            <svg className=\"w-12 h-12 text-red-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n            <p className=\"text-red-600 dark:text-red-400 mb-2\">{error}</p>\n            <Button \n              onClick={buscarHistorico}\n              color=\"gray\"\n              sizing=\"xs\"\n              className=\"rounded-sm\"\n            >\n              Tentar novamente\n            </Button>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {historico.length > 0 ? (\n              historico.map((evento) => {\n                const tipoInfo = getTipoInfo(evento.tipo);\n                \n                return (\n                  <div \n                    key={evento.id}\n                    className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-4\"\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <Badge \n                        color={tipoInfo.color} \n                        size=\"sm\" \n                        className=\"w-fit\"\n                      >\n                        {tipoInfo.symbol} {tipoInfo.label}\n                      </Badge>\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {formatarData(evento.data)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"mb-3\">\n                      <p className=\"text-sm text-gray-900 dark:text-white\">\n                        {evento.descricao}\n                      </p>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 text-sm\">\n                      <div>\n                        <span className=\"text-gray-500 dark:text-gray-400\">Quantidade:</span>\n                        <p className=\"text-gray-900 dark:text-white font-medium\">\n                          {tipoInfo.symbol !== '●' && tipoInfo.symbol !== '±' && tipoInfo.symbol !== '?' ? tipoInfo.symbol : ''}{evento.quantidade} un.\n                        </p>\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500 dark:text-gray-400\">Responsável:</span>\n                        <p className=\"text-gray-900 dark:text-white\">\n                          {evento.responsavel}\n                        </p>\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500 dark:text-gray-400\">Estoque:</span>\n                        <p className=\"text-gray-900 dark:text-white\">\n                          {evento.quantidadeAnterior} → {evento.quantidadeAtual}\n                        </p>\n                      </div>\n                    </div>\n\n                    {evento.detalhes && (\n                      <div className=\"mt-3 pt-3 border-t border-gray-100 dark:border-gray-600\">\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400 space-y-1\">\n                          {evento.detalhes.motivo && (\n                            <p><strong>Motivo:</strong> {evento.detalhes.motivo}</p>\n                          )}\n                          {evento.detalhes.colaboradorNome && (\n                            <p><strong>Colaborador:</strong> {evento.detalhes.colaboradorNome}</p>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"text-center py-8\">\n                <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                </svg>\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                  Nenhuma movimentação encontrada\n                </p>\n                <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                  As movimentações aparecerão aqui conforme forem realizadas\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <div className=\"flex justify-end w-full\">\n          <Button \n            onClick={onClose}\n            color=\"primary\" \n            sizing=\"xs\" \n            className=\"rounded-sm\"\n          >\n            Fechar\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default HistoryModal;","import { useState } from 'react';\nimport { ItemEstoque } from '../types';\nimport { estoqueAPI } from '../services/api';\n\ninterface MovementFormData {\n  quantidade: number;\n  responsavelId: string;\n  motivo: string;\n  custoUnitario?: number;\n  notaFiscal?: string;\n  lote?: string;\n  observacoes?: string;\n}\n\ninterface UseInventoryMovementsResult {\n  // Estados do modal\n  showMovimentacaoModal: boolean;\n  setShowMovimentacaoModal: React.Dispatch<React.SetStateAction<boolean>>;\n  showHistoricoModal: boolean;\n  setShowHistoricoModal: React.Dispatch<React.SetStateAction<boolean>>;\n  \n  // Estados da movimentação\n  tipoMovimentacao: 'entrada' | 'saida' | 'ajuste';\n  setTipoMovimentacao: React.Dispatch<React.SetStateAction<'entrada' | 'saida' | 'ajuste'>>;\n  selectedItem: ItemEstoque | null;\n  setSelectedItem: React.Dispatch<React.SetStateAction<ItemEstoque | null>>;\n  \n  // Estados do formulário\n  formData: MovementFormData;\n  setFormData: React.Dispatch<React.SetStateAction<MovementFormData>>;\n  \n  // Operações\n  abrirMovimentacao: (item: ItemEstoque, tipo: 'entrada' | 'saida' | 'ajuste') => void;\n  executarMovimentacao: () => Promise<void>;\n  resetForm: () => void;\n  handleInputChange: (field: keyof MovementFormData, value: string | number) => void;\n}\n\nconst INITIAL_FORM_DATA: MovementFormData = {\n  quantidade: 1,\n  responsavelId: '',\n  motivo: '',\n  observacoes: ''\n};\n\nexport const useInventoryMovements = (refetch: () => Promise<void>): UseInventoryMovementsResult => {\n  // Estados dos modais\n  const [showMovimentacaoModal, setShowMovimentacaoModal] = useState(false);\n  const [showHistoricoModal, setShowHistoricoModal] = useState(false);\n  \n  // Estados da movimentação\n  const [tipoMovimentacao, setTipoMovimentacao] = useState<'entrada' | 'saida' | 'ajuste'>('entrada');\n  const [selectedItem, setSelectedItem] = useState<ItemEstoque | null>(null);\n  \n  // Estados do formulário\n  const [formData, setFormData] = useState<MovementFormData>(INITIAL_FORM_DATA);\n\n  // Abrir modal de movimentação\n  const abrirMovimentacao = (item: ItemEstoque, tipo: 'entrada' | 'saida' | 'ajuste') => {\n    setSelectedItem(item);\n    setTipoMovimentacao(tipo);\n    setShowMovimentacaoModal(true);\n    resetForm();\n  };\n\n  // Resetar formulário\n  const resetForm = () => {\n    setFormData(INITIAL_FORM_DATA);\n  };\n\n  // Handler para mudanças no formulário\n  const handleInputChange = (field: keyof MovementFormData, value: string | number) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Executar movimentação de estoque\n  const executarMovimentacao = async () => {\n    if (!selectedItem) return;\n\n    try {\n      // Executar movimentação específica baseada no tipo\n      switch (tipoMovimentacao) {\n        case 'entrada':\n          await estoqueAPI.entrada(selectedItem.id, {\n            quantidade: formData.quantidade,\n            responsavelId: formData.responsavelId,\n            motivo: formData.motivo,\n            notaFiscal: formData.notaFiscal,\n            observacoes: formData.observacoes\n          });\n          break;\n          \n        case 'saida':\n          await estoqueAPI.saida(selectedItem.id, {\n            quantidade: formData.quantidade,\n            responsavelId: formData.responsavelId,\n            motivo: formData.motivo,\n            observacoes: formData.observacoes\n          });\n          break;\n          \n        case 'ajuste':\n          await estoqueAPI.ajuste(selectedItem.id, {\n            novaQuantidade: formData.quantidade,\n            responsavelId: formData.responsavelId,\n            motivo: formData.motivo,\n            observacoes: formData.observacoes\n          });\n          break;\n      }\n      \n      // Recarregar dados\n      await refetch();\n      \n      // Fechar modal e resetar\n      setShowMovimentacaoModal(false);\n      resetForm();\n      setSelectedItem(null);\n      \n    } catch (error) {\n      console.error('Erro ao executar movimentação:', error);\n      throw error;\n    }\n  };\n\n  return {\n    // Estados do modal\n    showMovimentacaoModal,\n    setShowMovimentacaoModal,\n    showHistoricoModal,\n    setShowHistoricoModal,\n    \n    // Estados da movimentação\n    tipoMovimentacao,\n    setTipoMovimentacao,\n    selectedItem,\n    setSelectedItem,\n    \n    // Estados do formulário\n    formData,\n    setFormData,\n    \n    // Operações\n    abrirMovimentacao,\n    executarMovimentacao,\n    resetForm,\n    handleInputChange\n  };\n};","import { useState, useMemo } from 'react';\nimport { ItemEstoque, TipoEPI } from '../types';\nimport { calcularStatusEstoque } from '../utils/estoqueHelpers';\nimport { createEntityLookup } from '../utils/entityHelpers';\n\ninterface UseInventoryFiltersResult {\n  // Estados de filtros\n  searchTerm: string;\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n  filtroStatus: string;\n  setFiltroStatus: React.Dispatch<React.SetStateAction<string>>;\n  filtroLocalizacao: string;\n  setFiltroLocalizacao: React.Dispatch<React.SetStateAction<string>>;\n  \n  // Dados processados\n  itensFiltrados: ItemEstoque[];\n  paginatedItens: ItemEstoque[];\n  totalPages: number;\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  \n  // Estatísticas\n  estatisticas: {\n    totalItens: number;\n    totalDisponivel: number;\n    estoqueMinimo: number;\n    proximoVencimento: number;\n  };\n  \n  // Helpers\n  getTipoEPI: (id: string) => TipoEPI | undefined;\n}\n\nconst ITEMS_PER_PAGE = 10;\n\nexport const useInventoryFilters = (\n  itensEstoque: ItemEstoque[] | null,\n  tiposEPI: TipoEPI[] | null\n): UseInventoryFiltersResult => {\n  // Estados de filtros\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtroStatus, setFiltroStatus] = useState<string>('todos');\n  const [filtroLocalizacao, setFiltroLocalizacao] = useState<string>('todas');\n  \n  // Paginação\n  const [currentPage, setCurrentPage] = useState(1);\n  \n  // Helpers para buscar entidades\n  const getTipoEPI = createEntityLookup(tiposEPI);\n  \n  // Filtrar itens\n  const itensFiltrados = useMemo(() => {\n    if (!itensEstoque) return [];\n    \n    return itensEstoque.filter(item => {\n      const tipoEPI = getTipoEPI(item.tipoEPIId);\n      const status = calcularStatusEstoque(item);\n      \n      // Filtro de busca\n      const searchMatch = !searchTerm || \n        tipoEPI?.nomeEquipamento.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tipoEPI?.numeroCA.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.localizacao.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      // Filtro de status\n      const statusMatch = filtroStatus === 'todos' || status === filtroStatus;\n      \n      // Filtro de localização\n      const localizacaoMatch = filtroLocalizacao === 'todas' || item.localizacao === filtroLocalizacao;\n      \n      return searchMatch && statusMatch && localizacaoMatch;\n    });\n  }, [itensEstoque, searchTerm, filtroStatus, filtroLocalizacao, getTipoEPI]);\n  \n  // Paginação\n  const totalPages = Math.ceil(itensFiltrados.length / ITEMS_PER_PAGE);\n  const paginatedItens = itensFiltrados.slice(\n    (currentPage - 1) * ITEMS_PER_PAGE,\n    currentPage * ITEMS_PER_PAGE\n  );\n  \n  // Calcular estatísticas\n  const estatisticas = useMemo(() => {\n    if (!itensEstoque) {\n      return {\n        totalItens: 0,\n        totalDisponivel: 0,\n        estoqueMinimo: 0,\n        proximoVencimento: 0\n      };\n    }\n    \n    return {\n      totalItens: itensEstoque.length,\n      totalDisponivel: itensEstoque.reduce((total, item) => total + item.quantidade, 0),\n      estoqueMinimo: itensEstoque.filter(item => calcularStatusEstoque(item) === 'baixo_estoque').length,\n      proximoVencimento: itensEstoque.filter(item => calcularStatusEstoque(item) === 'vencido').length\n    };\n  }, [itensEstoque]);\n  \n  return {\n    // Estados de filtros\n    searchTerm,\n    setSearchTerm,\n    filtroStatus,\n    setFiltroStatus,\n    filtroLocalizacao,\n    setFiltroLocalizacao,\n    \n    // Dados processados\n    itensFiltrados,\n    paginatedItens,\n    totalPages,\n    currentPage,\n    setCurrentPage,\n    \n    // Estatísticas\n    estatisticas,\n    \n    // Helpers\n    getTipoEPI\n  };\n};","import React, { useState } from 'react';\nimport { \n  Button, \n  Dropdown,\n  Pagination\n} from 'flowbite-react';\nimport { \n  EllipsisVerticalIcon,\n  ArrowDownTrayIcon,\n  ArrowUpTrayIcon,\n  ClipboardDocumentListIcon\n} from '@heroicons/react/24/outline';\nimport { useNavigate } from 'react-router-dom';\n\n// Componentes extraídos\nimport InventoryStats from '../components/inventory/InventoryStats';\nimport InventoryFilters from '../components/inventory/InventoryFilters';\nimport InventoryTable from '../components/inventory/InventoryTable';\nimport MovementModal from '../components/inventory/MovementModal';\nimport HistoryModal from '../components/inventory/HistoryModal';\nimport NewMovementModal from '../components/inventory/NewMovementModal';\n\n// Hooks\nimport { useAPI } from '../hooks/useAPI';\nimport { useInventoryMovements } from '../hooks/useInventoryMovements';\nimport { useInventoryFilters } from '../hooks/useInventoryFilters';\n\n// Types e APIs\nimport { ItemEstoque, TipoEPI } from '../types';\nimport { estoqueAPI, tiposEPIAPI } from '../services/api';\n\nconst EstoqueEPIsPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [showNewMovementModal, setShowNewMovementModal] = useState(false);\n  \n  // Hooks para carregar dados da API\n  const { data: itensEstoque, loading, error, refetch } = useAPI<ItemEstoque[]>(estoqueAPI.getAll);\n  const { data: tiposEPI } = useAPI<TipoEPI[]>(tiposEPIAPI.getAll);\n  \n  // Hook para movimentações de estoque\n  const {\n    showMovimentacaoModal,\n    setShowMovimentacaoModal,\n    showHistoricoModal,\n    setShowHistoricoModal,\n    tipoMovimentacao,\n    selectedItem,\n    setSelectedItem,\n    formData,\n    abrirMovimentacao,\n    executarMovimentacao,\n    resetForm,\n    handleInputChange\n  } = useInventoryMovements(refetch);\n  \n  // Hook para filtros e paginação\n  const {\n    searchTerm,\n    setSearchTerm,\n    filtroStatus,\n    setFiltroStatus,\n    filtroLocalizacao,\n    setFiltroLocalizacao,\n    paginatedItens,\n    totalPages,\n    currentPage,\n    setCurrentPage,\n    estatisticas,\n    getTipoEPI\n  } = useInventoryFilters(itensEstoque, tiposEPI);\n  \n  // Localizações únicas para filtro\n  const localizacoes = [...new Set(itensEstoque?.map(item => item.localizacao) || [])];\n  \n  // Handlers para ações da tabela\n  const handleAjuste = (item: ItemEstoque) => {\n    abrirMovimentacao(item, 'ajuste');\n  };\n  \n  const handleHistorico = (item: ItemEstoque) => {\n    setSelectedItem(item);\n    setShowHistoricoModal(true);\n  };\n  \n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  // Handler para nova movimentação multi-item\n  const handleNewMovement = async (movementData: any) => {\n    try {\n      const { movimentacaoNotasAPI } = await import('../services/api');\n      await movimentacaoNotasAPI.criarMovimentacao(movementData);\n      await refetch(); // Recarregar estoque\n    } catch (error) {\n      console.error('Erro ao criar movimentação:', error);\n      throw error;\n    }\n  };\n\n  // Sincronização automática removida - itens são criados automaticamente no catálogo\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Carregando estoque...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto mt-8 p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Erro ao carregar estoque</h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error}</p>\n              </div>\n              <div className=\"mt-4\">\n                <Button\n                  onClick={refetch}\n                  color=\"gray\"\n                  size=\"sm\"\n                >\n                  Tentar novamente\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900\">\n      <div className=\"mx-auto max-w-full\">\n        {/* Header */}\n        <div className=\"bg-white dark:bg-gray-900 relative shadow-md sm:rounded-lg overflow-hidden\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4\">\n            <div className=\"w-full md:w-1/2\">\n              <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Estoque de EPIs</h1>\n              <p className=\"text-gray-500 dark:text-gray-400\">Controle movimentações e inventário de equipamentos de proteção</p>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Button \n                onClick={() => setShowNewMovementModal(true)}\n                color=\"primary\"\n                sizing=\"xs\"\n                className=\"rounded-sm\"\n              >\n                <ArrowUpTrayIcon className=\"w-4 h-4 mr-2\" />\n                Nova Movimentação\n              </Button>\n              <Button \n                onClick={() => navigate('/movimentacoes')}\n                color=\"gray\"\n                sizing=\"xs\"\n                className=\"rounded-sm\"\n              >\n                <ClipboardDocumentListIcon className=\"w-4 h-4 mr-2\" />\n                Ver Movimentações\n              </Button>\n              <Dropdown\n                label=\"\"\n                dismissOnClick={false}\n                renderTrigger={() => (\n                  <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n                    <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                  </Button>\n                )}\n              >\n                <Dropdown.Item icon={ArrowDownTrayIcon}>\n                  Exportar relatório\n                </Dropdown.Item>\n              </Dropdown>\n            </div>\n          </div>\n\n          {/* Estatísticas */}\n          <InventoryStats stats={estatisticas} />\n\n          {/* Filtros */}\n          <InventoryFilters\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            filtroStatus={filtroStatus}\n            setFiltroStatus={setFiltroStatus}\n            filtroLocalizacao={filtroLocalizacao}\n            setFiltroLocalizacao={setFiltroLocalizacao}\n            localizacoes={localizacoes}\n          />\n\n          {/* Tabela */}\n          <InventoryTable\n            itens={paginatedItens}\n            getTipoEPI={getTipoEPI}\n            onAjuste={handleAjuste}\n            onHistorico={handleHistorico}\n          />\n\n          {/* Paginação */}\n          {totalPages > 1 && (\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4\">\n              <span className=\"text-sm font-normal text-gray-500 dark:text-gray-400\">\n                Mostrando <span className=\"font-semibold text-gray-900 dark:text-white\">{((currentPage - 1) * 10) + 1}-{Math.min(currentPage * 10, paginatedItens.length)}</span> de <span className=\"font-semibold text-gray-900 dark:text-white\">{paginatedItens.length}</span>\n              </span>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={onPageChange}\n                showIcons\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modais */}\n      {/* Modal para ajustes individuais (mantido para compatibilidade) */}\n      <MovementModal\n        show={showMovimentacaoModal}\n        onClose={() => {\n          setShowMovimentacaoModal(false);\n          resetForm();\n        }}\n        onSave={executarMovimentacao}\n        item={selectedItem}\n        tipo={tipoMovimentacao}\n        formData={formData}\n        onChange={handleInputChange}\n        getTipoEPI={getTipoEPI}\n      />\n\n      {/* Novo modal para movimentações multi-item */}\n      <NewMovementModal\n        show={showNewMovementModal}\n        onClose={() => setShowNewMovementModal(false)}\n        onSave={handleNewMovement}\n        tiposEPI={tiposEPI || []}\n        estoque={itensEstoque || []}\n        isLoading={loading}\n      />\n\n      <HistoryModal\n        show={showHistoricoModal}\n        onClose={() => {\n          setShowHistoricoModal(false);\n          setSelectedItem(null);\n        }}\n        item={selectedItem}\n        getTipoEPI={getTipoEPI}\n      />\n    </div>\n  );\n};\n\nexport default EstoqueEPIsPage;"],"file":"assets/EstoqueEPIs-BekCip_6.js"}