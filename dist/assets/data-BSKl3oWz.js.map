{"version":3,"file":"data-BSKl3oWz.js","sources":["../../src/mocks/data.ts"],"sourcesContent":["import { \n  Holding,\n  Empresa, \n  Colaborador, \n  TipoEPI, \n  ItemEstoque, \n  FichaEPI, \n  ItemFicha, \n  MovimentacaoEstoque, \n  Notificacao \n} from '../types';\n\n// Mock Holdings do Setor Elétrico\nexport const holdings: Holding[] = [\n  {\n    id: '1',\n    nome: 'Eletrobras',\n    cnpj: '00.001.180/0001-26',\n    setor: 'Energia Elétrica',\n    status: 'ativa'\n  },\n  {\n    id: '2',\n    nome: 'CPFL Energia',\n    cnpj: '02.998.611/0001-04',\n    setor: 'Energia Elétrica',\n    status: 'ativa'\n  },\n  {\n    id: '3',\n    nome: 'Enel Brasil',\n    cnpj: '09.463.895/0001-04',\n    setor: 'Energia Elétrica',\n    status: 'ativa'\n  },\n  {\n    id: '4',\n    nome: 'EDP Brasil',\n    cnpj: '03.983.077/0001-03',\n    setor: 'Energia Elétrica',\n    status: 'ativa'\n  },\n  {\n    id: '5',\n    nome: 'Light S.A.',\n    cnpj: '03.378.521/0001-75',\n    setor: 'Energia Elétrica',\n    status: 'ativa'\n  }\n];\n\n// Mock Empresas\nexport const empresas: Empresa[] = [\n  // Holdings\n  {\n    id: 'h1',\n    nome: 'Eletrobras',\n    cnpj: '00.001.180/0001-26',\n    endereco: 'Av. Presidente Vargas, 409 - Rio de Janeiro, RJ',\n    status: 'ativa',\n    tipo: 'holding'\n  },\n  {\n    id: 'h2',\n    nome: 'CPFL Energia',\n    cnpj: '02.998.611/0001-04',\n    endereco: 'Rod. Eng. Miguel Melhado Campos, 1.200 - Campinas, SP',\n    status: 'ativa',\n    tipo: 'holding'\n  },\n  {\n    id: 'h3',\n    nome: 'Enel Brasil',\n    cnpj: '09.463.895/0001-04',\n    endereco: 'Rua Aimberê, 2.828 - São Paulo, SP',\n    status: 'ativa',\n    tipo: 'holding'\n  },\n  {\n    id: 'h4',\n    nome: 'EDP Brasil',\n    cnpj: '03.983.077/0001-03',\n    endereco: 'Av. Olegário Maciel, 1.756 - Belo Horizonte, MG',\n    status: 'ativa',\n    tipo: 'holding'\n  },\n  {\n    id: 'h5',\n    nome: 'Light S.A.',\n    cnpj: '03.378.521/0001-75',\n    endereco: 'Av. Marechal Floriano, 168 - Rio de Janeiro, RJ',\n    status: 'ativa',\n    tipo: 'holding'\n  },\n  // Empresas Contratadas\n  {\n    id: '1',\n    nome: 'Construtora Elétrica ABC Ltda',\n    cnpj: '12.345.678/0001-90',\n    endereco: 'Rua das Obras, 123 - São Paulo, SP',\n    status: 'ativa',\n    holdingId: '1',\n    tipo: 'contratada'\n  },\n  {\n    id: '2',\n    nome: 'Engenharia e Montagem XYZ S.A.',\n    cnpj: '98.765.432/0001-10',\n    endereco: 'Av. Industrial, 456 - Santos, SP',\n    status: 'ativa',\n    holdingId: '1',\n    tipo: 'contratada'\n  },\n  {\n    id: '3',\n    nome: 'Manutenção Elétrica DEF',\n    cnpj: '11.222.333/0001-44',\n    endereco: 'Rua do Ferro, 789 - Guarulhos, SP',\n    status: 'ativa',\n    holdingId: '2',\n    tipo: 'contratada'\n  },\n  {\n    id: '4',\n    nome: 'Serviços Energéticos GHI',\n    cnpj: '33.444.555/0001-66',\n    endereco: 'Av. das Torres, 321 - Campinas, SP',\n    status: 'ativa',\n    holdingId: '2',\n    tipo: 'contratada'\n  },\n  {\n    id: '5',\n    nome: 'Instalações Elétricas JKL',\n    cnpj: '77.888.999/0001-00',\n    endereco: 'Rua da Energia, 555 - São Paulo, SP',\n    status: 'ativa',\n    holdingId: '3',\n    tipo: 'contratada'\n  },\n  {\n    id: '6',\n    nome: 'Subestações e Redes MNO',\n    cnpj: '55.666.777/0001-22',\n    endereco: 'Av. dos Cabos, 777 - Belo Horizonte, MG',\n    status: 'ativa',\n    holdingId: '4',\n    tipo: 'contratada'\n  },\n  {\n    id: '7',\n    nome: 'Manutenção Preventiva PQR',\n    cnpj: '99.000.111/0001-33',\n    endereco: 'Rua das Linhas, 888 - Rio de Janeiro, RJ',\n    status: 'ativa',\n    holdingId: '5',\n    tipo: 'contratada'\n  }\n];\n\n// Mock Colaboradores (dados fixos e determinísticos para consistência)\nconst gerarColaboradores = (): Colaborador[] => {\n  const baseColaboradores = [\n    { nome: 'João Silva Santos', cargo: 'Eletricista', empresaId: '1' },\n    { nome: 'Maria Oliveira Costa', cargo: 'Soldadora', empresaId: '2' },\n    { nome: 'Carlos Alberto Ferreira', cargo: 'Operador de Máquinas', empresaId: '3' },\n    { nome: 'Ana Paula Rodrigues', cargo: 'Técnica de Segurança', empresaId: '4' },\n    { nome: 'Pedro Henrique Lima', cargo: 'Pedreiro', empresaId: '5' },\n    { nome: 'Fernanda Santos Silva', cargo: 'Pintora', empresaId: '6' },\n    { nome: 'Roberto Carlos Souza', cargo: 'Encanador', empresaId: '7' },\n    { nome: 'Juliana Pereira Lima', cargo: 'Carpinteira', empresaId: '1' },\n    { nome: 'Anderson Silva Costa', cargo: 'Técnico Industrial', empresaId: '2' },\n    { nome: 'Patrícia Mendes Rodrigues', cargo: 'Auxiliar de Produção', empresaId: '3' },\n    { nome: 'Rafael Almeida Nunes', cargo: 'Montador', empresaId: '4' },\n    { nome: 'Camila Costa Barros', cargo: 'Soldadora', empresaId: '5' },\n    { nome: 'Lucas Santos Rocha', cargo: 'Eletricista', empresaId: '6' },\n    { nome: 'Mariana Lima Ferreira', cargo: 'Técnica de Segurança', empresaId: '7' },\n    { nome: 'Gabriel Rodrigues Silva', cargo: 'Operador de Máquinas', empresaId: '1' },\n    { nome: 'Bruna Oliveira Santos', cargo: 'Pedreiro', empresaId: '2' },\n    { nome: 'Diego Pereira Costa', cargo: 'Pintor', empresaId: '3' },\n    { nome: 'Amanda Silva Lima', cargo: 'Encanadora', empresaId: '4' },\n    { nome: 'Thiago Alves Souza', cargo: 'Carpinteiro', empresaId: '5' },\n    { nome: 'Larissa Mendes Rocha', cargo: 'Técnica Industrial', empresaId: '6' }\n  ];\n  \n  const colaboradores: Colaborador[] = [];\n  \n  for (let i = 0; i < 100; i++) {\n    const baseIndex = i % baseColaboradores.length;\n    const base = baseColaboradores[baseIndex];\n    const numero = Math.floor(i / baseColaboradores.length) + 1;\n    \n    const id = (i + 1).toString();\n    const nome = numero > 1 ? `${base.nome} ${numero}` : base.nome;\n    \n    // CPF determinístico baseado no ID\n    const cpfBase = String(i + 1).padStart(3, '0');\n    const cpf = `${cpfBase}.${cpfBase}.${cpfBase}-${String((i + 1) % 100).padStart(2, '0')}`;\n    \n    // Email baseado no nome e empresa\n    const empresaNome = empresas.find(e => e.id === base.empresaId)?.nome || 'empresa';\n    const emailDomain = empresaNome.toLowerCase().replace(/\\s+/g, '').replace(/[^\\w]/g, '');\n    const email = `${nome.toLowerCase().replace(/\\s+/g, '.')}@${emailDomain}.com`;\n    \n    // Data de admissão determinística\n    const anoAdmissao = 2022 + (i % 3);\n    const mesAdmissao = (i % 12);\n    const diaAdmissao = (i % 28) + 1;\n    \n    colaboradores.push({\n      id,\n      nome,\n      cpf,\n      email,\n      cargo: base.cargo,\n      dataAdmissao: new Date(anoAdmissao, mesAdmissao, diaAdmissao).toISOString(),\n      empresaId: base.empresaId,\n      status: i % 20 === 19 ? 'afastado' : (i % 50 === 49 ? 'desligado' : 'ativo'),\n      temFichaAtiva: false // Será atualizado dinamicamente\n    });\n  }\n  \n  return colaboradores;\n};\n\nexport const colaboradores = gerarColaboradores();\n\n// Mock Tipos de EPI (expandindo conforme plano - mínimo 50)\nconst gerarTiposEPI = (): TipoEPI[] => {\n  const equipamentos = [\n    { nome: 'Capacete de Segurança Classe A', categoria: 'Proteção da Cabeça', vidaUtil: 365 },\n    { nome: 'Capacete de Segurança Classe B', categoria: 'Proteção da Cabeça', vidaUtil: 365 },\n    { nome: 'Luva de Raspa com Punho', categoria: 'Proteção das Mãos', vidaUtil: 90 },\n    { nome: 'Luva de Vaqueta', categoria: 'Proteção das Mãos', vidaUtil: 60 },\n    { nome: 'Luva de Látex', categoria: 'Proteção das Mãos', vidaUtil: 30 },\n    { nome: 'Bota de Segurança com Bico de Aço', categoria: 'Proteção dos Pés', vidaUtil: 180 },\n    { nome: 'Bota de PVC', categoria: 'Proteção dos Pés', vidaUtil: 365 },\n    { nome: 'Óculos de Proteção Incolor', categoria: 'Proteção dos Olhos', vidaUtil: 120 },\n    { nome: 'Óculos de Proteção Escuro', categoria: 'Proteção dos Olhos', vidaUtil: 120 },\n    { nome: 'Respirador PFF2', categoria: 'Proteção Respiratória', vidaUtil: 30 },\n    { nome: 'Respirador PFF1', categoria: 'Proteção Respiratória', vidaUtil: 30 },\n    { nome: 'Máscara Facial', categoria: 'Proteção Respiratória', vidaUtil: 180 },\n    { nome: 'Cinto de Segurança Tipo Paraquedista', categoria: 'Proteção contra Quedas', vidaUtil: 365 },\n    { nome: 'Protetor Auricular de Espuma', categoria: 'Proteção Auditiva', vidaUtil: 1 },\n    { nome: 'Protetor Auricular de Silicone', categoria: 'Proteção Auditiva', vidaUtil: 30 },\n    { nome: 'Colete Refletivo', categoria: 'Sinalização', vidaUtil: 180 },\n    { nome: 'Avental de PVC', categoria: 'Proteção do Corpo', vidaUtil: 365 },\n    { nome: 'Manga de Raspa', categoria: 'Proteção dos Braços', vidaUtil: 90 }\n  ];\n  \n  const fabricantes = ['EPI Tech', 'ProtectMax', 'SafeStep', 'VisionSafe', 'AirProtect', 'HeightSafe', 'WorkGuard', 'SecurePro', 'SafetyFirst', 'ProEquip'];\n  \n  const tipos: TipoEPI[] = [];\n  \n  for (let i = 1; i <= 50; i++) {\n    const equipIndex = (i - 1) % equipamentos.length;\n    const fabricanteIndex = (i - 1) % fabricantes.length;\n    const equipamento = equipamentos[equipIndex];\n    const variantNumber = Math.floor((i - 1) / equipamentos.length) + 1;\n    \n    const nomeVariante = variantNumber > 1 ? \n      `${equipamento.nome} Modelo ${variantNumber}` : \n      equipamento.nome;\n    \n    tipos.push({\n      id: i.toString(),\n      numeroCA: (10000 + i).toString(),\n      nomeEquipamento: nomeVariante,\n      descricao: `${equipamento.nome} de alta qualidade para uso profissional. Modelo ${variantNumber}.`,\n      fabricante: fabricantes[fabricanteIndex],\n      categoria: equipamento.categoria,\n      vidaUtilDias: equipamento.vidaUtil,\n      foto: `https://via.placeholder.com/150/2563eb/FFFFFF?text=EPI+${i}`\n    });\n  }\n  \n  return tipos;\n};\n\nexport const tiposEPI = gerarTiposEPI();\n\n// Mock Estoque\nexport const estoque: ItemEstoque[] = [\n  {\n    id: '1',\n    tipoEPIId: tiposEPI[0].id,\n    empresaId: empresas[0].id,\n    quantidade: 50,\n    quantidadeMinima: 10,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-001',\n    dataValidade: '2028-01-15'\n  },\n  {\n    id: '2',\n    tipoEPIId: tiposEPI[1].id,\n    empresaId: empresas[0].id,\n    quantidade: 200,\n    quantidadeMinima: 20,\n    localizacao: 'Estoque B',\n    lote: 'LOTE-002',\n    dataValidade: '2025-06-10'\n  },\n  {\n    id: '3',\n    tipoEPIId: tiposEPI[2].id,\n    empresaId: empresas[0].id,\n    quantidade: 75,\n    quantidadeMinima: 15,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-003',\n    dataValidade: '2027-03-20'\n  },\n  {\n    id: '4',\n    tipoEPIId: tiposEPI[3].id,\n    empresaId: empresas[0].id,\n    quantidade: 5,\n    quantidadeMinima: 20,\n    localizacao: 'Estoque C',\n    lote: 'LOTE-004',\n    dataValidade: '2026-08-05'\n  },\n  {\n    id: '5',\n    tipoEPIId: tiposEPI[4].id,\n    empresaId: empresas[1].id,\n    quantidade: 300,\n    quantidadeMinima: 50,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-005',\n    dataValidade: '2024-09-12'\n  },\n  {\n    id: '6',\n    tipoEPIId: tiposEPI[5].id,\n    empresaId: empresas[1].id,\n    quantidade: 25,\n    quantidadeMinima: 10,\n    localizacao: 'Estoque B',\n    lote: 'LOTE-006',\n    dataValidade: '2028-02-28'\n  }\n];\n\n// Mock Itens de Ficha\nconst itensColaborador1: ItemFicha[] = [\n  {\n    id: '1',\n    tipoEPIId: tiposEPI[0].id,\n    quantidade: 1,\n    dataEntrega: '2023-10-01',\n    dataValidade: '2024-10-01',\n    status: 'entregue',\n    entregaId: 'mock-entrega-1-1'\n  },\n  {\n    id: '2',\n    tipoEPIId: tiposEPI[1].id,\n    quantidade: 2,\n    dataEntrega: '2023-10-01',\n    dataValidade: '2024-01-01',\n    status: 'entregue',\n    entregaId: 'mock-entrega-1-2'\n  },\n  {\n    id: '3',\n    tipoEPIId: tiposEPI[2].id,\n    quantidade: 1,\n    dataEntrega: '2023-09-15',\n    dataValidade: '2024-03-15',\n    status: 'devolvido',\n    observacoes: 'Fim do contrato',\n    entregaId: 'mock-entrega-1-3'\n  }\n];\n\nconst itensColaborador2: ItemFicha[] = [\n  {\n    id: '4',\n    tipoEPIId: tiposEPI[3].id,\n    quantidade: 1,\n    dataEntrega: '2023-11-10',\n    dataValidade: '2024-03-10',\n    status: 'entregue',\n    entregaId: 'mock-entrega-2-1'\n  },\n  {\n    id: '5',\n    tipoEPIId: tiposEPI[4].id,\n    quantidade: 10,\n    dataEntrega: '2023-11-10',\n    dataValidade: '2023-12-10',\n    status: 'entregue',\n    entregaId: 'mock-entrega-2-2'\n  }\n];\n\n// Função para gerar fichas realistas (mínimo 50 conforme plano)\nconst gerarFichasEPI = (): FichaEPI[] => {\n  const fichas: FichaEPI[] = [];\n  \n  // Primeiras 4 fichas com dados específicos\n  fichas.push(\n    {\n      id: '1',\n      colaboradorId: colaboradores[0].id,\n      empresaId: colaboradores[0].empresaId,\n      dataEmissao: '2023-09-15',\n      dataValidade: '2024-09-15',\n      status: 'ativo',\n      itens: itensColaborador1\n    },\n    {\n      id: '2',\n      colaboradorId: colaboradores[1].id,\n      empresaId: colaboradores[1].empresaId,\n      dataEmissao: '2023-11-10',\n      dataValidade: '2024-11-10',\n      status: 'ativo',\n      itens: itensColaborador2\n    },\n    {\n      id: '3',\n      colaboradorId: colaboradores[2].id,\n      empresaId: colaboradores[2].empresaId,\n      dataEmissao: '2023-08-01',\n      dataValidade: '2024-08-01',\n      status: 'suspenso',\n      itens: []\n    },\n    {\n      id: '4',\n      colaboradorId: colaboradores[3].id,\n      empresaId: colaboradores[3].empresaId,\n      dataEmissao: '2023-12-01',\n      dataValidade: '2024-12-01',\n      status: 'ativo',\n      itens: [\n        {\n          id: '6',\n          tipoEPIId: tiposEPI[5].id,\n          quantidade: 1,\n          dataEntrega: '2023-12-01',\n          dataValidade: '2024-12-01',\n          status: 'entregue',\n          entregaId: 'entrega_1'\n        }\n      ]\n    }\n  );\n\n  // Gerar fichas adicionais para completar pelo menos 80 fichas\n  for (let i = 5; i <= 80; i++) {\n    const colaboradorIndex = (i - 5) % Math.min(colaboradores.length, 80);\n    const colaborador = colaboradores[colaboradorIndex];\n    \n    if (!colaborador) continue;\n    \n    // Evitar duplicatas\n    if (fichas.find(f => f.colaboradorId === colaborador.id)) continue;\n    \n    const statusOptions = ['ativo', 'ativo', 'ativo', 'suspenso', 'arquivado']; // Mais ativos\n    const status = statusOptions[i % statusOptions.length];\n    \n    const ano = 2023;\n    const mes = (i - 5) % 12;\n    const dia = ((i - 5) % 28) + 1;\n    const dataEmissao = new Date(ano, mes, dia);\n    const dataValidade = new Date(dataEmissao);\n    dataValidade.setFullYear(dataValidade.getFullYear() + 1);\n    \n    // Gerar itens para a ficha (determinístico)\n    const numItens = status === 'ativo' ? ((i % 5) + 1) : ((i % 3) + 1);\n    const itensFicha: ItemFicha[] = [];\n    \n    for (let j = 0; j < numItens; j++) {\n      const tipoEPIIndex = (i + j) % Math.min(tiposEPI.length, 20);\n      const tipoEPI = tiposEPI[tipoEPIIndex];\n      \n      if (!tipoEPI) continue;\n      \n      const dataEntrega = new Date(dataEmissao);\n      dataEntrega.setDate(dataEntrega.getDate() + ((i + j) % 30));\n      \n      const dataValidadeItem = new Date(dataEntrega);\n      dataValidadeItem.setDate(dataValidadeItem.getDate() + tipoEPI.vidaUtilDias);\n      \n      const statusItems = ['entregue', 'entregue', 'entregue', 'entregue', 'devolvido', 'danificado', 'perdido'];\n      const itemStatus = status === 'ativo' ? \n        ((i + j) % 5 === 0 ? 'devolvido' : 'entregue') : \n        statusItems[(i + j) % statusItems.length];\n      \n      const observacoes = ['Fim de contrato', 'Substituição', 'Danificado', 'Vencimento'];\n      \n      itensFicha.push({\n        id: `${i}_${j}`,\n        tipoEPIId: tipoEPI.id,\n        quantidade: ((i + j) % 3) + 1,\n        dataEntrega: dataEntrega.toISOString(),\n        dataValidade: dataValidadeItem.toISOString(),\n        status: itemStatus as any,\n        entregaId: `mock-entrega-${i}-${j}`, // Referência mock para entrega\n        ...(itemStatus === 'devolvido' && { \n          observacoes: observacoes[(i + j) % observacoes.length]\n        })\n      });\n    }\n    \n    fichas.push({\n      id: i.toString(),\n      colaboradorId: colaborador.id,\n      empresaId: colaborador.empresaId,\n      dataEmissao: dataEmissao.toISOString(),\n      dataValidade: dataValidade.toISOString(),\n      status: status as 'ativo' | 'suspenso' | 'arquivado',\n      itens: itensFicha\n    });\n  }\n  \n  return fichas;\n};\n\nexport const fichasEPI = gerarFichasEPI();\n\n// Mock Movimentações de Estoque\nexport const movimentacoesEstoque: MovimentacaoEstoque[] = [\n  {\n    id: '1',\n    tipo: 'entrada',\n    itemEstoqueId: estoque[0].id,\n    quantidade: 100,\n    quantidadeAnterior: 0,\n    quantidadeAtual: 100,\n    data: '2023-10-01',\n    responsavelId: colaboradores[0].id,\n    motivo: 'Compra inicial de capacetes',\n    observacoes: 'NF-001234'\n  },\n  {\n    id: '2',\n    tipo: 'saida',\n    itemEstoqueId: estoque[0].id,\n    quantidade: 50,\n    quantidadeAnterior: 100,\n    quantidadeAtual: 50,\n    data: '2023-10-15',\n    responsavelId: colaboradores[1].id,\n    motivo: 'Entrega para colaboradores'\n  },\n  {\n    id: '3',\n    tipo: 'entrada',\n    itemEstoqueId: estoque[1].id,\n    quantidade: 500,\n    quantidadeAnterior: 0,\n    quantidadeAtual: 500,\n    data: '2023-09-20',\n    responsavelId: colaboradores[0].id,\n    motivo: 'Estoque de luvas',\n    observacoes: 'NF-001235'\n  }\n];\n\n// Mock Notificações\nexport const notificacoes: Notificacao[] = [\n  {\n    id: '1',\n    titulo: 'EPIs próximos ao vencimento',\n    mensagem: '23 EPIs vencem nos próximos 30 dias',\n    tipo: 'vencimento',\n    data: '2023-12-10',\n    lida: false,\n    link: '/fichas'\n  },\n  {\n    id: '2',\n    titulo: 'Estoque baixo - Óculos de Proteção',\n    mensagem: 'Apenas 5 unidades em estoque',\n    tipo: 'estoque_baixo',\n    data: '2023-12-09',\n    lida: false,\n    link: '/estoque'\n  },\n  {\n    id: '3',\n    titulo: 'CA vencendo',\n    mensagem: 'Certificado de Aprovação 45678 vence em 15 dias',\n    tipo: 'vencendo',\n    data: '2023-12-08',\n    lida: true,\n    link: '/catalogo'\n  }\n];"],"names":["holdings","empresas","gerarColaboradores","_a","baseColaboradores","colaboradores","i","baseIndex","base","numero","id","nome","cpfBase","cpf","emailDomain","e","email","anoAdmissao","mesAdmissao","diaAdmissao","gerarTiposEPI","equipamentos","fabricantes","tipos","equipIndex","fabricanteIndex","equipamento","variantNumber","nomeVariante","tiposEPI","estoque","itensColaborador1","itensColaborador2","gerarFichasEPI","fichas","colaboradorIndex","colaborador","f","statusOptions","status","ano","mes","dia","dataEmissao","dataValidade","numItens","itensFicha","j","tipoEPIIndex","tipoEPI","dataEntrega","dataValidadeItem","statusItems","itemStatus","observacoes","fichasEPI","movimentacoesEstoque","notificacoes"],"mappings":"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"}