{"version":3,"file":"data-Duyhov1Y.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowDownTrayIcon.js","../../src/mocks/data.ts"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowDownTrayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowDownTrayIcon);\nexport default ForwardRef;","import { \n  Empresa, \n  Colaborador, \n  TipoEPI, \n  ItemEstoque, \n  FichaEPI, \n  ItemFicha, \n  MovimentacaoEstoque, \n  Notificacao \n} from '../types';\n\n// Mock Empresas\nexport const empresas: Empresa[] = [\n  {\n    id: '1',\n    nome: 'Construtora ABC Ltda',\n    cnpj: '12.345.678/0001-90',\n    endereco: 'Rua das Obras, 123 - São Paulo, SP',\n    status: 'ativa'\n  },\n  {\n    id: '2',\n    nome: 'Indústria XYZ S.A.',\n    cnpj: '98.765.432/0001-10',\n    endereco: 'Av. Industrial, 456 - Santos, SP',\n    status: 'ativa'\n  },\n  {\n    id: '3',\n    nome: 'Metalúrgica DEF',\n    cnpj: '11.222.333/0001-44',\n    endereco: 'Rua do Ferro, 789 - Guarulhos, SP',\n    status: 'inativa'\n  }\n];\n\n// Mock Colaboradores (expandindo conforme plano - mínimo 100)\nconst gerarColaboradores = (): Colaborador[] => {\n  const nomes = ['João Silva Santos', 'Maria Oliveira Costa', 'Carlos Alberto Ferreira', 'Ana Paula Rodrigues', 'Pedro Henrique Lima', 'Fernanda Santos Silva', 'Roberto Carlos Souza', 'Juliana Pereira Lima', 'Anderson Silva Costa', 'Patrícia Mendes Rodrigues'];\n  const cargos = ['Pedreiro', 'Soldadora', 'Operador de Máquinas', 'Técnica de Segurança', 'Eletricista', 'Pintor', 'Encanador', 'Carpinteiro', 'Técnico Industrial', 'Auxiliar de Produção'];\n  \n  const colaboradores: Colaborador[] = [];\n  \n  for (let i = 1; i <= 100; i++) {\n    const nomeIndex = Math.floor(Math.random() * nomes.length);\n    const cargoIndex = Math.floor(Math.random() * cargos.length);\n    const empresaIndex = Math.floor(Math.random() * empresas.length);\n    \n    colaboradores.push({\n      id: i.toString(),\n      nome: `${nomes[nomeIndex]} ${i}`,\n      cpf: `${Math.floor(Math.random() * 900 + 100)}.${Math.floor(Math.random() * 900 + 100)}.${Math.floor(Math.random() * 900 + 100)}-${Math.floor(Math.random() * 90 + 10)}`,\n      email: `colaborador${i}@${empresas[empresaIndex].nome.toLowerCase().replace(/\\s+/g, '').replace(/[^\\w]/g, '')}.com`,\n      cargo: cargos[cargoIndex],\n      dataAdmissao: new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1).toISOString(),\n      empresaId: empresas[empresaIndex].id,\n      status: Math.random() > 0.1 ? 'ativo' : (Math.random() > 0.5 ? 'afastado' : 'desligado')\n    });\n  }\n  \n  return colaboradores;\n};\n\nexport const colaboradores = gerarColaboradores();\n\n// Mock Tipos de EPI (expandindo conforme plano - mínimo 50)\nconst gerarTiposEPI = (): TipoEPI[] => {\n  const equipamentos = [\n    { nome: 'Capacete de Segurança Classe A', categoria: 'Proteção da Cabeça', vidaUtil: 365 },\n    { nome: 'Capacete de Segurança Classe B', categoria: 'Proteção da Cabeça', vidaUtil: 365 },\n    { nome: 'Luva de Raspa com Punho', categoria: 'Proteção das Mãos', vidaUtil: 90 },\n    { nome: 'Luva de Vaqueta', categoria: 'Proteção das Mãos', vidaUtil: 60 },\n    { nome: 'Luva de Látex', categoria: 'Proteção das Mãos', vidaUtil: 30 },\n    { nome: 'Bota de Segurança com Bico de Aço', categoria: 'Proteção dos Pés', vidaUtil: 180 },\n    { nome: 'Bota de PVC', categoria: 'Proteção dos Pés', vidaUtil: 365 },\n    { nome: 'Óculos de Proteção Incolor', categoria: 'Proteção dos Olhos', vidaUtil: 120 },\n    { nome: 'Óculos de Proteção Escuro', categoria: 'Proteção dos Olhos', vidaUtil: 120 },\n    { nome: 'Respirador PFF2', categoria: 'Proteção Respiratória', vidaUtil: 30 },\n    { nome: 'Respirador PFF1', categoria: 'Proteção Respiratória', vidaUtil: 30 },\n    { nome: 'Máscara Facial', categoria: 'Proteção Respiratória', vidaUtil: 180 },\n    { nome: 'Cinto de Segurança Tipo Paraquedista', categoria: 'Proteção contra Quedas', vidaUtil: 365 },\n    { nome: 'Protetor Auricular de Espuma', categoria: 'Proteção Auditiva', vidaUtil: 1 },\n    { nome: 'Protetor Auricular de Silicone', categoria: 'Proteção Auditiva', vidaUtil: 30 },\n    { nome: 'Colete Refletivo', categoria: 'Sinalização', vidaUtil: 180 },\n    { nome: 'Avental de PVC', categoria: 'Proteção do Corpo', vidaUtil: 365 },\n    { nome: 'Manga de Raspa', categoria: 'Proteção dos Braços', vidaUtil: 90 }\n  ];\n  \n  const fabricantes = ['EPI Tech', 'ProtectMax', 'SafeStep', 'VisionSafe', 'AirProtect', 'HeightSafe', 'WorkGuard', 'SecurePro', 'SafetyFirst', 'ProEquip'];\n  \n  const tipos: TipoEPI[] = [];\n  \n  for (let i = 1; i <= 50; i++) {\n    const equipIndex = Math.floor(Math.random() * equipamentos.length);\n    const fabricanteIndex = Math.floor(Math.random() * fabricantes.length);\n    const equipamento = equipamentos[equipIndex];\n    \n    tipos.push({\n      id: i.toString(),\n      numeroCA: (10000 + i).toString(),\n      nomeEquipamento: `${equipamento.nome} ${i}`,\n      descricao: `Descrição do ${equipamento.nome} ${i}`,\n      fabricante: fabricantes[fabricanteIndex],\n      categoria: equipamento.categoria,\n      vidaUtilDias: equipamento.vidaUtil,\n      foto: `https://via.placeholder.com/150/${Math.floor(Math.random()*16777215).toString(16)}/FFFFFF?text=EPI${i}`\n    });\n  }\n  \n  return tipos;\n};\n\nexport const tiposEPI = gerarTiposEPI();\n\n// Mock Estoque\nexport const estoque: ItemEstoque[] = [\n  {\n    id: '1',\n    tipoEPIId: tiposEPI[0].id,\n    empresaId: empresas[0].id,\n    quantidade: 50,\n    quantidadeMinima: 10,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-001',\n    dataValidade: '2028-01-15'\n  },\n  {\n    id: '2',\n    tipoEPIId: tiposEPI[1].id,\n    empresaId: empresas[0].id,\n    quantidade: 200,\n    quantidadeMinima: 20,\n    localizacao: 'Estoque B',\n    lote: 'LOTE-002',\n    dataValidade: '2025-06-10'\n  },\n  {\n    id: '3',\n    tipoEPIId: tiposEPI[2].id,\n    empresaId: empresas[0].id,\n    quantidade: 75,\n    quantidadeMinima: 15,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-003',\n    dataValidade: '2027-03-20'\n  },\n  {\n    id: '4',\n    tipoEPIId: tiposEPI[3].id,\n    empresaId: empresas[0].id,\n    quantidade: 5,\n    quantidadeMinima: 20,\n    localizacao: 'Estoque C',\n    lote: 'LOTE-004',\n    dataValidade: '2026-08-05'\n  },\n  {\n    id: '5',\n    tipoEPIId: tiposEPI[4].id,\n    empresaId: empresas[1].id,\n    quantidade: 300,\n    quantidadeMinima: 50,\n    localizacao: 'Estoque A',\n    lote: 'LOTE-005',\n    dataValidade: '2024-09-12'\n  },\n  {\n    id: '6',\n    tipoEPIId: tiposEPI[5].id,\n    empresaId: empresas[1].id,\n    quantidade: 25,\n    quantidadeMinima: 10,\n    localizacao: 'Estoque B',\n    lote: 'LOTE-006',\n    dataValidade: '2028-02-28'\n  }\n];\n\n// Mock Itens de Ficha\nconst itensColaborador1: ItemFicha[] = [\n  {\n    id: '1',\n    tipoEPIId: tiposEPI[0].id,\n    quantidade: 1,\n    dataEntrega: '2023-10-01',\n    dataValidade: '2024-10-01',\n    status: 'entregue'\n  },\n  {\n    id: '2',\n    tipoEPIId: tiposEPI[1].id,\n    quantidade: 2,\n    dataEntrega: '2023-10-01',\n    dataValidade: '2024-01-01',\n    status: 'entregue'\n  },\n  {\n    id: '3',\n    tipoEPIId: tiposEPI[2].id,\n    quantidade: 1,\n    dataEntrega: '2023-09-15',\n    dataValidade: '2024-03-15',\n    status: 'devolvido',\n    observacoes: 'Fim do contrato'\n  }\n];\n\nconst itensColaborador2: ItemFicha[] = [\n  {\n    id: '4',\n    tipoEPIId: tiposEPI[3].id,\n    quantidade: 1,\n    dataEntrega: '2023-11-10',\n    dataValidade: '2024-03-10',\n    status: 'entregue'\n  },\n  {\n    id: '5',\n    tipoEPIId: tiposEPI[4].id,\n    quantidade: 10,\n    dataEntrega: '2023-11-10',\n    dataValidade: '2023-12-10',\n    status: 'entregue'\n  }\n];\n\n// Função para gerar fichas realistas (mínimo 50 conforme plano)\nconst gerarFichasEPI = (): FichaEPI[] => {\n  const fichas: FichaEPI[] = [];\n  \n  // Primeiras 4 fichas com dados específicos\n  fichas.push(\n    {\n      id: '1',\n      colaboradorId: colaboradores[0].id,\n      empresaId: colaboradores[0].empresaId,\n      dataEmissao: '2023-09-15',\n      dataValidade: '2024-09-15',\n      status: 'ativo',\n      itens: itensColaborador1\n    },\n    {\n      id: '2',\n      colaboradorId: colaboradores[1].id,\n      empresaId: colaboradores[1].empresaId,\n      dataEmissao: '2023-11-10',\n      dataValidade: '2024-11-10',\n      status: 'ativo',\n      itens: itensColaborador2\n    },\n    {\n      id: '3',\n      colaboradorId: colaboradores[2].id,\n      empresaId: colaboradores[2].empresaId,\n      dataEmissao: '2023-08-01',\n      dataValidade: '2024-08-01',\n      status: 'suspenso',\n      itens: []\n    },\n    {\n      id: '4',\n      colaboradorId: colaboradores[3].id,\n      empresaId: colaboradores[3].empresaId,\n      dataEmissao: '2023-12-01',\n      dataValidade: '2024-12-01',\n      status: 'ativo',\n      itens: [\n        {\n          id: '6',\n          tipoEPIId: tiposEPI[5].id,\n          quantidade: 1,\n          dataEntrega: '2023-12-01',\n          dataValidade: '2024-12-01',\n          status: 'entregue'\n        }\n      ]\n    }\n  );\n\n  // Gerar fichas adicionais para completar pelo menos 80 fichas\n  for (let i = 5; i <= 80; i++) {\n    const colaboradorIndex = Math.floor(Math.random() * Math.min(colaboradores.length, 80));\n    const colaborador = colaboradores[colaboradorIndex];\n    \n    if (!colaborador) continue;\n    \n    // Evitar duplicatas\n    if (fichas.find(f => f.colaboradorId === colaborador.id)) continue;\n    \n    const statusOptions = ['ativo', 'ativo', 'ativo', 'suspenso', 'arquivado']; // Mais ativos\n    const status = statusOptions[Math.floor(Math.random() * statusOptions.length)];\n    \n    const dataEmissao = new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1);\n    const dataValidade = new Date(dataEmissao);\n    dataValidade.setFullYear(dataValidade.getFullYear() + 1);\n    \n    // Gerar itens para a ficha\n    const numItens = status === 'ativo' ? Math.floor(Math.random() * 5) + 1 : Math.floor(Math.random() * 3);\n    const itensFicha: ItemFicha[] = [];\n    \n    for (let j = 0; j < numItens; j++) {\n      const tipoEPIIndex = Math.floor(Math.random() * Math.min(tiposEPI.length, 20));\n      const tipoEPI = tiposEPI[tipoEPIIndex];\n      \n      if (!tipoEPI) continue;\n      \n      const dataEntrega = new Date(dataEmissao);\n      dataEntrega.setDate(dataEntrega.getDate() + Math.floor(Math.random() * 30));\n      \n      const dataValidadeItem = new Date(dataEntrega);\n      dataValidadeItem.setDate(dataValidadeItem.getDate() + tipoEPI.vidaUtilDias);\n      \n      const statusItem = status === 'ativo' ? \n        (Math.random() > 0.2 ? 'entregue' : 'devolvido') : \n        'devolvido';\n      \n      itensFicha.push({\n        id: `${i}_${j}`,\n        tipoEPIId: tipoEPI.id,\n        quantidade: Math.floor(Math.random() * 3) + 1,\n        dataEntrega: dataEntrega.toISOString(),\n        dataValidade: dataValidadeItem.toISOString(),\n        status: statusItem,\n        ...(statusItem === 'devolvido' && { \n          observacoes: ['Fim de contrato', 'Substituição', 'Danificado', 'Vencimento'][Math.floor(Math.random() * 4)]\n        })\n      });\n    }\n    \n    fichas.push({\n      id: i.toString(),\n      colaboradorId: colaborador.id,\n      empresaId: colaborador.empresaId,\n      dataEmissao: dataEmissao.toISOString(),\n      dataValidade: dataValidade.toISOString(),\n      status: status as 'ativo' | 'suspenso' | 'arquivado',\n      itens: itensFicha\n    });\n  }\n  \n  return fichas;\n};\n\nexport const fichasEPI = gerarFichasEPI();\n\n// Mock Movimentações de Estoque\nexport const movimentacoesEstoque: MovimentacaoEstoque[] = [\n  {\n    id: '1',\n    tipo: 'entrada',\n    itemEstoqueId: estoque[0].id,\n    quantidade: 100,\n    data: '2023-10-01',\n    responsavelId: colaboradores[0].id,\n    motivo: 'Compra inicial de capacetes',\n    observacoes: 'NF-001234'\n  },\n  {\n    id: '2',\n    tipo: 'saida',\n    itemEstoqueId: estoque[0].id,\n    quantidade: 50,\n    data: '2023-10-15',\n    responsavelId: colaboradores[1].id,\n    motivo: 'Entrega para colaboradores'\n  },\n  {\n    id: '3',\n    tipo: 'entrada',\n    itemEstoqueId: estoque[1].id,\n    quantidade: 500,\n    data: '2023-09-20',\n    responsavelId: colaboradores[0].id,\n    motivo: 'Estoque de luvas',\n    observacoes: 'NF-001235'\n  }\n];\n\n// Mock Notificações\nexport const notificacoes: Notificacao[] = [\n  {\n    id: '1',\n    titulo: 'EPIs próximos ao vencimento',\n    mensagem: '23 EPIs vencem nos próximos 30 dias',\n    tipo: 'vencimento',\n    data: '2023-12-10',\n    lida: false,\n    link: '/fichas'\n  },\n  {\n    id: '2',\n    titulo: 'Estoque baixo - Óculos de Proteção',\n    mensagem: 'Apenas 5 unidades em estoque',\n    tipo: 'estoque_baixo',\n    data: '2023-12-09',\n    lida: false,\n    link: '/estoque'\n  },\n  {\n    id: '3',\n    titulo: 'CA vencendo',\n    mensagem: 'Certificado de Aprovação 45678 vence em 15 dias',\n    tipo: 'vencendo',\n    data: '2023-12-08',\n    lida: true,\n    link: '/catalogo'\n  }\n];"],"names":["ArrowDownTrayIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","empresas","gerarColaboradores","nomes","cargos","colaboradores","i","nomeIndex","cargoIndex","empresaIndex","gerarTiposEPI","equipamentos","fabricantes","tipos","equipIndex","fabricanteIndex","equipamento","tiposEPI","estoque","itensColaborador1","itensColaborador2","gerarFichasEPI","fichas","colaboradorIndex","colaborador","f","statusOptions","status","dataEmissao","dataValidade","numItens","itensFicha","j","tipoEPIIndex","tipoEPI","dataEntrega","dataValidadeItem","statusItem","fichasEPI"],"mappings":"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","x_google_ignoreList":[0]}