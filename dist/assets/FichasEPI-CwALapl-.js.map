{"version":3,"file":"FichasEPI-CwALapl-.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/UserPlusIcon.js","../../src/components/StatusIndicator.tsx","../../src/utils/historicoHelpers.ts","../../src/pages/FichasEPI.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction UserPlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserPlusIcon);\nexport default ForwardRef;","import React from 'react';\nimport { Badge } from 'flowbite-react';\n\ninterface StatusIndicatorProps {\n  status: string;\n  variant?: 'user' | 'ficha' | 'estoque';\n}\n\nconst StatusIndicator: React.FC<StatusIndicatorProps> = ({ status, variant = 'user' }) => {\n  const getStatusConfig = (status: string, variant: string) => {\n    const configs = {\n      user: {\n        ativo: { color: 'success' as const, text: 'Ativo' },\n        inativo: { color: 'gray' as const, text: 'Inativo' },\n        afastado: { color: 'warning' as const, text: 'Afastado' },\n        desligado: { color: 'failure' as const, text: 'Desligado' }\n      },\n      ficha: {\n        ativo: { color: 'success' as const, text: 'Ativo' },\n        suspenso: { color: 'warning' as const, text: 'Suspenso' },\n        arquivado: { color: 'gray' as const, text: 'Arquivado' },\n        vencido: { color: 'failure' as const, text: 'Vencido' }\n      },\n      estoque: {\n        normal: { color: 'success' as const, text: 'Normal' },\n        baixo: { color: 'warning' as const, text: 'Baixo' },\n        'em falta': { color: 'failure' as const, text: 'Em falta' },\n        falta: { color: 'failure' as const, text: 'Em falta' }\n      }\n    } as const;\n\n    const variantConfigs = configs[variant as keyof typeof configs];\n    if (!variantConfigs) return { color: 'gray' as const, text: status };\n    \n    const statusConfig = variantConfigs[status as keyof typeof variantConfigs];\n    return statusConfig || { color: 'gray' as const, text: status };\n  };\n\n  const { color, text } = getStatusConfig(status, variant);\n\n  return (\n    <Badge color={color} size=\"sm\" className=\"w-fit\">\n      {text}\n    </Badge>\n  );\n};\n\nexport default StatusIndicator;","import { EventoHistorico } from '../types';\nimport { historicoAPI } from '../services/api';\n\nexport const registrarEventoHistorico = async (evento: Omit<EventoHistorico, 'id' | 'data'>) => {\n  try {\n    const novoEvento: EventoHistorico = {\n      ...evento,\n      id: `hist_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      data: new Date().toISOString(),\n    };\n    \n    await historicoAPI.create(novoEvento);\n    return novoEvento;\n  } catch (error) {\n    console.error('Erro ao registrar evento no histórico:', error);\n    // Não bloquear operação principal se histórico falhar\n  }\n};\n\nexport const criarEventoFichaCriada = (fichaEPIId: string, colaboradorNome: string) => ({\n  fichaEPIId,\n  tipo: 'ficha_criada' as const,\n  responsavel: 'Sistema EPI',\n  descricao: `Ficha de EPI criada para o colaborador ${colaboradorNome}`\n});\n\nexport const criarEventoEntregaCriada = (\n  fichaEPIId: string, \n  entregaId: string, \n  equipamentos: string[], \n  quantidades: number[],\n  responsavel: string\n) => ({\n  fichaEPIId,\n  tipo: 'entrega_criada' as const,\n  responsavel,\n  descricao: `Nova entrega criada com ${equipamentos.length} equipamento(s): ${equipamentos.join(', ')}`,\n  detalhes: {\n    entregaId,\n    equipamentos,\n    quantidades\n  }\n});\n\nexport const criarEventoEntregaEditada = (\n  fichaEPIId: string, \n  entregaId: string, \n  equipamentos: string[], \n  quantidades: number[],\n  responsavel: string\n) => ({\n  fichaEPIId,\n  tipo: 'entrega_editada' as const,\n  responsavel,\n  descricao: `Entrega #${entregaId} foi editada - ${equipamentos.length} equipamento(s): ${equipamentos.join(', ')}`,\n  detalhes: {\n    entregaId,\n    equipamentos,\n    quantidades\n  }\n});\n\nexport const criarEventoEntregaExcluida = (\n  fichaEPIId: string, \n  entregaId: string, \n  equipamentos: string[],\n  responsavel: string\n) => ({\n  fichaEPIId,\n  tipo: 'entrega_excluida' as const,\n  responsavel,\n  descricao: `Entrega #${entregaId} foi excluída - Equipamentos removidos: ${equipamentos.join(', ')}`,\n  detalhes: {\n    entregaId,\n    equipamentos\n  }\n});\n\nexport const criarEventoItemDevolvido = (\n  fichaEPIId: string,\n  equipamento: string,\n  responsavel: string\n) => ({\n  fichaEPIId,\n  tipo: 'item_devolvido' as const,\n  responsavel,\n  descricao: `Equipamento devolvido: ${equipamento}`\n});\n\nexport const criarEventoItemDesativado = (\n  fichaEPIId: string,\n  equipamento: string,\n  responsavel: string\n) => ({\n  fichaEPIId,\n  tipo: 'item_desativado' as const,\n  responsavel,\n  descricao: `Equipamento desativado: ${equipamento}`\n});","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Button, \n  TextInput, \n  Select,\n  Label, \n  Table, \n  Modal, \n  Badge,\n  Pagination, \n  Dropdown \n} from 'flowbite-react';\nimport { \n \n  EllipsisVerticalIcon, \n  UserPlusIcon, \n  EyeIcon,\n  DocumentDuplicateIcon,\n  ArrowDownTrayIcon,\n  FunnelIcon\n} from '@heroicons/react/24/outline';\nimport SearchableDropdown from '../components/common/SearchableDropdown';\nimport { FichaEPI, Colaborador, Empresa } from '../types';\nimport { colaboradoresAPI, empresasAPI } from '../services/api';\nimport { useFichasEPI, useAPI } from '../hooks/useAPI';\nimport StatusIndicator from '../components/StatusIndicator';\nimport { format } from 'date-fns';\nimport { registrarEventoHistorico, criarEventoFichaCriada } from '../utils/historicoHelpers';\n\nconst FichasEPIPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  // Hook para gerenciar fichas via API\n  const { fichas, loading, error, createFicha, loadFichas } = useFichasEPI();\n  \n  // Hooks para carregar dados da API\n  const { data: empresas, loading: loadingEmpresas } = useAPI<Empresa[]>(empresasAPI.getAll);\n  const { data: colaboradores } = useAPI<Colaborador[]>(colaboradoresAPI.getAll);\n  \n  // Estados da aplicação\n  const [showNovaFichaModal, setShowNovaFichaModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtroStatus, setFiltroStatus] = useState<string>('todos');\n  const [filtroEmpresa, setFiltroEmpresa] = useState<string>('todas');\n  \n  // Estados do modal Nova Ficha\n  const [selectedEmpresa, setSelectedEmpresa] = useState<string>('');\n  const [selectedColaborador, setSelectedColaborador] = useState<string>('');\n\n  const getColaborador = (colaboradorId: string): Colaborador | undefined => {\n    return colaboradores?.find(c => c.id === colaboradorId);\n  };\n\n  const getEmpresa = (empresaId: string) => {\n    return empresas?.find(e => e.id === empresaId);\n  };\n  \n  \n  \n  const getColaboradoresEmpresa = (empresaId: string): Colaborador[] => {\n    return colaboradores?.filter(c => c.empresaId === empresaId && c.status === 'ativo' && !c.temFichaAtiva) || [];\n  };\n\n\n  const formatarData = (data: Date | string | null | undefined): string => {\n    if (!data) return '';\n    const date = typeof data === 'string' ? new Date(data) : data;\n    return format(date, 'dd/MM/yyyy');\n  };\n  \n  const fichasFiltradas = fichas.filter(ficha => {\n    const statusMatch = filtroStatus === 'todos' || ficha.status === filtroStatus;\n    const empresaMatch = filtroEmpresa === 'todas' || ficha.empresaId === filtroEmpresa;\n    const colaborador = getColaborador(ficha.colaboradorId);\n    const searchMatch = !searchTerm || \n      colaborador?.nome.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      colaborador?.cargo.toLowerCase().includes(searchTerm.toLowerCase());\n    return statusMatch && empresaMatch && searchMatch;\n  });\n\n  const abrirFicha = (ficha: FichaEPI) => {\n    navigate(`/fichas/${ficha.id}`);\n  };\n\n  const contarItensAtivos = (ficha: FichaEPI): number => {\n    return ficha.itens?.filter(item => item.status === 'entregue').length || 0;\n  };\n\n\n  // Estado e lógica de paginação\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const totalPages = Math.ceil(fichasFiltradas.length / itemsPerPage);\n  const paginatedFichas = fichasFiltradas.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  // Mostrar loading se estiver carregando\n  const isLoading = loading || loadingEmpresas;\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Carregando fichas...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Mostrar erro se houver\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto mt-8 p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Erro ao carregar fichas</h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error}</p>\n                <p className=\"mt-2\">Verifique se o JSON Server está rodando na porta 3001.</p>\n              </div>\n              <div className=\"mt-4\">\n                <Button\n                  onClick={loadFichas}\n                  color=\"failure\"\n                  size=\"sm\"\n                  className=\"rounded-sm\"\n                >\n                  Tentar novamente\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900\">\n      <div className=\"mx-auto max-w-full\">\n        {/* Header */}\n        <div className=\"bg-white dark:bg-gray-900 relative shadow-md sm:rounded-lg overflow-hidden\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4\">\n            <div className=\"w-full md:w-1/2\">\n              <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Fichas de EPI</h1>\n              <p className=\"text-gray-500 dark:text-gray-400\">Gerencie fichas de equipamentos de proteção individual</p>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Button \n                onClick={() => setShowNovaFichaModal(true)} \n                color=\"primary\"\n                sizing=\"xs\"\n                className=\"rounded-sm\"\n              >\n                <UserPlusIcon className=\"w-4 h-4 mr-2\" />\n                Nova ficha\n              </Button>\n              <Dropdown\n                label=\"\"\n                dismissOnClick={false}\n                renderTrigger={() => (\n                  <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n                    <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                  </Button>\n                )}\n              >\n                <Dropdown.Item icon={ArrowDownTrayIcon}>\n                  Exportar\n                </Dropdown.Item>\n                <Dropdown.Item icon={DocumentDuplicateIcon}>\n                  Duplicar selecionados\n                </Dropdown.Item>\n              </Dropdown>\n            </div>\n          </div>\n\n          {/* Search and Filters */}\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4 border-t dark:border-gray-700\">\n            <div className=\"w-full md:w-1/3\">\n              <Label htmlFor=\"table-search\" className=\"sr-only\">Buscar</Label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\"></path>\n                  </svg>\n                </div>\n                <TextInput\n                  id=\"table-search\"\n                  placeholder=\"Buscar fichas...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  sizing=\"sm\"\n                  className=\"pl-10 rounded-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Select \n                value={filtroStatus} \n                onChange={(e) => setFiltroStatus(e.target.value)} \n                sizing=\"sm\"\n                className=\"rounded-sm\"\n              >\n                <option value=\"todos\">Todos os status</option>\n                <option value=\"ativo\">Ativo</option>\n                <option value=\"suspenso\">Suspenso</option>\n                <option value=\"arquivado\">Arquivado</option>\n              </Select>\n              <SearchableDropdown\n                options={empresas?.map(empresa => ({\n                  value: empresa.id,\n                  label: empresa.nome\n                })) || []}\n                value={filtroEmpresa}\n                onChange={setFiltroEmpresa}\n                placeholder=\"Selecionar empresa...\"\n                searchPlaceholder=\"Buscar empresas...\"\n                allOptionsLabel=\"Todas as empresas\"\n                sizing=\"sm\"\n                disabled={loadingEmpresas}\n              />\n              <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n                <FunnelIcon className=\"w-4 h-4 mr-2\" />\n                Filtros\n              </Button>\n            </div>\n          </div>\n\n          {/* Table */}\n          <div className=\"overflow-x-auto\">\n            <Table hoverable className=\"min-w-full\">\n              <Table.Head>\n                <Table.HeadCell>Colaborador</Table.HeadCell>\n                <Table.HeadCell>Empresa</Table.HeadCell>\n                <Table.HeadCell>EPIs Ativos</Table.HeadCell>\n                <Table.HeadCell>Status</Table.HeadCell>\n                <Table.HeadCell>Última Atualização</Table.HeadCell>\n                <Table.HeadCell className=\"w-20\">\n                  <span className=\"sr-only\">Ações</span>\n                </Table.HeadCell>\n              </Table.Head>\n              <Table.Body className=\"divide-y\">\n                {paginatedFichas.length > 0 ? (\n                  paginatedFichas.map((ficha) => {\n                    const colaborador = getColaborador(ficha.colaboradorId);\n                    const empresa = getEmpresa(ficha.empresaId);\n                    \n                    if (!colaborador || !empresa) return null;\n\n                    return (\n                      <Table.Row \n                        key={ficha.id} \n                        className=\"bg-white dark:border-gray-700 dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer\"\n                        onClick={() => abrirFicha(ficha)}\n                      >\n                        <Table.Cell>\n                          <div className=\"font-medium text-gray-900 dark:text-white\">{colaborador.nome}</div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">{colaborador.cargo}</div>\n                        </Table.Cell>\n                        <Table.Cell>\n                          <div className=\"text-sm text-gray-900 dark:text-white\">{empresa.nome}</div>\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400\">{empresa.cnpj}</div>\n                        </Table.Cell>\n                        <Table.Cell>\n                          <Badge color=\"primary\" size=\"sm\" className=\"w-fit\">\n                            {contarItensAtivos(ficha)}\n                          </Badge>\n                        </Table.Cell>\n                        <Table.Cell>\n                          <StatusIndicator status={ficha.status} />\n                        </Table.Cell>\n                        <Table.Cell>\n                          <div className=\"text-sm text-gray-900 dark:text-white\">\n                            {formatarData(ficha.dataEmissao)}\n                          </div>\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {ficha.itens?.length || 0} itens\n                          </div>\n                        </Table.Cell>\n                        <Table.Cell>\n                          <div className=\"flex justify-end\">\n                            <Button \n                              sizing=\"xs\" \n                              color=\"primary\"\n                              onClick={(e: React.MouseEvent) => {\n                                e.stopPropagation();\n                                abrirFicha(ficha);\n                              }}\n                              title=\"Visualizar\"\n                              className=\"rounded-sm\"\n                            >\n                              <EyeIcon className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n                        </Table.Cell>\n                      </Table.Row>\n                    );\n                  })\n                ) : (\n                  <Table.Row>\n                    <Table.Cell colSpan={7} className=\"text-center py-8\">\n                      <div className=\"flex flex-col items-center justify-center\">\n                        <p className=\"text-gray-500 dark:text-gray-400\">Nenhuma ficha encontrada</p>\n                      </div>\n                    </Table.Cell>\n                  </Table.Row>\n                )}\n              </Table.Body>\n            </Table>\n          </div>\n\n          {/* Pagination */}\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4\">\n            <span className=\"text-sm font-normal text-gray-500 dark:text-gray-400\">\n              Mostrando <span className=\"font-semibold text-gray-900 dark:text-white\">{((currentPage - 1) * itemsPerPage) + 1}-{Math.min(currentPage * itemsPerPage, fichasFiltradas.length)}</span> de <span className=\"font-semibold text-gray-900 dark:text-white\">{fichasFiltradas.length}</span>\n            </span>\n            <Pagination\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={onPageChange}\n              showIcons\n              className=\"mb-4\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Modal Nova Ficha */}\n      <Modal \n        show={showNovaFichaModal} \n        onClose={() => {\n          setShowNovaFichaModal(false);\n          // Reset form\n          setSelectedEmpresa('');\n          setSelectedColaborador('');\n        }} \n        size=\"xl\"\n      >\n        <div className=\"p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\n            Nova Ficha de EPI\n          </h3>\n          <div className=\"space-y-6\">\n            {/* Seleção de Empresa Contratada */}\n            <div>\n              <Label htmlFor=\"empresa\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Empresa Contratada <span className=\"text-red-500\">*</span>\n              </Label>\n              <SearchableDropdown\n                options={empresas?.filter(e => e.tipo === 'contratada').map(empresa => ({\n                  value: empresa.id,\n                  label: empresa.nome\n                })) || []}\n                value={selectedEmpresa}\n                onChange={(value) => {\n                  setSelectedEmpresa(value);\n                  setSelectedColaborador(''); // Reset colaborador\n                }}\n                placeholder=\"Selecione uma empresa...\"\n                searchPlaceholder=\"Buscar empresas...\"\n                allOptionsLabel=\"Selecione\"\n                sizing=\"sm\"\n                disabled={loadingEmpresas}\n              />\n            </div>\n\n            {/* Seleção de Colaborador */}\n            {selectedEmpresa && (\n              <div>\n                <Label htmlFor=\"colaborador\" className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                  Colaborador <span className=\"text-red-500\">*</span>\n                </Label>\n                <SearchableDropdown\n                  options={getColaboradoresEmpresa(selectedEmpresa).map(colaborador => ({\n                    value: colaborador.id,\n                    label: `${colaborador.nome} - CPF: ${colaborador.cpf}`,\n                    subtitle: colaborador.cargo\n                  }))}\n                  value={selectedColaborador}\n                  onChange={setSelectedColaborador}\n                  placeholder=\"Selecione um colaborador...\"\n                  searchPlaceholder=\"Buscar por nome ou CPF...\"\n                  sizing=\"sm\"\n                  showSubtitle\n                />\n              </div>\n            )}\n\n          </div>\n          \n          <div className=\"flex justify-end space-x-3 mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\n            <Button \n              onClick={() => {\n                setShowNovaFichaModal(false);\n                // Reset form\n                setSelectedEmpresa('');\n                setSelectedColaborador('');\n              }} \n              color=\"gray\" \n              sizing=\"xs\" \n              className=\"rounded-sm\"\n            >\n              Cancelar\n            </Button>\n            <Button \n              onClick={async () => {\n                if (selectedEmpresa && selectedColaborador) {\n                  try {\n                    // Criar nova ficha\n                    const hoje = new Date();\n                    const proximoAno = new Date(hoje);\n                    proximoAno.setFullYear(proximoAno.getFullYear() + 1);\n                    \n                    const novaFicha = {\n                      id: `nova_${Date.now()}`, // ID único baseado em timestamp\n                      colaboradorId: selectedColaborador,\n                      empresaId: selectedEmpresa,\n                      dataEmissao: hoje.toISOString(),\n                      dataValidade: proximoAno.toISOString(),\n                      status: 'ativo',\n                      itens: []\n                    };\n                    \n                    // Criar via API\n                    const fichaCriada = await createFicha(novaFicha);\n                    \n                    // Registrar evento no histórico\n                    const colaborador = colaboradores?.find(c => c.id === selectedColaborador);\n                    if (colaborador) {\n                      await registrarEventoHistorico(\n                        criarEventoFichaCriada(fichaCriada.id, colaborador.nome)\n                      );\n                    }\n                    \n                    console.log('Nova ficha criada:', fichaCriada);\n                    \n                    // Recarregar colaboradores para atualizar temFichaAtiva\n                    // (Isto seria feito automaticamente se tivéssemos um hook para atualizar colaboradores)\n                    \n                    // Fechar modal e resetar form\n                    setShowNovaFichaModal(false);\n                    setSelectedEmpresa('');\n                    setSelectedColaborador('');\n                    \n                    // Navegar para a nova ficha\n                    navigate(`/fichas/${fichaCriada.id}`);\n                  } catch (error) {\n                    console.error('Erro ao criar ficha:', error);\n                    alert('Erro ao criar ficha. Verifique se o JSON Server está rodando.');\n                  }\n                }\n              }}\n              color=\"primary\" \n              sizing=\"xs\" \n              className=\"rounded-sm\"\n              disabled={!selectedEmpresa || !selectedColaborador}\n            >\n              Criar Ficha\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default FichasEPIPage;"],"names":["UserPlusIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","StatusIndicator","status","variant","getStatusConfig","variantConfigs","color","text","Badge","registrarEventoHistorico","evento","novoEvento","historicoAPI","error","criarEventoFichaCriada","fichaEPIId","colaboradorNome","FichasEPIPage","navigate","useNavigate","fichas","loading","createFicha","loadFichas","useFichasEPI","empresas","loadingEmpresas","useAPI","empresasAPI","colaboradores","colaboradoresAPI","showNovaFichaModal","setShowNovaFichaModal","useState","searchTerm","setSearchTerm","filtroStatus","setFiltroStatus","filtroEmpresa","setFiltroEmpresa","selectedEmpresa","setSelectedEmpresa","selectedColaborador","setSelectedColaborador","getColaborador","colaboradorId","c","getEmpresa","empresaId","e","getColaboradoresEmpresa","formatarData","data","date","format","fichasFiltradas","ficha","statusMatch","empresaMatch","colaborador","searchMatch","abrirFicha","contarItensAtivos","_a","item","currentPage","setCurrentPage","itemsPerPage","totalPages","paginatedFichas","onPageChange","page","jsxs","jsx","Button","Dropdown","EllipsisVerticalIcon","ArrowDownTrayIcon","DocumentDuplicateIcon","Label","TextInput","Select","SearchableDropdown","empresa","FunnelIcon","Table","EyeIcon","Pagination","Modal","value","hoje","proximoAno","novaFicha","fichaCriada"],"mappings":"8cACA,SAASA,GAAa,CACpB,MAAAC,EACA,QAAAC,EACA,GAAGC,CACL,EAAGC,EAAQ,CACT,OAAoBC,gBAAoB,MAAO,OAAO,OAAO,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAKD,EACL,kBAAmBF,CACpB,EAAEC,CAAK,EAAGF,EAAqBI,EAAAA,cAAoB,QAAS,CAC3D,GAAIH,CACL,EAAED,CAAK,EAAI,KAAmBI,EAAAA,cAAoB,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,yMACP,CAAG,CAAC,CACJ,CACA,MAAMC,GAA2BC,EAAgB,WAACP,EAAY,EChBxDQ,GAAkD,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAU,UAAa,CAClF,MAAAC,EAAkB,CAACF,EAAgBC,IAAoB,CAsBrD,MAAAE,EArBU,CACd,KAAM,CACJ,MAAO,CAAE,MAAO,UAAoB,KAAM,OAAQ,EAClD,QAAS,CAAE,MAAO,OAAiB,KAAM,SAAU,EACnD,SAAU,CAAE,MAAO,UAAoB,KAAM,UAAW,EACxD,UAAW,CAAE,MAAO,UAAoB,KAAM,WAAY,CAC5D,EACA,MAAO,CACL,MAAO,CAAE,MAAO,UAAoB,KAAM,OAAQ,EAClD,SAAU,CAAE,MAAO,UAAoB,KAAM,UAAW,EACxD,UAAW,CAAE,MAAO,OAAiB,KAAM,WAAY,EACvD,QAAS,CAAE,MAAO,UAAoB,KAAM,SAAU,CACxD,EACA,QAAS,CACP,OAAQ,CAAE,MAAO,UAAoB,KAAM,QAAS,EACpD,MAAO,CAAE,MAAO,UAAoB,KAAM,OAAQ,EAClD,WAAY,CAAE,MAAO,UAAoB,KAAM,UAAW,EAC1D,MAAO,CAAE,MAAO,UAAoB,KAAM,UAAW,CAAA,CAEzD,EAE+BF,CAA+B,EAC9D,OAAKE,EAEgBA,EAAeH,CAAqC,GAClD,CAAE,MAAO,OAAiB,KAAMA,CAAO,EAHlC,CAAE,MAAO,OAAiB,KAAMA,CAAO,CAIrE,EAEM,CAAE,MAAAI,EAAO,KAAAC,CAAA,EAASH,EAAgBF,EAAQC,CAAO,EAEvD,aACGK,EAAM,CAAA,MAAAF,EAAc,KAAK,KAAK,UAAU,QACtC,SACHC,EAAA,CAEJ,EC1CaE,GAA2B,MAAOC,GAAiD,CAC1F,GAAA,CACF,MAAMC,EAA8B,CAClC,GAAGD,EACH,GAAI,QAAQ,KAAK,IAAK,CAAA,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GACjE,KAAM,IAAI,KAAK,EAAE,YAAY,CAC/B,EAEM,aAAAE,GAAa,OAAOD,CAAU,EAC7BA,QACAE,EAAO,CACN,QAAA,MAAM,yCAA0CA,CAAK,CAAA,CAGjE,EAEaC,GAAyB,CAACC,EAAoBC,KAA6B,CACtF,WAAAD,EACA,KAAM,eACN,YAAa,cACb,UAAW,0CAA0CC,CAAe,EACtE,GCMMC,GAA0B,IAAM,CACpC,MAAMC,EAAWC,EAAY,EAGvB,CAAE,OAAAC,EAAQ,QAAAC,EAAS,MAAAR,EAAO,YAAAS,EAAa,WAAAC,GAAeC,GAAa,EAGnE,CAAE,KAAMC,EAAU,QAASC,GAAoBC,EAAkBC,GAAY,MAAM,EACnF,CAAE,KAAMC,CAAA,EAAkBF,EAAsBG,GAAiB,MAAM,EAGvE,CAACC,EAAoBC,CAAqB,EAAIC,EAAAA,SAAS,EAAK,EAC5D,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAAS,EAAE,EACzC,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAiB,OAAO,EAC1D,CAACK,EAAeC,CAAgB,EAAIN,EAAAA,SAAiB,OAAO,EAG5D,CAACO,EAAiBC,CAAkB,EAAIR,EAAAA,SAAiB,EAAE,EAC3D,CAACS,EAAqBC,CAAsB,EAAIV,EAAAA,SAAiB,EAAE,EAEnEW,EAAkBC,GACfhB,GAAA,YAAAA,EAAe,KAAUiB,GAAAA,EAAE,KAAOD,GAGrCE,EAAcC,GACXvB,GAAA,YAAAA,EAAU,KAAUwB,GAAAA,EAAE,KAAOD,GAKhCE,EAA2BF,IACxBnB,GAAA,YAAAA,EAAe,OAAYiB,GAAAA,EAAE,YAAcE,GAAaF,EAAE,SAAW,SAAW,CAACA,EAAE,iBAAkB,CAAC,EAIzGK,EAAgBC,GAAmD,CACnE,GAAA,CAACA,EAAa,MAAA,GAClB,MAAMC,EAAO,OAAOD,GAAS,SAAW,IAAI,KAAKA,CAAI,EAAIA,EAClD,OAAAE,GAAOD,EAAM,YAAY,CAClC,EAEME,EAAkBnC,EAAO,OAAgBoC,GAAA,CAC7C,MAAMC,EAAcrB,IAAiB,SAAWoB,EAAM,SAAWpB,EAC3DsB,EAAepB,IAAkB,SAAWkB,EAAM,YAAclB,EAChEqB,EAAcf,EAAeY,EAAM,aAAa,EAChDI,EAAc,CAAC1B,IACnByB,GAAA,YAAAA,EAAa,KAAK,cAAc,SAASzB,EAAW,kBACpDyB,GAAA,YAAAA,EAAa,MAAM,cAAc,SAASzB,EAAW,gBACvD,OAAOuB,GAAeC,GAAgBE,CAAA,CACvC,EAEKC,EAAcL,GAAoB,CAC7BtC,EAAA,WAAWsC,EAAM,EAAE,EAAE,CAChC,EAEMM,EAAqBN,GAA4B,OAC9C,QAAAO,EAAAP,EAAM,QAAN,YAAAO,EAAa,OAAOC,GAAQA,EAAK,SAAW,YAAY,SAAU,CAC3E,EAIM,CAACC,EAAaC,CAAc,EAAIjC,EAAAA,SAAS,CAAC,EAC1CkC,EAAe,GACfC,EAAa,KAAK,KAAKb,EAAgB,OAASY,CAAY,EAC5DE,EAAkBd,EAAgB,OACrCU,EAAc,GAAKE,EACpBF,EAAcE,CAChB,EAEMG,EAAgBC,GAAiB,CACrCL,EAAeK,CAAI,EACZ,OAAA,SAAS,EAAG,CAAC,CACtB,EAIA,OADkBlD,GAAWK,QAGxB,MAAI,CAAA,UAAU,wCACb,SAAC8C,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,2EAA4E,CAAA,EAC1FA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAAoB,sBAAA,CAAA,CAAA,CAAA,CAC3E,CACF,CAAA,EAKA5D,EAEA4D,EAAAA,IAAC,MAAI,CAAA,UAAU,6BACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,iDACb,SAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,uBAAuB,QAAQ,YAAY,KAAK,eAC7D,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,0NAA0N,SAAS,UAAU,EAC1Q,CACF,CAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAuB,0BAAA,EACxED,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAC,EAAAA,IAAC,KAAG,SAAM5D,CAAA,CAAA,EACT4D,EAAA,IAAA,IAAA,CAAE,UAAU,OAAO,SAAsD,wDAAA,CAAA,CAAA,EAC5E,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACC,EAAA,CACC,QAASnD,EACT,MAAM,UACN,KAAK,KACL,UAAU,aACX,SAAA,kBAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAKFiD,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qBAEb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,6EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iGACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAAa,gBAAA,EAChFA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAsD,wDAAA,CAAA,CAAA,EACxG,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAAA,EAAA,KAACE,EAAA,CACC,QAAS,IAAM1C,EAAsB,EAAI,EACzC,MAAM,UACN,OAAO,KACP,UAAU,aAEV,SAAA,CAACyC,EAAAA,IAAAhF,GAAA,CAAa,UAAU,cAAe,CAAA,EAAE,YAAA,CAAA,CAE3C,EACA+E,EAAA,KAACG,EAAA,CACC,MAAM,GACN,eAAgB,GAChB,cAAe,IACZF,EAAAA,IAAAC,EAAA,CAAO,MAAM,QAAQ,OAAO,KAAK,UAAU,aAC1C,SAAAD,MAACG,GAAqB,CAAA,UAAU,SAAU,CAAA,EAC5C,EAGF,SAAA,CAAAH,EAAA,IAACE,EAAS,KAAT,CAAc,KAAME,GAAmB,SAExC,WAAA,QACCF,EAAS,KAAT,CAAc,KAAMG,GAAuB,SAE5C,uBAAA,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAN,EAAAA,KAAC,MAAI,CAAA,UAAU,+HACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,MAACM,EAAM,CAAA,QAAQ,eAAe,UAAU,UAAU,SAAM,SAAA,EACxDP,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,uEACb,SAAAA,MAAC,OAAI,UAAU,2CAA2C,KAAK,eAAe,QAAQ,YACpF,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,mHAAmH,SAAS,UAAU,EACnK,CACF,CAAA,EACAA,EAAA,IAACO,EAAA,CACC,GAAG,eACH,YAAY,mBACZ,MAAO9C,EACP,SAAWe,GAAMd,EAAcc,EAAE,OAAO,KAAK,EAC7C,OAAO,KACP,UAAU,kBAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EACAuB,EAAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAAA,EAAA,KAACS,EAAA,CACC,MAAO7C,EACP,SAAWa,GAAMZ,EAAgBY,EAAE,OAAO,KAAK,EAC/C,OAAO,KACP,UAAU,aAEV,SAAA,CAACwB,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAe,kBAAA,EACpCA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAS,WAAA,CAAA,CAAA,CAAA,CACrC,EACAA,EAAA,IAACS,EAAA,CACC,SAASzD,GAAA,YAAAA,EAAU,IAAgB0D,IAAA,CACjC,MAAOA,EAAQ,GACf,MAAOA,EAAQ,IACjB,MAAO,CAAC,EACR,MAAO7C,EACP,SAAUC,EACV,YAAY,wBACZ,kBAAkB,qBAClB,gBAAgB,oBAChB,OAAO,KACP,SAAUb,CAAA,CACZ,SACCgD,EAAO,CAAA,MAAM,QAAQ,OAAO,KAAK,UAAU,aAC1C,SAAA,CAACD,EAAAA,IAAAW,GAAA,CAAW,UAAU,cAAe,CAAA,EAAE,SAAA,CAEzC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAX,EAAAA,IAAC,OAAI,UAAU,kBACb,gBAACY,EAAM,CAAA,UAAS,GAAC,UAAU,aACzB,SAAA,CAACb,EAAAA,KAAAa,EAAM,KAAN,CACC,SAAA,CAACZ,EAAAA,IAAAY,EAAM,SAAN,CAAe,SAAW,aAAA,CAAA,EAC1BZ,EAAAA,IAAAY,EAAM,SAAN,CAAe,SAAO,SAAA,CAAA,EACtBZ,EAAAA,IAAAY,EAAM,SAAN,CAAe,SAAW,aAAA,CAAA,EAC1BZ,EAAAA,IAAAY,EAAM,SAAN,CAAe,SAAM,QAAA,CAAA,EACrBZ,EAAAA,IAAAY,EAAM,SAAN,CAAe,SAAkB,oBAAA,CAAA,EAClCZ,EAAAA,IAACY,EAAM,SAAN,CAAe,UAAU,OACxB,SAAAZ,EAAA,IAAC,OAAK,CAAA,UAAU,UAAU,SAAA,OAAK,CAAA,CACjC,CAAA,CAAA,EACF,EACCA,EAAAA,IAAAY,EAAM,KAAN,CAAW,UAAU,WACnB,SAAgBhB,EAAA,OAAS,EACxBA,EAAgB,IAAKb,GAAU,OACvB,MAAAG,EAAcf,EAAeY,EAAM,aAAa,EAChD2B,EAAUpC,EAAWS,EAAM,SAAS,EAE1C,MAAI,CAACG,GAAe,CAACwB,EAAgB,KAGnCX,EAAA,KAACa,EAAM,IAAN,CAEC,UAAU,wGACV,QAAS,IAAMxB,EAAWL,CAAK,EAE/B,SAAA,CAACgB,EAAAA,KAAAa,EAAM,KAAN,CACC,SAAA,CAAAZ,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,SAAAd,EAAY,KAAK,EAC5Ec,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA4C,WAAY,KAAM,CAAA,CAAA,EAC/E,EACAD,EAAAA,KAACa,EAAM,KAAN,CACC,SAAA,CAAAZ,EAAA,IAAC,MAAI,CAAA,UAAU,wCAAyC,SAAAU,EAAQ,KAAK,EACpEV,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA4C,WAAQ,IAAK,CAAA,CAAA,EAC1E,EACCA,EAAA,IAAAY,EAAM,KAAN,CACC,eAAC7E,EAAM,CAAA,MAAM,UAAU,KAAK,KAAK,UAAU,QACxC,SAAkBsD,EAAAN,CAAK,CAC1B,CAAA,EACF,EACAiB,EAAAA,IAACY,EAAM,KAAN,CACC,eAACpF,GAAgB,CAAA,OAAQuD,EAAM,MAAA,CAAQ,CACzC,CAAA,EACAgB,EAAAA,KAACa,EAAM,KAAN,CACC,SAAA,CAAAZ,MAAC,OAAI,UAAU,wCACZ,SAAatB,EAAAK,EAAM,WAAW,EACjC,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACZ,SAAA,GAAAT,EAAAP,EAAM,QAAN,YAAAO,EAAa,SAAU,EAAE,QAAA,CAC5B,CAAA,CAAA,EACF,QACCsB,EAAM,KAAN,CACC,SAACZ,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAA,IAACC,EAAA,CACC,OAAO,KACP,MAAM,UACN,QAAUzB,GAAwB,CAChCA,EAAE,gBAAgB,EAClBY,EAAWL,CAAK,CAClB,EACA,MAAM,aACN,UAAU,aAEV,SAAAiB,EAAAA,IAACa,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,GAEjC,CACF,CAAA,CAAA,CAAA,EA3CK9B,EAAM,EA4Cb,CAEH,CAAA,EAEDiB,EAAAA,IAACY,EAAM,IAAN,CACC,SAAAZ,EAAA,IAACY,EAAM,KAAN,CAAW,QAAS,EAAG,UAAU,mBAChC,SAACZ,EAAAA,IAAA,MAAA,CAAI,UAAU,4CACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAwB,0BAAA,CAAA,CAC1E,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mGACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,uDAAuD,SAAA,CAAA,aAC3DA,EAAAA,KAAC,OAAK,CAAA,UAAU,8CAAiD,SAAA,EAAAP,EAAc,GAAKE,EAAgB,EAAE,IAAE,KAAK,IAAIF,EAAcE,EAAcZ,EAAgB,MAAM,CAAA,EAAE,EAAO,OAAKkB,EAAA,IAAA,OAAA,CAAK,UAAU,8CAA+C,WAAgB,MAAO,CAAA,CAAA,EAClR,EACAA,EAAA,IAACc,EAAA,CACC,YAAAtB,EACA,WAAAG,EACA,aAAAE,EACA,UAAS,GACT,UAAU,MAAA,CAAA,CACZ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAG,EAAA,IAACe,EAAA,CACC,KAAMzD,EACN,QAAS,IAAM,CACbC,EAAsB,EAAK,EAE3BS,EAAmB,EAAE,EACrBE,EAAuB,EAAE,CAC3B,EACA,KAAK,KAEL,SAAA6B,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,oBAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAA,EAAA,KAACO,EAAM,CAAA,QAAQ,UAAU,UAAU,8CAA8C,SAAA,CAAA,sBAC3DN,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EACrD,EACAA,EAAA,IAACS,EAAA,CACC,SAASzD,GAAA,YAAAA,EAAU,OAAOwB,GAAKA,EAAE,OAAS,cAAc,IAAgBkC,IAAA,CACtE,MAAOA,EAAQ,GACf,MAAOA,EAAQ,IACjB,MAAO,CAAC,EACR,MAAO3C,EACP,SAAWiD,GAAU,CACnBhD,EAAmBgD,CAAK,EACxB9C,EAAuB,EAAE,CAC3B,EACA,YAAY,2BACZ,kBAAkB,qBAClB,gBAAgB,YAChB,OAAO,KACP,SAAUjB,CAAA,CAAA,CACZ,EACF,EAGCc,UACE,MACC,CAAA,SAAA,CAAAgC,EAAA,KAACO,EAAM,CAAA,QAAQ,cAAc,UAAU,8CAA8C,SAAA,CAAA,eACtEN,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EAC9C,EACAA,EAAA,IAACS,EAAA,CACC,QAAShC,EAAwBV,CAAe,EAAE,IAAoBmB,IAAA,CACpE,MAAOA,EAAY,GACnB,MAAO,GAAGA,EAAY,IAAI,WAAWA,EAAY,GAAG,GACpD,SAAUA,EAAY,KAAA,EACtB,EACF,MAAOjB,EACP,SAAUC,EACV,YAAY,8BACZ,kBAAkB,4BAClB,OAAO,KACP,aAAY,EAAA,CAAA,CACd,CACF,CAAA,CAAA,EAGJ,EAEA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,qFACb,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,QAAS,IAAM,CACb1C,EAAsB,EAAK,EAE3BS,EAAmB,EAAE,EACrBE,EAAuB,EAAE,CAC3B,EACA,MAAM,OACN,OAAO,KACP,UAAU,aACX,SAAA,UAAA,CAED,EACA8B,EAAA,IAACC,EAAA,CACC,QAAS,SAAY,CACnB,GAAIlC,GAAmBE,EACjB,GAAA,CAEI,MAAAgD,MAAW,KACXC,EAAa,IAAI,KAAKD,CAAI,EAChCC,EAAW,YAAYA,EAAW,YAAY,EAAI,CAAC,EAEnD,MAAMC,EAAY,CAChB,GAAI,QAAQ,KAAK,IAAK,CAAA,GACtB,cAAelD,EACf,UAAWF,EACX,YAAakD,EAAK,YAAY,EAC9B,aAAcC,EAAW,YAAY,EACrC,OAAQ,QACR,MAAO,CAAA,CACT,EAGME,EAAc,MAAMvE,EAAYsE,CAAS,EAGzCjC,EAAc9B,GAAA,YAAAA,EAAe,KAAUiB,GAAAA,EAAE,KAAOJ,GAClDiB,GACI,MAAAlD,GACJK,GAAuB+E,EAAY,GAAIlC,EAAY,IAAI,CACzD,EAGM,QAAA,IAAI,qBAAsBkC,CAAW,EAM7C7D,EAAsB,EAAK,EAC3BS,EAAmB,EAAE,EACrBE,EAAuB,EAAE,EAGhBzB,EAAA,WAAW2E,EAAY,EAAE,EAAE,QAC7BhF,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3C,MAAM,+DAA+D,CAAA,CAG3E,EACA,MAAM,UACN,OAAO,KACP,UAAU,aACV,SAAU,CAAC2B,GAAmB,CAACE,EAChC,SAAA,aAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAEF,CAEJ","x_google_ignoreList":[0]}