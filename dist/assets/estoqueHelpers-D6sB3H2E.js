import{t as f,e as I,h as y}from"./format-G53zHD2b.js";import{i as S,a as T}from"./dateHelpers-C52cMW5X.js";import"./index-DOaqLF5S.js";const A=a=>`${a}_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,_=(a,t)=>({...a,id:A(t),data:new Date().toISOString()}),b=(a,t)=>async d=>{try{const r=_(d,t);return await a.create(r),r}catch(r){throw console.error(`Erro ao registrar evento ${t}:`,r),r}},V={cadastro:(a,t,d,r="Sistema EPI")=>({itemEstoqueId:a,tipo:"cadastro",responsavel:r,descricao:`Item de estoque criado - ${t}`,quantidadeAnterior:0,quantidadeAtual:d,quantidade:d,detalhes:{motivo:"Cadastro inicial do item no sistema"}}),entrada:(a,t,d,r,E,c)=>({itemEstoqueId:a,tipo:"entrada",responsavel:E,descricao:`Entrada de estoque - ${t}`,quantidadeAnterior:d,quantidadeAtual:d+r,quantidade:r,detalhes:c}),saida:(a,t,d,r,E,c)=>({itemEstoqueId:a,tipo:c.entregaId?"entrega":"saida",responsavel:E,descricao:c.entregaId?`Saída por entrega - ${t}`:`Saída de estoque - ${t}`,quantidadeAnterior:d,quantidadeAtual:d-r,quantidade:r,detalhes:c})},$=a=>a.quantidade===0?"esgotado":S(a.dataValidade)?"vencido":a.quantidade<=a.quantidadeMinima?"baixo_estoque":"disponivel",C=(a,t=30)=>T(a.dataValidade,t),P=b(y,"hist_est"),{cadastro:k,entrada:h,saida:w}=V,R=async(a,t,d,r,E,c)=>{const q=[],i=[];try{const p=await f.getAll(),n=e=>p.find(s=>s.id===e);for(const e of d)try{const s=n(e.tipoEPIId);if(!s){i.push(`Tipo EPI ${e.tipoEPIId} não encontrado`);continue}const o=(await I.getByTipoEPI(e.tipoEPIId)).find(u=>$(u)==="disponivel");if(!o){i.push(`Não há estoque disponível de ${s.nomeEquipamento}`);continue}o.quantidade<e.quantidade&&console.warn(`⚠️ Estoque insuficiente de ${s.nomeEquipamento}. Disponível: ${o.quantidade}, Solicitado: ${e.quantidade}. Permitindo estoque negativo.`),await I.saida(o.id,{quantidade:e.quantidade,responsavelId:c,motivo:"Entrega para colaborador",entregaId:a,observacoes:`Entrega para ${E} (${r})`}),await P(w(o.id,s.nomeEquipamento,o.quantidade,e.quantidade,c,{motivo:"Entrega para colaborador",entregaId:a,fichaEPIId:t,colaboradorNome:E})),q.push({itemEstoqueId:o.id,tipoEPI:s.nomeEquipamento,quantidadeDescontada:e.quantidade,lote:o.lote})}catch(s){console.error(`Erro ao processar item ${e.tipoEPIId}:`,s),i.push(`Erro ao processar ${e.tipoEPIId}: ${s instanceof Error?s.message:"Erro desconhecido"}`)}return{sucesso:i.length===0,itensProcessados:q,erros:i}}catch(p){return console.error("Erro ao processar entrega no estoque:",p),{sucesso:!1,itensProcessados:[],erros:[`Erro geral: ${p instanceof Error?p.message:"Erro desconhecido"}`]}}},z=async(a,t,d,r,E,c)=>{const q=[],i=[];try{const p=await f.getAll(),n=o=>p.find(u=>u.id===o),e=new Map,s=new Map;t.forEach(o=>{e.set(o.tipoEPIId,(e.get(o.tipoEPIId)||0)+o.quantidade)}),d.forEach(o=>{s.set(o.tipoEPIId,(s.get(o.tipoEPIId)||0)+o.quantidade)});const m=new Set([...e.keys(),...s.keys()]);for(const o of m)try{const u=n(o);if(!u){i.push(`Tipo EPI ${o} não encontrado`);continue}const D=e.get(o)||0,l=(s.get(o)||0)-D;if(l===0)continue;const g=(await I.getByTipoEPI(o)).find(v=>$(v)==="disponivel"||v.quantidade>=0);if(!g){i.push(`Item de estoque não encontrado para ${u.nomeEquipamento}`);continue}if(l>0)await I.saida(g.id,{quantidade:l,responsavelId:c,motivo:"Edição de entrega - quantidade aumentada",entregaId:a,observacoes:`Edição da entrega para ${E} - acréscimo de ${l} unidade(s)`}),await P(w(g.id,u.nomeEquipamento,g.quantidade,l,c,{motivo:"Edição de entrega - quantidade aumentada",entregaId:a,colaboradorNome:E})),q.push({tipoEPIId:o,nomeEquipamento:u.nomeEquipamento,tipo:"saida",quantidade:l,motivo:"Edição de entrega - quantidade aumentada"});else{const v=Math.abs(l);await I.entrada(g.id,{quantidade:v,responsavelId:c,motivo:"Edição de entrega - quantidade diminuída",observacoes:`Edição da entrega para ${E} - retorno de ${v} unidade(s)`}),await P(h(g.id,u.nomeEquipamento,g.quantidade,v,c,{motivo:"Edição de entrega - quantidade diminuída"})),q.push({tipoEPIId:o,nomeEquipamento:u.nomeEquipamento,tipo:"entrada",quantidade:v,motivo:"Edição de entrega - quantidade diminuída"})}}catch(u){console.error(`Erro ao processar ajuste para ${o}:`,u),i.push(`Erro ao ajustar ${o}: ${u instanceof Error?u.message:"Erro desconhecido"}`)}return{sucesso:i.length===0,ajustes:q,erros:i}}catch(p){return console.error("Erro ao processar edição de entrega no estoque:",p),{sucesso:!1,ajustes:[],erros:[`Erro geral: ${p instanceof Error?p.message:"Erro desconhecido"}`]}}},L=async(a,t,d,r,E)=>{const c=[],q=[];try{const i=await f.getAll(),p=n=>i.find(e=>e.id===n);for(const n of t)try{const e=p(n.tipoEPIId);if(!e){q.push(`Tipo EPI ${n.tipoEPIId} não encontrado`);continue}let m=(await I.getByTipoEPI(n.tipoEPIId)).find(o=>o.empresaId==="almoxarifado");m||(m=await I.create({id:`estoque_dev_${Date.now()}_${n.tipoEPIId}`,tipoEPIId:n.tipoEPIId,empresaId:"almoxarifado",quantidade:0,quantidadeMinima:10,localizacao:"Almoxarifado Central",lote:`LOTE-DEV-${Date.now()}`,dataValidade:new Date(Date.now()+e.vidaUtilDias*24*60*60*1e3).toISOString().split("T")[0]})),await I.entrada(m.id,{quantidade:n.quantidade,responsavelId:E,motivo:n.motivo||"Devolução de colaborador",observacoes:`Devolução de ${r} (${d})`}),await P(h(m.id,e.nomeEquipamento,m.quantidade,n.quantidade,E,{motivo:n.motivo||"Devolução de colaborador"})),c.push({itemEstoqueId:m.id,tipoEPI:e.nomeEquipamento,quantidadeDevolvida:n.quantidade,lote:m.lote})}catch(e){console.error(`Erro ao processar devolução ${n.tipoEPIId}:`,e),q.push(`Erro ao processar devolução ${n.tipoEPIId}: ${e instanceof Error?e.message:"Erro desconhecido"}`)}return{sucesso:q.length===0,itensProcessados:c,erros:q}}catch(i){return console.error("Erro ao processar devolução no estoque:",i),{sucesso:!1,itensProcessados:[],erros:[`Erro geral: ${i instanceof Error?i.message:"Erro desconhecido"}`]}}};export{$ as calcularStatusEstoque,k as criarEventoCadastroItem,h as criarEventoEntrada,w as criarEventoSaida,C as isProximoVencimento,L as processarDevolucaoEstoque,z as processarEdicaoEntregaEstoque,R as processarEntregaEstoque,P as registrarEventoEstoque};
//# sourceMappingURL=estoqueHelpers-D6sB3H2E.js.map
