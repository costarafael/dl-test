{"version":3,"file":"NewMovementModal-DcOUhh5s.js","sources":["../../src/components/inventory/NewMovementModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button, Label, TextInput, Select, Textarea, Table, Badge } from 'flowbite-react';\nimport { PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport { TipoEPI, ItemEstoque, NovaMovimentacaoForm } from '../../types';\nimport { createFieldLookup } from '../../utils/entityHelpers';\n\ninterface NewMovementModalProps {\n  show: boolean;\n  onClose: () => void;\n  onSave: (movement: NovaMovimentacaoForm) => Promise<void>;\n  tiposEPI: TipoEPI[];\n  estoque: ItemEstoque[];\n  isLoading?: boolean;\n}\n\nconst motivosEntrada = [\n  'Compra',\n  'Doação',\n  'Transferência',\n  'Devolução',\n  'Ajuste de inventário',\n  'Outros'\n];\n\nconst motivosSaida = [\n  'Entrega ao colaborador',\n  'Transferência',\n  'Descarte por vencimento',\n  'Descarte por avaria',\n  'Perda',\n  'Outros'\n];\n\nconst NewMovementModal: React.FC<NewMovementModalProps> = ({\n  show,\n  onClose,\n  onSave,\n  tiposEPI,\n  estoque,\n  isLoading = false\n}) => {\n  const [formData, setFormData] = useState<NovaMovimentacaoForm>({\n    tipo: 'entrada',\n    responsavel: '',\n    motivo: '',\n    observacoes: '',\n    itens: [{ tipoEPIId: '', quantidade: 1, custoUnitario: 0, lote: '', observacoes: '' }]\n  });\n\n  const getEstoque = createFieldLookup(estoque || [], 'tipoEPIId');\n\n  // Reset form when modal opens/closes\n  useEffect(() => {\n    if (show) {\n      setFormData({\n        tipo: 'entrada',\n        responsavel: '',\n        motivo: '',\n        observacoes: '',\n        itens: [{ tipoEPIId: '', quantidade: 1, custoUnitario: 0, lote: '', observacoes: '' }]\n      });\n    }\n  }, [show]);\n\n  const getMotivos = () => {\n    return formData.tipo === 'entrada' ? motivosEntrada : motivosSaida;\n  };\n\n  const handleFormChange = (field: keyof NovaMovimentacaoForm, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleItemChange = (index: number, field: string, value: string | number) => {\n    setFormData(prev => ({\n      ...prev,\n      itens: prev.itens.map((item, i) => \n        i === index \n          ? { ...item, [field]: field === 'quantidade' || field === 'custoUnitario' ? Number(value) : value }\n          : item\n      )\n    }));\n  };\n\n  const addItem = () => {\n    setFormData(prev => ({\n      ...prev,\n      itens: [...prev.itens, { tipoEPIId: '', quantidade: 1, custoUnitario: 0, lote: '', observacoes: '' }]\n    }));\n  };\n\n  const removeItem = (index: number) => {\n    if (formData.itens.length > 1) {\n      setFormData(prev => ({\n        ...prev,\n        itens: prev.itens.filter((_, i) => i !== index)\n      }));\n    }\n  };\n\n  const getCurrentStock = (tipoEPIId: string): number => {\n    const itemEstoque = getEstoque(tipoEPIId);\n    return itemEstoque?.quantidade || 0;\n  };\n\n  const isFormValid = () => {\n    return formData.responsavel.trim() !== '' &&\n           formData.motivo !== '' &&\n           formData.itens.every(item => \n             item.tipoEPIId !== '' && \n             item.quantidade > 0 &&\n             (formData.tipo === 'entrada' || item.quantidade <= getCurrentStock(item.tipoEPIId))\n           );\n  };\n\n  const handleSubmit = async () => {\n    if (!isFormValid()) return;\n    \n    try {\n      await onSave(formData);\n      onClose();\n    } catch (error) {\n      console.error('Erro ao criar movimentação:', error);\n      alert('Erro ao criar movimentação. Tente novamente.');\n    }\n  };\n\n  const getStockValidationMessage = (item: typeof formData.itens[0]) => {\n    if (formData.tipo === 'saida' && item.tipoEPIId) {\n      const currentStock = getCurrentStock(item.tipoEPIId);\n      if (item.quantidade > currentStock) {\n        return `Quantidade excede estoque disponível (${currentStock})`;\n      }\n    }\n    return null;\n  };\n\n  return (\n    <Modal show={show} onClose={onClose} size=\"6xl\">\n      <Modal.Header>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n          Nova Movimentação - {formData.tipo === 'entrada' ? 'Entrada' : 'Saída'}\n        </h3>\n      </Modal.Header>\n\n      <Modal.Body className=\"overflow-y-auto max-h-[70vh]\">\n        <div className=\"space-y-6\">\n          {/* Tipo de Movimentação */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Tipo de Movimentação <span className=\"text-red-500\">*</span>\n              </Label>\n              <Select\n                value={formData.tipo}\n                onChange={(e) => handleFormChange('tipo', e.target.value)}\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n                disabled={isLoading}\n              >\n                <option value=\"entrada\">Entrada</option>\n                <option value=\"saida\">Saída</option>\n              </Select>\n            </div>\n            <div>\n              <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Responsável <span className=\"text-red-500\">*</span>\n              </Label>\n              <TextInput\n                value={formData.responsavel}\n                onChange={(e) => handleFormChange('responsavel', e.target.value)}\n                placeholder=\"Nome do responsável\"\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n                disabled={isLoading}\n              />\n            </div>\n          </div>\n\n          {/* Motivo e campos específicos */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                Motivo <span className=\"text-red-500\">*</span>\n              </Label>\n              <Select\n                value={formData.motivo}\n                onChange={(e) => handleFormChange('motivo', e.target.value)}\n                sizing=\"sm\"\n                className=\"rounded-sm\"\n                disabled={isLoading}\n              >\n                <option value=\"\">Selecione o motivo</option>\n                {getMotivos().map(motivo => (\n                  <option key={motivo} value={motivo}>{motivo}</option>\n                ))}\n              </Select>\n            </div>\n            \n            {formData.tipo === 'entrada' ? (\n              <>\n                <div>\n                  <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                    Fornecedor\n                  </Label>\n                  <TextInput\n                    value={formData.fornecedor || ''}\n                    onChange={(e) => handleFormChange('fornecedor', e.target.value)}\n                    placeholder=\"Nome do fornecedor\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                    disabled={isLoading}\n                  />\n                </div>\n                <div>\n                  <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                    Nota Fiscal\n                  </Label>\n                  <TextInput\n                    value={formData.notaFiscal || ''}\n                    onChange={(e) => handleFormChange('notaFiscal', e.target.value)}\n                    placeholder=\"Número da NF\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                    disabled={isLoading}\n                  />\n                </div>\n              </>\n            ) : (\n              <>\n                <div>\n                  <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                    Destinatário\n                  </Label>\n                  <TextInput\n                    value={formData.destinatario || ''}\n                    onChange={(e) => handleFormChange('destinatario', e.target.value)}\n                    placeholder=\"Nome do destinatário\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                    disabled={isLoading}\n                  />\n                </div>\n                <div>\n                  <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n                    Solicitante\n                  </Label>\n                  <TextInput\n                    value={formData.solicitante || ''}\n                    onChange={(e) => handleFormChange('solicitante', e.target.value)}\n                    placeholder=\"Nome do solicitante\"\n                    sizing=\"sm\"\n                    className=\"rounded-sm\"\n                    disabled={isLoading}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Lista de Itens */}\n          <div>\n            <div className=\"flex justify-between items-center mb-4\">\n              <Label className=\"text-gray-700 dark:text-gray-300\">\n                Itens da Movimentação <span className=\"text-red-500\">*</span>\n              </Label>\n              <Button\n                onClick={addItem}\n                color=\"primary\"\n                size=\"xs\"\n                className=\"rounded-sm\"\n                disabled={isLoading}\n              >\n                <PlusIcon className=\"h-4 w-4 mr-1\" />\n                Adicionar Item\n              </Button>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <Table.Head>\n                  <Table.HeadCell>Equipamento</Table.HeadCell>\n                  <Table.HeadCell>Quantidade</Table.HeadCell>\n                  <Table.HeadCell>Estoque Atual</Table.HeadCell>\n                  {formData.tipo === 'entrada' && (\n                    <>\n                      <Table.HeadCell>Custo Unit.</Table.HeadCell>\n                      <Table.HeadCell>Lote</Table.HeadCell>\n                    </>\n                  )}\n                  <Table.HeadCell>Observações</Table.HeadCell>\n                  <Table.HeadCell>Ações</Table.HeadCell>\n                </Table.Head>\n                <Table.Body>\n                  {formData.itens.map((item, index) => {\n                    const currentStock = getCurrentStock(item.tipoEPIId);\n                    const validationMessage = getStockValidationMessage(item);\n\n                    return (\n                      <Table.Row key={index}>\n                        <Table.Cell className=\"min-w-[200px]\">\n                          <Select\n                            value={item.tipoEPIId}\n                            onChange={(e) => handleItemChange(index, 'tipoEPIId', e.target.value)}\n                            sizing=\"sm\"\n                            className=\"rounded-sm\"\n                            disabled={isLoading}\n                          >\n                            <option value=\"\">Selecione o equipamento</option>\n                            {(tiposEPI || []).map(tipo => (\n                              <option key={tipo.id} value={tipo.id}>\n                                {tipo.nomeEquipamento} - CA {tipo.numeroCA}\n                              </option>\n                            ))}\n                          </Select>\n                        </Table.Cell>\n                        \n                        <Table.Cell>\n                          <div className=\"space-y-1\">\n                            <TextInput\n                              type=\"number\"\n                              min=\"1\"\n                              max={formData.tipo === 'saida' ? currentStock : undefined}\n                              value={item.quantidade}\n                              onChange={(e) => handleItemChange(index, 'quantidade', e.target.value)}\n                              sizing=\"sm\"\n                              className=\"rounded-sm w-20\"\n                              disabled={isLoading}\n                            />\n                            {validationMessage && (\n                              <p className=\"text-xs text-red-500\">{validationMessage}</p>\n                            )}\n                          </div>\n                        </Table.Cell>\n                        \n                        <Table.Cell>\n                          {item.tipoEPIId && (\n                            <Badge\n                              color={currentStock > 0 ? 'green' : 'red'}\n                              className=\"w-fit\"\n                            >\n                              {currentStock} un.\n                            </Badge>\n                          )}\n                        </Table.Cell>\n\n                        {formData.tipo === 'entrada' && (\n                          <>\n                            <Table.Cell>\n                              <TextInput\n                                type=\"number\"\n                                step=\"0.01\"\n                                min=\"0\"\n                                value={item.custoUnitario || ''}\n                                onChange={(e) => handleItemChange(index, 'custoUnitario', e.target.value)}\n                                placeholder=\"0,00\"\n                                sizing=\"sm\"\n                                className=\"rounded-sm w-24\"\n                                disabled={isLoading}\n                              />\n                            </Table.Cell>\n                            <Table.Cell>\n                              <TextInput\n                                value={item.lote || ''}\n                                onChange={(e) => handleItemChange(index, 'lote', e.target.value)}\n                                placeholder=\"Lote/Série\"\n                                sizing=\"sm\"\n                                className=\"rounded-sm w-32\"\n                                disabled={isLoading}\n                              />\n                            </Table.Cell>\n                          </>\n                        )}\n                        \n                        <Table.Cell className=\"min-w-[150px]\">\n                          <TextInput\n                            value={item.observacoes || ''}\n                            onChange={(e) => handleItemChange(index, 'observacoes', e.target.value)}\n                            placeholder=\"Observações...\"\n                            sizing=\"sm\"\n                            className=\"rounded-sm\"\n                            disabled={isLoading}\n                          />\n                        </Table.Cell>\n                        \n                        <Table.Cell>\n                          {formData.itens.length > 1 && (\n                            <Button\n                              onClick={() => removeItem(index)}\n                              color=\"failure\"\n                              size=\"xs\"\n                              className=\"rounded-sm\"\n                              disabled={isLoading}\n                            >\n                              <TrashIcon className=\"h-4 w-4\" />\n                            </Button>\n                          )}\n                        </Table.Cell>\n                      </Table.Row>\n                    );\n                  })}\n                </Table.Body>\n              </Table>\n            </div>\n          </div>\n\n          {/* Observações Gerais */}\n          <div>\n            <Label className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n              Observações Gerais\n            </Label>\n            <Textarea\n              value={formData.observacoes || ''}\n              onChange={(e) => handleFormChange('observacoes', e.target.value)}\n              placeholder=\"Observações sobre a movimentação...\"\n              rows={3}\n              className=\"rounded-sm\"\n              disabled={isLoading}\n            />\n          </div>\n        </div>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <div className=\"flex justify-end space-x-3 w-full\">\n          <Button\n            onClick={onClose}\n            color=\"gray\"\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            disabled={isLoading}\n          >\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            color=\"primary\"\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            disabled={!isFormValid() || isLoading}\n          >\n            {isLoading ? 'Processando...' : `Registrar ${formData.tipo === 'entrada' ? 'Entrada' : 'Saída'}`}\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewMovementModal;"],"names":["motivosEntrada","motivosSaida","NewMovementModal","show","onClose","onSave","tiposEPI","estoque","isLoading","formData","setFormData","useState","getEstoque","createFieldLookup","useEffect","getMotivos","handleFormChange","field","value","prev","handleItemChange","index","item","i","addItem","removeItem","_","getCurrentStock","tipoEPIId","itemEstoque","isFormValid","handleSubmit","error","getStockValidationMessage","currentStock","jsxs","Modal","jsx","Label","Select","e","TextInput","motivo","Fragment","Button","PlusIcon","Table","validationMessage","tipo","Badge","TrashIcon","Textarea"],"mappings":"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"}