{"version":3,"file":"CatalogoEPIs-DpzHMslv.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ShoppingCartIcon.js","../../src/constants/epiConstants.ts","../../src/components/epi/EPIForm.tsx","../../src/components/epi/EPIFormModal.tsx","../../src/components/epi/EPIDetailsModal.tsx","../../src/components/epi/EPITable.tsx","../../src/utils/inventorySync.ts","../../src/hooks/useEPICatalog.ts","../../src/pages/CatalogoEPIs.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ShoppingCartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShoppingCartIcon);\nexport default ForwardRef;","// Constantes para o catálogo de EPIs\n\nexport const EPI_CATEGORIES = [\n  'Proteção da Cabeça',\n  'Proteção dos Olhos e Face',\n  'Proteção Auditiva',\n  'Proteção Respiratória',\n  'Proteção das Mãos',\n  'Proteção dos Pés',\n  'Proteção do Corpo',\n  'Proteção contra Quedas',\n  'Outros'\n];\n\nexport const DEFAULT_VIDA_UTIL_DIAS = 365;\n\nexport const ITEMS_PER_PAGE = 10;\n\n// Opções de filtro para status (caso seja implementado no futuro)\nexport const EPI_STATUS_OPTIONS = [\n  { value: 'todos', label: 'Todos os status' },\n  { value: 'ativo', label: 'Ativo' },\n  { value: 'inativo', label: 'Inativo' }\n];\n\n// Campos de busca padrão\nexport const EPI_SEARCH_FIELDS = ['nomeEquipamento', 'numeroCA', 'fabricante'] as const;\n\n// Campos obrigatórios para validação\nexport const REQUIRED_FIELDS = [\n  'nomeEquipamento',\n  'numeroCA', \n  'fabricante',\n  'categoria'\n] as const;\n\n// Mensagens de validação\nexport const VALIDATION_MESSAGES = {\n  required: 'Este campo é obrigatório',\n  numericMin: 'Deve ser um número maior que zero',\n  duplicateCA: 'Este número CA já está em uso',\n  invalidFormat: 'Formato inválido'\n} as const;","import React from 'react';\nimport {\n  Label,\n  TextInput,\n  Select,\n  Textarea,\n  FileInput\n} from 'flowbite-react';\nimport { TipoEPI } from '../../types';\nimport { EPI_CATEGORIES, DEFAULT_VIDA_UTIL_DIAS } from '../../constants/epiConstants';\n\ninterface EPIFormProps {\n  formData: Partial<TipoEPI>;\n  onChange: (field: keyof TipoEPI, value: string | number) => void;\n  idPrefix?: string;\n  disabled?: boolean;\n}\n\nconst EPIForm: React.FC<EPIFormProps> = ({\n  formData,\n  onChange,\n  idPrefix = '',\n  disabled = false\n}) => {\n  const getFieldId = (field: string) => `${idPrefix}${field}`;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Nome do Equipamento */}\n      <div>\n        <Label htmlFor={getFieldId('nomeEquipamento')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Nome do Equipamento <span className=\"text-red-500\">*</span>\n        </Label>\n        <TextInput\n          id={getFieldId('nomeEquipamento')}\n          value={formData.nomeEquipamento || ''}\n          onChange={(e) => onChange('nomeEquipamento', e.target.value)}\n          placeholder=\"Ex: Capacete de Segurança Classe A\"\n          sizing=\"sm\"\n          className=\"rounded-sm\"\n          required\n          disabled={disabled}\n        />\n      </div>\n\n      {/* CA e Fabricante */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor={getFieldId('numeroCA')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n            Número CA <span className=\"text-red-500\">*</span>\n          </Label>\n          <TextInput\n            id={getFieldId('numeroCA')}\n            value={formData.numeroCA || ''}\n            onChange={(e) => onChange('numeroCA', e.target.value)}\n            placeholder=\"Ex: 12345\"\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            required\n            disabled={disabled}\n          />\n        </div>\n        <div>\n          <Label htmlFor={getFieldId('fabricante')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n            Fabricante <span className=\"text-red-500\">*</span>\n          </Label>\n          <TextInput\n            id={getFieldId('fabricante')}\n            value={formData.fabricante || ''}\n            onChange={(e) => onChange('fabricante', e.target.value)}\n            placeholder=\"Ex: 3M do Brasil\"\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            required\n            disabled={disabled}\n          />\n        </div>\n      </div>\n\n      {/* Categoria e Vida Útil */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor={getFieldId('categoria')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n            Categoria <span className=\"text-red-500\">*</span>\n          </Label>\n          <Select\n            id={getFieldId('categoria')}\n            value={formData.categoria || ''}\n            onChange={(e) => onChange('categoria', e.target.value)}\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            required\n            disabled={disabled}\n          >\n            <option value=\"\">Selecione uma categoria</option>\n            {EPI_CATEGORIES.map(cat => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <Label htmlFor={getFieldId('vidaUtilDias')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n            Vida Útil (dias) <span className=\"text-red-500\">*</span>\n          </Label>\n          <TextInput\n            id={getFieldId('vidaUtilDias')}\n            type=\"number\"\n            min=\"1\"\n            value={formData.vidaUtilDias || DEFAULT_VIDA_UTIL_DIAS}\n            onChange={(e) => onChange('vidaUtilDias', parseInt(e.target.value) || DEFAULT_VIDA_UTIL_DIAS)}\n            sizing=\"sm\"\n            className=\"rounded-sm\"\n            required\n            disabled={disabled}\n          />\n        </div>\n      </div>\n\n      {/* Descrição */}\n      <div>\n        <Label htmlFor={getFieldId('descricao')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Descrição\n        </Label>\n        <Textarea\n          id={getFieldId('descricao')}\n          value={formData.descricao || ''}\n          onChange={(e) => onChange('descricao', e.target.value)}\n          placeholder=\"Descreva as características e especificações do EPI...\"\n          rows={3}\n          className=\"rounded-sm\"\n          disabled={disabled}\n        />\n      </div>\n\n      {/* Foto */}\n      <div>\n        <Label htmlFor={getFieldId('foto')} className=\"text-gray-700 dark:text-gray-300 mb-2 block\">\n          Foto do Equipamento\n        </Label>\n        <FileInput\n          id={getFieldId('foto')}\n          helperText=\"Selecione uma imagem do equipamento (opcional)\"\n          className=\"rounded-sm\"\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EPIForm;","import React from 'react';\nimport { Modal, Button } from 'flowbite-react';\nimport { TipoEPI } from '../../types';\nimport EPIForm from './EPIForm';\n\ninterface EPIFormModalProps {\n  show: boolean;\n  onClose: () => void;\n  onSave: () => Promise<void>;\n  formData: Partial<TipoEPI>;\n  onChange: (field: keyof TipoEPI, value: string | number) => void;\n  editMode: boolean;\n  isLoading?: boolean;\n}\n\nconst EPIFormModal: React.FC<EPIFormModalProps> = ({\n  show,\n  onClose,\n  onSave,\n  formData,\n  onChange,\n  editMode,\n  isLoading = false\n}) => {\n  const handleSubmit = async () => {\n    try {\n      await onSave();\n    } catch (error) {\n      console.error('Erro ao salvar:', error);\n      alert('Erro ao salvar tipo EPI. Verifique se o JSON Server está rodando.');\n    }\n  };\n\n  const isFormValid = () => {\n    return formData.nomeEquipamento && \n           formData.numeroCA && \n           formData.fabricante && \n           formData.categoria;\n  };\n\n  return (\n    <Modal \n      show={show} \n      onClose={onClose} \n      size=\"2xl\"\n    >\n      <Modal.Header>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n          {editMode ? 'Editar Tipo de EPI' : 'Novo Tipo de EPI'}\n        </h3>\n      </Modal.Header>\n\n      <Modal.Body className=\"overflow-y-auto max-h-96\">\n        <EPIForm\n          formData={formData}\n          onChange={onChange}\n          disabled={isLoading}\n        />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <div className=\"flex justify-end space-x-3 w-full\">\n          <Button \n            onClick={onClose} \n            color=\"gray\" \n            sizing=\"xs\" \n            className=\"rounded-sm\"\n            disabled={isLoading}\n          >\n            Cancelar\n          </Button>\n          <Button \n            onClick={handleSubmit}\n            color=\"primary\" \n            sizing=\"xs\" \n            className=\"rounded-sm\"\n            disabled={!isFormValid() || isLoading}\n          >\n            {editMode ? 'Salvar Alterações' : 'Criar Tipo EPI'}\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default EPIFormModal;","import React from 'react';\nimport { Modal, Button } from 'flowbite-react';\nimport { PencilIcon } from '@heroicons/react/24/outline';\nimport { TipoEPI } from '../../types';\nimport EPIForm from './EPIForm';\n\ninterface EPIDetailsModalProps {\n  show: boolean;\n  onClose: () => void;\n  tipo: TipoEPI | null;\n  formData: Partial<TipoEPI>;\n  onChange: (field: keyof TipoEPI, value: string | number) => void;\n  onEdit: () => void;\n  onSave: () => Promise<void>;\n  editMode: boolean;\n  onCancelEdit: () => void;\n  isLoading?: boolean;\n}\n\nconst EPIDetailsModal: React.FC<EPIDetailsModalProps> = ({\n  show,\n  onClose,\n  tipo,\n  formData,\n  onChange,\n  onEdit,\n  onSave,\n  editMode,\n  onCancelEdit,\n  isLoading = false\n}) => {\n  const handleSubmit = async () => {\n    try {\n      await onSave();\n    } catch (error) {\n      console.error('Erro ao salvar:', error);\n      alert('Erro ao salvar alterações.');\n    }\n  };\n\n  const isFormValid = () => {\n    return formData.nomeEquipamento && \n           formData.numeroCA && \n           formData.fabricante && \n           formData.categoria;\n  };\n\n  if (!tipo) return null;\n\n  return (\n    <Modal \n      show={show} \n      onClose={onClose} \n      size=\"xl\"\n    >\n      <Modal.Header>\n        <div className=\"flex justify-between items-start w-full\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n              {editMode ? 'Editar Tipo de EPI' : tipo.nomeEquipamento}\n            </h3>\n            {!editMode && (\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                CA {tipo.numeroCA}\n              </p>\n            )}\n          </div>\n          {!editMode && (\n            <Button \n              onClick={onEdit}\n              color=\"gray\" \n              sizing=\"xs\" \n              className=\"rounded-sm\"\n            >\n              <PencilIcon className=\"w-4 h-4 mr-2\" />\n              Editar\n            </Button>\n          )}\n        </div>\n      </Modal.Header>\n\n      <Modal.Body className=\"overflow-y-auto max-h-96\">\n        {editMode ? (\n          <EPIForm\n            formData={formData}\n            onChange={onChange}\n            idPrefix=\"edit\"\n            disabled={isLoading}\n          />\n        ) : (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Informações Básicas\n                </h4>\n                <div className=\"space-y-3\">\n                  <div>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Fabricante</span>\n                    <p className=\"text-sm text-gray-900 dark:text-white\">{tipo.fabricante}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Categoria</span>\n                    <p className=\"text-sm text-gray-900 dark:text-white\">{tipo.categoria}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Vida Útil</span>\n                    <p className=\"text-sm text-gray-900 dark:text-white\">{tipo.vidaUtilDias} dias</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Certificação\n                </h4>\n                <div className=\"space-y-3\">\n                  <div>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Número CA</span>\n                    <p className=\"text-sm text-gray-900 dark:text-white font-mono\">{tipo.numeroCA}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {tipo.descricao && (\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Descrição\n                </h4>\n                <p className=\"text-sm text-gray-700 dark:text-gray-300 leading-relaxed\">\n                  {tipo.descricao}\n                </p>\n              </div>\n            )}\n\n            {tipo.foto && (\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Imagem\n                </h4>\n                <div className=\"w-32 h-32 bg-gray-200 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-gray-500 dark:text-gray-400 text-xs\">Imagem do EPI</span>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <div className=\"flex justify-end space-x-3 w-full\">\n          {editMode ? (\n            <>\n              <Button \n                onClick={onCancelEdit}\n                color=\"gray\" \n                sizing=\"xs\" \n                className=\"rounded-sm\"\n                disabled={isLoading}\n              >\n                Cancelar\n              </Button>\n              <Button \n                onClick={handleSubmit}\n                color=\"primary\" \n                sizing=\"xs\" \n                className=\"rounded-sm\"\n                disabled={!isFormValid() || isLoading}\n              >\n                Salvar Alterações\n              </Button>\n            </>\n          ) : (\n            <Button \n              onClick={onClose}\n              color=\"primary\" \n              sizing=\"xs\" \n              className=\"rounded-sm\"\n            >\n              Fechar\n            </Button>\n          )}\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default EPIDetailsModal;","import React from 'react';\nimport { Table, Badge, Button } from 'flowbite-react';\nimport { \n  EyeIcon, \n  DocumentDuplicateIcon, \n  TrashIcon, \n  ShoppingCartIcon \n} from '@heroicons/react/24/outline';\nimport { TipoEPI } from '../../types';\n\ninterface EPITableProps {\n  tipos: TipoEPI[];\n  onView: (tipo: TipoEPI) => void;\n  onDuplicate: (tipo: TipoEPI) => void;\n  onDelete: (tipo: TipoEPI) => void;\n}\n\nconst EPITable: React.FC<EPITableProps> = ({\n  tipos,\n  onView,\n  onDuplicate,\n  onDelete\n}) => {\n  const handleDelete = async (tipo: TipoEPI) => {\n    if (window.confirm(`Deseja realmente excluir o tipo EPI \"${tipo.nomeEquipamento}\"?`)) {\n      try {\n        await onDelete(tipo);\n      } catch (error) {\n        console.error('Erro ao excluir tipo EPI:', error);\n        alert('Erro ao excluir tipo EPI.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <Table hoverable className=\"min-w-full\">\n        <Table.Head>\n          <Table.HeadCell>Equipamento</Table.HeadCell>\n          <Table.HeadCell>CA</Table.HeadCell>\n          <Table.HeadCell>Fabricante</Table.HeadCell>\n          <Table.HeadCell>Categoria</Table.HeadCell>\n          <Table.HeadCell>Vida Útil</Table.HeadCell>\n          <Table.HeadCell className=\"w-20\">\n            <span className=\"sr-only\">Ações</span>\n          </Table.HeadCell>\n        </Table.Head>\n        <Table.Body className=\"divide-y\">\n          {tipos.length > 0 ? (\n            tipos.map((tipo) => (\n              <Table.Row \n                key={tipo.id} \n                className=\"bg-white dark:border-gray-700 dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer\"\n                onClick={() => onView(tipo)}\n              >\n                <Table.Cell>\n                  <div className=\"font-medium text-gray-900 dark:text-white\">{tipo.nomeEquipamento}</div>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 truncate max-w-xs\">\n                    {tipo.descricao}\n                  </div>\n                </Table.Cell>\n                <Table.Cell>\n                  <Badge color=\"gray\" size=\"sm\" className=\"w-fit\">\n                    {tipo.numeroCA}\n                  </Badge>\n                </Table.Cell>\n                <Table.Cell>\n                  <div className=\"text-sm text-gray-900 dark:text-white\">{tipo.fabricante}</div>\n                </Table.Cell>\n                <Table.Cell>\n                  <Badge color=\"primary\" size=\"sm\" className=\"w-fit\">\n                    {tipo.categoria}\n                  </Badge>\n                </Table.Cell>\n                <Table.Cell>\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {tipo.vidaUtilDias} dias\n                  </div>\n                </Table.Cell>\n                <Table.Cell>\n                  <div className=\"flex space-x-1\">\n                    <Button \n                      sizing=\"xs\" \n                      color=\"gray\"\n                      onClick={(e: React.MouseEvent) => {\n                        e.stopPropagation();\n                        onView(tipo);\n                      }}\n                      title=\"Visualizar\"\n                      className=\"rounded-sm\"\n                    >\n                      <EyeIcon className=\"w-4 h-4\" />\n                    </Button>\n                    <Button \n                      sizing=\"xs\" \n                      color=\"gray\"\n                      onClick={(e: React.MouseEvent) => {\n                        e.stopPropagation();\n                        onDuplicate(tipo);\n                      }}\n                      title=\"Duplicar\"\n                      className=\"rounded-sm\"\n                    >\n                      <DocumentDuplicateIcon className=\"w-4 h-4\" />\n                    </Button>\n                    <Button \n                      sizing=\"xs\" \n                      color=\"gray\"\n                      onClick={(e: React.MouseEvent) => {\n                        e.stopPropagation();\n                        handleDelete(tipo);\n                      }}\n                      title=\"Excluir\"\n                      className=\"rounded-sm\"\n                    >\n                      <TrashIcon className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </Table.Cell>\n              </Table.Row>\n            ))\n          ) : (\n            <Table.Row>\n              <Table.Cell colSpan={6} className=\"text-center py-8\">\n                <div className=\"flex flex-col items-center justify-center\">\n                  <ShoppingCartIcon className=\"w-12 h-12 text-gray-400 mb-4\" />\n                  <p className=\"text-gray-500 dark:text-gray-400\">Nenhum tipo de EPI encontrado</p>\n                  <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                    Comece cadastrando tipos de EPIs no catálogo\n                  </p>\n                </div>\n              </Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default EPITable;","import { ItemEstoque, TipoEPI } from '../types';\nimport { estoqueAPI, tiposEPIAPI } from '../services/api';\nimport { registrarEventoEstoque, criarEventoCadastroItem } from './estoqueHelpers';\n\n/**\n * Sincroniza automaticamente todos os tipos de EPI do catálogo com o estoque único centralizado\n * Cria um item de estoque para cada tipo EPI que não existe no estoque\n */\nexport const sincronizarCatalogoComEstoque = async (): Promise<{\n  sucesso: boolean;\n  itensAdicionados: number;\n  erros: string[];\n}> => {\n  try {\n    console.log('🔄 Iniciando sincronização catálogo → estoque centralizado...');\n    \n    // Buscar todos os tipos EPI e itens de estoque existentes\n    const [tiposEPI, itensEstoque] = await Promise.all([\n      tiposEPIAPI.getAll(),\n      estoqueAPI.getAll()\n    ]);\n\n    const erros: string[] = [];\n    let itensAdicionados = 0;\n    \n    console.log(`📋 ${tiposEPI.length} tipos EPI, ${itensEstoque.length} itens em estoque`);\n\n    // Para cada tipo EPI, verificar se existe no estoque centralizado\n    for (const tipoEPI of tiposEPI) {\n      try {\n        // Verificar se já existe item de estoque para este tipo (estoque único, sem empresa)\n        const itemExistente = itensEstoque.find((item: any) => item.tipoEPIId === tipoEPI.id);\n\n        if (!itemExistente) {\n          // Criar item de estoque com quantidade zero no almoxarifado central\n          const novoItemEstoque: Omit<ItemEstoque, 'id'> = {\n            tipoEPIId: tipoEPI.id,\n            empresaId: 'almoxarifado', // ID fixo para almoxarifado central\n            quantidade: 0,\n            quantidadeMinima: calcularQuantidadeMinima(tipoEPI),\n            localizacao: 'Almoxarifado Central',\n            lote: `LOTE-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`,\n            dataValidade: calcularDataValidade(tipoEPI)\n          };\n\n          const itemCriado = await estoqueAPI.create({\n            id: `estoque_${Date.now()}_${tipoEPI.id}`,\n            ...novoItemEstoque\n          });\n\n          // Registrar evento de cadastro no histórico\n          await registrarEventoEstoque(\n            criarEventoCadastroItem(\n              String(itemCriado.id),\n              tipoEPI.nomeEquipamento,\n              0,\n              'Sistema'\n            )\n          );\n\n          itensAdicionados++;\n          console.log(`✅ Criado item estoque: ${tipoEPI.nomeEquipamento} no almoxarifado central`);\n        }\n      } catch (error) {\n        const mensagemErro = `Erro ao criar item ${tipoEPI.nomeEquipamento}: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n        erros.push(mensagemErro);\n        console.error('❌', mensagemErro);\n      }\n    }\n\n    console.log(`🎉 Sincronização concluída: ${itensAdicionados} itens adicionados, ${erros.length} erros`);\n\n    return {\n      sucesso: erros.length === 0,\n      itensAdicionados,\n      erros\n    };\n\n  } catch (error) {\n    const mensagemErro = `Erro geral na sincronização: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n    console.error('💥', mensagemErro);\n    \n    return {\n      sucesso: false,\n      itensAdicionados: 0,\n      erros: [mensagemErro]\n    };\n  }\n};\n\n/**\n * Calcula quantidade mínima baseada na categoria do EPI\n */\nconst calcularQuantidadeMinima = (tipoEPI: TipoEPI): number => {\n  const categoriaMinimos: Record<string, number> = {\n    'Proteção da Cabeça': 10,\n    'Proteção dos Olhos': 20,\n    'Proteção Auditiva': 50,\n    'Proteção Respiratória': 100,\n    'Proteção das Mãos': 20,\n    'Proteção dos Pés': 10,\n    'Proteção do Corpo': 5,\n    'Proteção contra Quedas': 5,\n    'Sinalização': 15\n  };\n\n  return categoriaMinimos[tipoEPI.categoria] || 10;\n};\n\n/**\n * Calcula data de validade baseada na vida útil do EPI\n */\nconst calcularDataValidade = (tipoEPI: TipoEPI): string => {\n  const hoje = new Date();\n  const dataValidade = new Date(hoje);\n  \n  // Adicionar vida útil em dias mais um período extra para estoque\n  const diasEstoque = tipoEPI.vidaUtilDias + 365; // +1 ano para margem de estoque\n  dataValidade.setDate(dataValidade.getDate() + diasEstoque);\n  \n  return dataValidade.toISOString().split('T')[0]; // Formato YYYY-MM-DD\n};\n\n/**\n * Cria automaticamente item de estoque no almoxarifado central quando um novo tipo EPI é cadastrado\n */\nexport const criarEstoqueParaNovoTipoEPI = async (tipoEPI: TipoEPI): Promise<{\n  sucesso: boolean;\n  itensAdicionados: number;\n  erros: string[];\n}> => {\n  try {\n    console.log(`🆕 Criando estoque para novo tipo EPI: ${tipoEPI.nomeEquipamento}`);\n    \n    const erros: string[] = [];\n    let itensAdicionados = 0;\n\n    // Criar item de estoque único no almoxarifado central\n    try {\n      const novoItemEstoque: Omit<ItemEstoque, 'id'> = {\n        tipoEPIId: tipoEPI.id,\n        empresaId: 'almoxarifado', // ID fixo para almoxarifado central\n        quantidade: 0,\n        quantidadeMinima: calcularQuantidadeMinima(tipoEPI),\n        localizacao: 'Almoxarifado Central',\n        lote: `LOTE-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`,\n        dataValidade: calcularDataValidade(tipoEPI)\n      };\n\n      const itemCriado = await estoqueAPI.create({\n        id: `estoque_${Date.now()}_${tipoEPI.id}`,\n        ...novoItemEstoque\n      });\n\n      // Registrar evento de cadastro\n      await registrarEventoEstoque(\n        criarEventoCadastroItem(\n          String(itemCriado.id),\n          tipoEPI.nomeEquipamento,\n          0,\n          'Sistema'\n        )\n      );\n\n      itensAdicionados++;\n      console.log(`✅ Estoque criado no almoxarifado central`);\n\n    } catch (error) {\n      const mensagemErro = `Erro ao criar estoque: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n      erros.push(mensagemErro);\n      console.error('❌', mensagemErro);\n    }\n\n    return {\n      sucesso: erros.length === 0,\n      itensAdicionados,\n      erros\n    };\n\n  } catch (error) {\n    const mensagemErro = `Erro ao criar estoque para novo tipo EPI: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n    console.error('💥', mensagemErro);\n    \n    return {\n      sucesso: false,\n      itensAdicionados: 0,\n      erros: [mensagemErro]\n    };\n  }\n};\n\n/**\n * Remove itens de estoque quando um tipo EPI é excluído\n * (apenas se quantidade for 0)\n */\nexport const removerEstoqueParaTipoEPIExcluido = async (tipoEPIId: string): Promise<{\n  sucesso: boolean;\n  itensRemovidos: number;\n  erros: string[];\n}> => {\n  try {\n    console.log(`🗑️ Removendo estoque para tipo EPI excluído: ${tipoEPIId}`);\n    \n    // Buscar todos os itens de estoque deste tipo\n    const itensEstoque = await estoqueAPI.getByTipoEPI(tipoEPIId);\n    \n    const erros: string[] = [];\n    let itensRemovidos = 0;\n\n    for (const item of itensEstoque) {\n      try {\n        if (item.quantidade === 0) {\n          // Só remove se não há estoque\n          await estoqueAPI.delete(item.id);\n          itensRemovidos++;\n          console.log(`✅ Item de estoque removido: ${item.id}`);\n        } else {\n          erros.push(`Item ${item.id} não removido - possui quantidade ${item.quantidade}`);\n        }\n      } catch (error) {\n        const mensagemErro = `Erro ao remover item ${item.id}: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n        erros.push(mensagemErro);\n        console.error('❌', mensagemErro);\n      }\n    }\n\n    return {\n      sucesso: erros.length === 0,\n      itensRemovidos,\n      erros\n    };\n\n  } catch (error) {\n    const mensagemErro = `Erro ao remover estoque para tipo EPI: ${error instanceof Error ? error.message : 'Erro desconhecido'}`;\n    console.error('💥', mensagemErro);\n    \n    return {\n      sucesso: false,\n      itensRemovidos: 0,\n      erros: [mensagemErro]\n    };\n  }\n};","import React, { useState } from 'react';\nimport { TipoEPI } from '../types';\nimport { tiposEPIAPI } from '../services/api';\nimport { useAPI } from './useAPI';\nimport { processEntities } from '../utils/entityHelpers';\nimport { criarEstoqueParaNovoTipoEPI, removerEstoqueParaTipoEPIExcluido } from '../utils/inventorySync';\n\ninterface UseEPICatalogResult {\n  // Dados\n  tiposEPI: TipoEPI[] | null;\n  loading: boolean;\n  error: string | null;\n  \n  // Estados do formulário\n  formData: Partial<TipoEPI>;\n  setFormData: React.Dispatch<React.SetStateAction<Partial<TipoEPI>>>;\n  \n  // Estados dos modais\n  showNovoTipoModal: boolean;\n  setShowNovoTipoModal: React.Dispatch<React.SetStateAction<boolean>>;\n  showDetalhesModal: boolean;\n  setShowDetalhesModal: React.Dispatch<React.SetStateAction<boolean>>;\n  selectedTipo: TipoEPI | null;\n  setSelectedTipo: React.Dispatch<React.SetStateAction<TipoEPI | null>>;\n  editMode: boolean;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  \n  // Estados de filtros\n  searchTerm: string;\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n  filtroCategoria: string;\n  setFiltroCategoria: React.Dispatch<React.SetStateAction<string>>;\n  \n  // Dados processados\n  tiposFiltrados: TipoEPI[];\n  paginatedTipos: TipoEPI[];\n  totalPages: number;\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  \n  // Operações\n  refetch: () => Promise<void>;\n  resetForm: () => void;\n  handleInputChange: (field: keyof TipoEPI, value: string | number) => void;\n  handleSubmit: () => Promise<void>;\n  abrirDetalhes: (tipo: TipoEPI) => void;\n  iniciarEdicao: () => void;\n  excluirTipo: (tipo: TipoEPI) => Promise<void>;\n  duplicarTipo: (tipo: TipoEPI) => void;\n}\n\nconst INITIAL_FORM_DATA: Partial<TipoEPI> = {\n  numeroCA: '',\n  nomeEquipamento: '',\n  descricao: '',\n  fabricante: '',\n  categoria: '',\n  vidaUtilDias: 365,\n  foto: ''\n};\n\nexport const useEPICatalog = (): UseEPICatalogResult => {\n  // Hook para dados da API\n  const { data: tiposEPI, loading, error, refetch } = useAPI<TipoEPI[]>(tiposEPIAPI.getAll);\n  \n  // Estados dos modais\n  const [showNovoTipoModal, setShowNovoTipoModal] = useState(false);\n  const [showDetalhesModal, setShowDetalhesModal] = useState(false);\n  const [selectedTipo, setSelectedTipo] = useState<TipoEPI | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  \n  // Estados de filtros e busca\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtroCategoria, setFiltroCategoria] = useState<string>('todas');\n  \n  // Estados do formulário\n  const [formData, setFormData] = useState<Partial<TipoEPI>>(INITIAL_FORM_DATA);\n\n  // Estados de paginação\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Filtrar e processar dados\n  const { items: tiposFiltrados } = processEntities(tiposEPI || [], {\n    filters: { categoria: filtroCategoria },\n    searchTerm,\n    searchFields: ['nomeEquipamento', 'numeroCA', 'fabricante'],\n    sortField: 'nomeEquipamento',\n    sortDirection: 'asc'\n  });\n\n  // Paginação\n  const totalPages = Math.ceil(tiposFiltrados.length / itemsPerPage);\n  const paginatedTipos = tiposFiltrados.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // Resetar formulário\n  const resetForm = () => {\n    setFormData(INITIAL_FORM_DATA);\n    setEditMode(false);\n  };\n\n  // Handler para mudanças no formulário\n  const handleInputChange = (field: keyof TipoEPI, value: string | number) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Submeter formulário (criar ou editar)\n  const handleSubmit = async () => {\n    try {\n      let tipoEPISalvo: TipoEPI;\n      \n      if (editMode && selectedTipo) {\n        // Editar tipo existente\n        tipoEPISalvo = await tiposEPIAPI.update(selectedTipo.id, {\n          ...selectedTipo,\n          ...formData\n        });\n      } else {\n        // Criar novo tipo\n        const novoTipo = {\n          id: `tipo_${Date.now()}`,\n          ...formData\n        };\n        tipoEPISalvo = await tiposEPIAPI.create(novoTipo);\n        \n        // Criar automaticamente itens de estoque para todas as empresas\n        try {\n          console.log('🔄 Criando estoque automaticamente para novo tipo EPI...');\n          const resultadoEstoque = await criarEstoqueParaNovoTipoEPI(tipoEPISalvo);\n          \n          if (resultadoEstoque.sucesso) {\n            console.log(`✅ ${resultadoEstoque.itensAdicionados} itens de estoque criados automaticamente`);\n          } else {\n            console.warn('⚠️ Alguns itens de estoque não foram criados:', resultadoEstoque.erros);\n          }\n        } catch (error) {\n          console.error('❌ Erro ao criar estoque automaticamente:', error);\n          // Não falha a operação principal, apenas registra o erro\n        }\n      }\n      \n      // Recarregar dados\n      await refetch();\n      \n      // Fechar modal e resetar\n      setShowNovoTipoModal(false);\n      setShowDetalhesModal(false);\n      resetForm();\n      setSelectedTipo(null);\n      \n    } catch (error) {\n      console.error('Erro ao salvar tipo EPI:', error);\n      throw error; // Re-throw para permitir tratamento na UI\n    }\n  };\n\n  // Abrir detalhes de um tipo\n  const abrirDetalhes = (tipo: TipoEPI) => {\n    setSelectedTipo(tipo);\n    setShowDetalhesModal(true);\n    setEditMode(false);\n  };\n\n  // Iniciar edição\n  const iniciarEdicao = () => {\n    if (selectedTipo) {\n      setFormData(selectedTipo);\n      setEditMode(true);\n    }\n  };\n\n  // Excluir tipo\n  const excluirTipo = async (tipo: TipoEPI) => {\n    try {\n      // Primeiro, tentar remover itens de estoque relacionados (apenas os vazios)\n      try {\n        console.log('🔄 Removendo itens de estoque relacionados...');\n        const resultadoEstoque = await removerEstoqueParaTipoEPIExcluido(tipo.id);\n        \n        if (resultadoEstoque.sucesso) {\n          console.log(`✅ ${resultadoEstoque.itensRemovidos} itens de estoque removidos`);\n        } else {\n          console.warn('⚠️ Alguns itens de estoque não foram removidos:', resultadoEstoque.erros);\n          // Continua com a exclusão do tipo mesmo se há itens com estoque\n        }\n      } catch (error) {\n        console.error('❌ Erro ao remover estoque:', error);\n        // Não falha a operação principal\n      }\n      \n      // Excluir o tipo EPI\n      await tiposEPIAPI.delete(tipo.id);\n      await refetch();\n    } catch (error) {\n      console.error('Erro ao excluir tipo EPI:', error);\n      throw error;\n    }\n  };\n\n  // Duplicar tipo (para criação baseada em existente)\n  const duplicarTipo = (tipo: TipoEPI) => {\n    setFormData({\n      ...tipo,\n      numeroCA: '', // CA deve ser único\n      nomeEquipamento: `${tipo.nomeEquipamento} (Cópia)`\n    });\n    setShowNovoTipoModal(true);\n    setEditMode(false);\n  };\n\n  // Resetar página quando filtros mudarem\n  const handleFilterChange = () => {\n    setCurrentPage(1);\n  };\n\n  // Effect para resetar página quando filtros mudarem\n  React.useEffect(() => {\n    handleFilterChange();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm, filtroCategoria]);\n\n  return {\n    // Dados\n    tiposEPI,\n    loading,\n    error,\n    \n    // Estados do formulário\n    formData,\n    setFormData,\n    \n    // Estados dos modais\n    showNovoTipoModal,\n    setShowNovoTipoModal,\n    showDetalhesModal,\n    setShowDetalhesModal,\n    selectedTipo,\n    setSelectedTipo,\n    editMode,\n    setEditMode,\n    \n    // Estados de filtros\n    searchTerm,\n    setSearchTerm,\n    filtroCategoria,\n    setFiltroCategoria,\n    \n    // Dados processados\n    tiposFiltrados,\n    paginatedTipos,\n    totalPages,\n    currentPage,\n    setCurrentPage,\n    \n    // Operações\n    refetch,\n    resetForm,\n    handleInputChange,\n    handleSubmit,\n    abrirDetalhes,\n    iniciarEdicao,\n    excluirTipo,\n    duplicarTipo,\n  };\n};","import React from 'react';\nimport { \n  Button, \n  TextInput, \n  Label, \n  Pagination, \n  Dropdown\n} from 'flowbite-react';\nimport { \n  EllipsisVerticalIcon, \n  PlusIcon, \n  ArrowDownTrayIcon,\n  DocumentDuplicateIcon,\n  FunnelIcon\n} from '@heroicons/react/24/outline';\nimport SearchableDropdown from '../components/common/SearchableDropdown';\nimport EPIFormModal from '../components/epi/EPIFormModal';\nimport EPIDetailsModal from '../components/epi/EPIDetailsModal';\nimport EPITable from '../components/epi/EPITable';\nimport { useEPICatalog } from '../hooks/useEPICatalog';\nimport { EPI_CATEGORIES } from '../constants/epiConstants';\n\nconst CatalogoEPIsPage: React.FC = () => {\n  // Hook principal que gerencia todos os estados e operações\n  const {\n    // Dados\n    loading,\n    error,\n    \n    // Estados do formulário\n    formData,\n    \n    // Estados dos modais\n    showNovoTipoModal,\n    setShowNovoTipoModal,\n    showDetalhesModal,\n    setShowDetalhesModal,\n    selectedTipo,\n    editMode,\n    \n    // Estados de filtros\n    searchTerm,\n    setSearchTerm,\n    filtroCategoria,\n    setFiltroCategoria,\n    \n    // Dados processados\n    tiposFiltrados,\n    paginatedTipos,\n    totalPages,\n    currentPage,\n    setCurrentPage,\n    \n    // Operações\n    refetch,\n    resetForm,\n    handleInputChange,\n    handleSubmit,\n    abrirDetalhes,\n    iniciarEdicao,\n    excluirTipo,\n    duplicarTipo\n  } = useEPICatalog();\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  const handleCancelEdit = () => {\n    resetForm();\n  };\n\n  // Mostrar loading se estiver carregando\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Carregando catálogo...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Mostrar erro se houver\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto mt-8 p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Erro ao carregar catálogo</h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error}</p>\n                <p className=\"mt-2\">Verifique se o JSON Server está rodando na porta 3001.</p>\n              </div>\n              <div className=\"mt-4\">\n                <Button\n                  onClick={refetch}\n                  color=\"failure\"\n                  size=\"sm\"\n                  className=\"rounded-sm\"\n                >\n                  Tentar novamente\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900\">\n      <div className=\"mx-auto max-w-full\">\n        {/* Header */}\n        <div className=\"bg-white dark:bg-gray-900 relative shadow-md sm:rounded-lg overflow-hidden\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4\">\n            <div className=\"w-full md:w-1/2\">\n              <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Catálogo de EPIs</h1>\n              <p className=\"text-gray-500 dark:text-gray-400\">Gerencie tipos de equipamentos de proteção individual</p>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <Button \n                onClick={() => {\n                  resetForm();\n                  setShowNovoTipoModal(true);\n                }} \n                color=\"primary\"\n                sizing=\"xs\"\n                className=\"rounded-sm\"\n              >\n                <PlusIcon className=\"w-4 h-4 mr-2\" />\n                Novo tipo EPI\n              </Button>\n              <Dropdown\n                label=\"\"\n                dismissOnClick={false}\n                renderTrigger={() => (\n                  <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n                    <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                  </Button>\n                )}\n              >\n                <Dropdown.Item icon={ArrowDownTrayIcon}>\n                  Exportar catálogo\n                </Dropdown.Item>\n                <Dropdown.Item icon={DocumentDuplicateIcon}>\n                  Importar tipos\n                </Dropdown.Item>\n              </Dropdown>\n            </div>\n          </div>\n\n          {/* Search and Filters */}\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4 border-t dark:border-gray-700\">\n            <div className=\"w-full md:w-1/3\">\n              <Label htmlFor=\"table-search\" className=\"sr-only\">Buscar</Label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\"></path>\n                  </svg>\n                </div>\n                <TextInput\n                  id=\"table-search\"\n                  placeholder=\"Buscar por nome, CA ou fabricante...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  sizing=\"sm\"\n                  className=\"pl-10 rounded-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0\">\n              <SearchableDropdown\n                options={EPI_CATEGORIES.map(cat => ({\n                  value: cat,\n                  label: cat\n                }))}\n                value={filtroCategoria}\n                onChange={setFiltroCategoria}\n                placeholder=\"Selecionar categoria...\"\n                searchPlaceholder=\"Buscar categorias...\"\n                allOptionsLabel=\"Todas as categorias\"\n                sizing=\"sm\"\n              />\n              <Button color=\"light\" sizing=\"xs\" className=\"rounded-sm\">\n                <FunnelIcon className=\"w-4 h-4 mr-2\" />\n                Filtros\n              </Button>\n            </div>\n          </div>\n\n          {/* Table */}\n          <EPITable \n            tipos={paginatedTipos}\n            onView={abrirDetalhes}\n            onDuplicate={duplicarTipo}\n            onDelete={excluirTipo}\n          />\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4\">\n              <span className=\"text-sm font-normal text-gray-500 dark:text-gray-400\">\n                Mostrando <span className=\"font-semibold text-gray-900 dark:text-white\">{((currentPage - 1) * 10) + 1}-{Math.min(currentPage * 10, tiposFiltrados.length)}</span> de <span className=\"font-semibold text-gray-900 dark:text-white\">{tiposFiltrados.length}</span>\n              </span>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={onPageChange}\n                showIcons\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modais */}\n      <EPIFormModal\n        show={showNovoTipoModal}\n        onClose={() => {\n          setShowNovoTipoModal(false);\n          resetForm();\n        }}\n        onSave={handleSubmit}\n        formData={formData}\n        onChange={handleInputChange}\n        editMode={editMode}\n      />\n\n      <EPIDetailsModal\n        show={showDetalhesModal}\n        onClose={() => {\n          setShowDetalhesModal(false);\n          resetForm();\n        }}\n        tipo={selectedTipo}\n        formData={formData}\n        onChange={handleInputChange}\n        onEdit={iniciarEdicao}\n        onSave={handleSubmit}\n        editMode={editMode}\n        onCancelEdit={handleCancelEdit}\n      />\n    </div>\n  );\n};\n\nexport default CatalogoEPIsPage;"],"names":["ShoppingCartIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","EPI_CATEGORIES","DEFAULT_VIDA_UTIL_DIAS","EPIForm","formData","onChange","idPrefix","disabled","getFieldId","field","jsxs","Label","jsx","TextInput","e","Select","cat","Textarea","FileInput","EPIFormModal","show","onClose","onSave","editMode","isLoading","handleSubmit","error","isFormValid","Modal","Button","EPIDetailsModal","tipo","onEdit","onCancelEdit","PencilIcon","Fragment","EPITable","tipos","onView","onDuplicate","onDelete","handleDelete","Table","Badge","EyeIcon","DocumentDuplicateIcon","TrashIcon","calcularQuantidadeMinima","tipoEPI","calcularDataValidade","hoje","dataValidade","diasEstoque","criarEstoqueParaNovoTipoEPI","erros","itensAdicionados","novoItemEstoque","itemCriado","estoqueAPI","registrarEventoEstoque","criarEventoCadastroItem","mensagemErro","removerEstoqueParaTipoEPIExcluido","tipoEPIId","itensEstoque","itensRemovidos","item","INITIAL_FORM_DATA","useEPICatalog","tiposEPI","loading","refetch","useAPI","tiposEPIAPI","showNovoTipoModal","setShowNovoTipoModal","useState","showDetalhesModal","setShowDetalhesModal","selectedTipo","setSelectedTipo","setEditMode","searchTerm","setSearchTerm","filtroCategoria","setFiltroCategoria","setFormData","currentPage","setCurrentPage","itemsPerPage","tiposFiltrados","processEntities","totalPages","paginatedTipos","resetForm","handleInputChange","value","prev","tipoEPISalvo","novoTipo","resultadoEstoque","abrirDetalhes","iniciarEdicao","excluirTipo","duplicarTipo","handleFilterChange","React","CatalogoEPIsPage","onPageChange","page","handleCancelEdit","PlusIcon","Dropdown","EllipsisVerticalIcon","ArrowDownTrayIcon","SearchableDropdown","FunnelIcon","Pagination"],"mappings":"2rBACA,SAASA,GAAiB,CACxB,MAAAC,EACA,QAAAC,EACA,GAAGC,CACL,EAAGC,EAAQ,CACT,OAAoBC,gBAAoB,MAAO,OAAO,OAAO,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAKD,EACL,kBAAmBF,CACpB,EAAEC,CAAK,EAAGF,EAAqBI,EAAAA,cAAoB,QAAS,CAC3D,GAAIH,CACL,EAAED,CAAK,EAAI,KAAmBI,EAAAA,cAAoB,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,qRACP,CAAG,CAAC,CACJ,CACA,MAAMC,GAA2BC,EAAgB,WAACP,EAAgB,ECtBrDQ,EAAiB,CAC5B,qBACA,4BACA,oBACA,wBACA,oBACA,mBACA,oBACA,yBACA,QACF,EAEaC,EAAyB,ICIhCC,EAAkC,CAAC,CACvC,SAAAC,EACA,SAAAC,EACA,SAAAC,EAAW,GACX,SAAAC,EAAW,EACb,IAAM,CACJ,MAAMC,EAAcC,GAAkB,GAAGH,CAAQ,GAAGG,CAAK,GAGvD,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAA,OAACC,GAAM,QAASH,EAAW,iBAAiB,EAAG,UAAU,8CAA8C,SAAA,CAAA,uBAChFI,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EACtD,EACAA,EAAA,IAACC,EAAA,CACC,GAAIL,EAAW,iBAAiB,EAChC,MAAOJ,EAAS,iBAAmB,GACnC,SAAWU,GAAMT,EAAS,kBAAmBS,EAAE,OAAO,KAAK,EAC3D,YAAY,qCACZ,OAAO,KACP,UAAU,aACV,SAAQ,GACR,SAAAP,CAAA,CAAA,CACF,EACF,EAGAG,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAA,OAACC,GAAM,QAASH,EAAW,UAAU,EAAG,UAAU,8CAA8C,SAAA,CAAA,aACnFI,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EAC5C,EACAA,EAAA,IAACC,EAAA,CACC,GAAIL,EAAW,UAAU,EACzB,MAAOJ,EAAS,UAAY,GAC5B,SAAWU,GAAMT,EAAS,WAAYS,EAAE,OAAO,KAAK,EACpD,YAAY,YACZ,OAAO,KACP,UAAU,aACV,SAAQ,GACR,SAAAP,CAAA,CAAA,CACF,EACF,SACC,MACC,CAAA,SAAA,CAAAG,OAACC,GAAM,QAASH,EAAW,YAAY,EAAG,UAAU,8CAA8C,SAAA,CAAA,cACpFI,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EAC7C,EACAA,EAAA,IAACC,EAAA,CACC,GAAIL,EAAW,YAAY,EAC3B,MAAOJ,EAAS,YAAc,GAC9B,SAAWU,GAAMT,EAAS,aAAcS,EAAE,OAAO,KAAK,EACtD,YAAY,mBACZ,OAAO,KACP,UAAU,aACV,SAAQ,GACR,SAAAP,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAG,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAA,OAACC,GAAM,QAASH,EAAW,WAAW,EAAG,UAAU,8CAA8C,SAAA,CAAA,aACpFI,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EAC5C,EACAF,EAAA,KAACK,EAAA,CACC,GAAIP,EAAW,WAAW,EAC1B,MAAOJ,EAAS,WAAa,GAC7B,SAAWU,GAAMT,EAAS,YAAaS,EAAE,OAAO,KAAK,EACrD,OAAO,KACP,UAAU,aACV,SAAQ,GACR,SAAAP,EAEA,SAAA,CAACK,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAuB,0BAAA,EACvCX,EAAe,IACde,GAAAJ,EAAA,IAAC,UAAiB,MAAOI,EAAM,SAAlBA,CAAA,EAAAA,CAAsB,CACpC,CAAA,CAAA,CAAA,CACH,EACF,SACC,MACC,CAAA,SAAA,CAAAN,OAACC,GAAM,QAASH,EAAW,cAAc,EAAG,UAAU,8CAA8C,SAAA,CAAA,oBAChFI,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EACnD,EACAA,EAAA,IAACC,EAAA,CACC,GAAIL,EAAW,cAAc,EAC7B,KAAK,SACL,IAAI,IACJ,MAAOJ,EAAS,cAAgBF,EAChC,SAAWY,GAAMT,EAAS,eAAgB,SAASS,EAAE,OAAO,KAAK,GAAKZ,CAAsB,EAC5F,OAAO,KACP,UAAU,aACV,SAAQ,GACR,SAAAK,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAAK,EAAAA,IAACD,GAAM,QAASH,EAAW,WAAW,EAAG,UAAU,8CAA8C,SAEjG,YAAA,EACAI,EAAA,IAACK,EAAA,CACC,GAAIT,EAAW,WAAW,EAC1B,MAAOJ,EAAS,WAAa,GAC7B,SAAWU,GAAMT,EAAS,YAAaS,EAAE,OAAO,KAAK,EACrD,YAAY,yDACZ,KAAM,EACN,UAAU,aACV,SAAAP,CAAA,CAAA,CACF,EACF,SAGC,MACC,CAAA,SAAA,CAAAK,EAAAA,IAACD,GAAM,QAASH,EAAW,MAAM,EAAG,UAAU,8CAA8C,SAE5F,sBAAA,EACAI,EAAA,IAACM,EAAA,CACC,GAAIV,EAAW,MAAM,EACrB,WAAW,iDACX,UAAU,aACV,SAAAD,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,ECrIMY,GAA4C,CAAC,CACjD,KAAAC,EACA,QAAAC,EACA,OAAAC,EACA,SAAAlB,EACA,SAAAC,EACA,SAAAkB,EACA,UAAAC,EAAY,EACd,IAAM,CACJ,MAAMC,EAAe,SAAY,CAC3B,GAAA,CACF,MAAMH,EAAO,QACNI,EAAO,CACN,QAAA,MAAM,kBAAmBA,CAAK,EACtC,MAAM,mEAAmE,CAAA,CAE7E,EAEMC,EAAc,IACXvB,EAAS,iBACTA,EAAS,UACTA,EAAS,YACTA,EAAS,UAIhB,OAAAM,EAAA,KAACkB,EAAA,CACC,KAAAR,EACA,QAAAC,EACA,KAAK,MAEL,SAAA,CAACT,EAAA,IAAAgB,EAAM,OAAN,CACC,SAAChB,EAAAA,IAAA,KAAA,CAAG,UAAU,oDACX,SAAAW,EAAW,qBAAuB,kBAAA,CACrC,CACF,CAAA,EAECX,EAAA,IAAAgB,EAAM,KAAN,CAAW,UAAU,2BACpB,SAAAhB,EAAA,IAACT,EAAA,CACC,SAAAC,EACA,SAAAC,EACA,SAAUmB,CAAA,CAAA,EAEd,QAECI,EAAM,OAAN,CACC,SAAClB,OAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAE,EAAA,IAACiB,EAAA,CACC,QAASR,EACT,MAAM,OACN,OAAO,KACP,UAAU,aACV,SAAUG,EACX,SAAA,UAAA,CAED,EACAZ,EAAA,IAACiB,EAAA,CACC,QAASJ,EACT,MAAM,UACN,OAAO,KACP,UAAU,aACV,SAAU,CAACE,EAAA,GAAiBH,EAE3B,WAAW,oBAAsB,gBAAA,CAAA,CACpC,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,ECjEMM,GAAkD,CAAC,CACvD,KAAAV,EACA,QAAAC,EACA,KAAAU,EACA,SAAA3B,EACA,SAAAC,EACA,OAAA2B,EACA,OAAAV,EACA,SAAAC,EACA,aAAAU,EACA,UAAAT,EAAY,EACd,IAAM,CACJ,MAAMC,EAAe,SAAY,CAC3B,GAAA,CACF,MAAMH,EAAO,QACNI,EAAO,CACN,QAAA,MAAM,kBAAmBA,CAAK,EACtC,MAAM,4BAA4B,CAAA,CAEtC,EAEMC,EAAc,IACXvB,EAAS,iBACTA,EAAS,UACTA,EAAS,YACTA,EAAS,UAGd,OAAC2B,EAGHrB,EAAA,KAACkB,EAAA,CACC,KAAAR,EACA,QAAAC,EACA,KAAK,KAEL,SAAA,CAAAT,MAACgB,EAAM,OAAN,CACC,SAAClB,OAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAE,MAAC,MAAG,UAAU,oDACX,SAAWW,EAAA,qBAAuBQ,EAAK,gBAC1C,EACC,CAACR,GACCb,EAAAA,KAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,MAClDqB,EAAK,QAAA,CACX,CAAA,CAAA,EAEJ,EACC,CAACR,GACAb,EAAA,KAACmB,EAAA,CACC,QAASG,EACT,MAAM,OACN,OAAO,KACP,UAAU,aAEV,SAAA,CAACpB,EAAAA,IAAAsB,GAAA,CAAW,UAAU,cAAe,CAAA,EAAE,QAAA,CAAA,CAAA,CAEzC,CAAA,CAEJ,CACF,CAAA,QAECN,EAAM,KAAN,CAAW,UAAU,2BACnB,SACCL,EAAAX,EAAA,IAACT,EAAA,CACC,SAAAC,EACA,SAAAC,EACA,SAAS,OACT,SAAUmB,CAAA,CAGZ,EAAAd,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,sBAAA,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAU,aAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAyC,WAAK,UAAW,CAAA,CAAA,EACxE,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAyC,WAAK,SAAU,CAAA,CAAA,EACvE,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,EACpEF,EAAAA,KAAC,IAAE,CAAA,UAAU,wCAAyC,SAAA,CAAKqB,EAAA,aAAa,OAAA,CAAK,CAAA,CAAA,CAC/E,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACnB,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,eAAA,EACCA,MAAA,MAAA,CAAI,UAAU,YACb,gBAAC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,kDAAmD,WAAK,QAAS,CAAA,CAAA,CAAA,CAChF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECmB,EAAK,WACJrB,EAAAA,KAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,YAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,2DACV,WAAK,SACR,CAAA,CAAA,EACF,EAGDmB,EAAK,MACJrB,EAAAA,KAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,SAAA,EACAA,EAAAA,IAAC,OAAI,UAAU,qFACb,eAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,eAAa,CAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,EAEAA,EAAA,IAACgB,EAAM,OAAN,CACC,eAAC,MAAI,CAAA,UAAU,oCACZ,SAAAL,EAEGb,EAAA,KAAAyB,EAAA,SAAA,CAAA,SAAA,CAAAvB,EAAA,IAACiB,EAAA,CACC,QAASI,EACT,MAAM,OACN,OAAO,KACP,UAAU,aACV,SAAUT,EACX,SAAA,UAAA,CAED,EACAZ,EAAA,IAACiB,EAAA,CACC,QAASJ,EACT,MAAM,UACN,OAAO,KACP,UAAU,aACV,SAAU,CAACE,EAAA,GAAiBH,EAC7B,SAAA,mBAAA,CAAA,CAED,CAAA,CACF,EAEAZ,EAAA,IAACiB,EAAA,CACC,QAASR,EACT,MAAM,UACN,OAAO,KACP,UAAU,aACX,SAAA,QAAA,GAIL,CACF,CAAA,CAAA,CAAA,CACF,EA1IgB,IA4IpB,EC1KMe,GAAoC,CAAC,CACzC,MAAAC,EACA,OAAAC,EACA,YAAAC,EACA,SAAAC,CACF,IAAM,CACE,MAAAC,EAAe,MAAOV,GAAkB,CAC5C,GAAI,OAAO,QAAQ,wCAAwCA,EAAK,eAAe,IAAI,EAC7E,GAAA,CACF,MAAMS,EAAST,CAAI,QACZL,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChD,MAAM,2BAA2B,CAAA,CAGvC,EAGE,OAAAd,EAAA,IAAC,OAAI,UAAU,kBACb,gBAAC8B,EAAM,CAAA,UAAS,GAAC,UAAU,aACzB,SAAA,CAAChC,EAAAA,KAAAgC,EAAM,KAAN,CACC,SAAA,CAAC9B,EAAAA,IAAA8B,EAAM,SAAN,CAAe,SAAW,aAAA,CAAA,EAC1B9B,EAAAA,IAAA8B,EAAM,SAAN,CAAe,SAAE,IAAA,CAAA,EACjB9B,EAAAA,IAAA8B,EAAM,SAAN,CAAe,SAAU,YAAA,CAAA,EACzB9B,EAAAA,IAAA8B,EAAM,SAAN,CAAe,SAAS,WAAA,CAAA,EACxB9B,EAAAA,IAAA8B,EAAM,SAAN,CAAe,SAAS,WAAA,CAAA,EACzB9B,EAAAA,IAAC8B,EAAM,SAAN,CAAe,UAAU,OACxB,SAAA9B,EAAA,IAAC,OAAK,CAAA,UAAU,UAAU,SAAA,OAAK,CAAA,CACjC,CAAA,CAAA,EACF,EACCA,EAAAA,IAAA8B,EAAM,KAAN,CAAW,UAAU,WACnB,SAAML,EAAA,OAAS,EACdA,EAAM,IAAKN,GACTrB,EAAA,KAACgC,EAAM,IAAN,CAEC,UAAU,wGACV,QAAS,IAAMJ,EAAOP,CAAI,EAE1B,SAAA,CAACrB,EAAAA,KAAAgC,EAAM,KAAN,CACC,SAAA,CAAA9B,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,SAAAmB,EAAK,gBAAgB,EAChFnB,EAAA,IAAA,MAAA,CAAI,UAAU,6DACZ,WAAK,SACR,CAAA,CAAA,EACF,EACCA,EAAA,IAAA8B,EAAM,KAAN,CACC,eAACC,EAAM,CAAA,MAAM,OAAO,KAAK,KAAK,UAAU,QACrC,SAAAZ,EAAK,QACR,CAAA,EACF,EACAnB,EAAAA,IAAC8B,EAAM,KAAN,CACC,SAAA9B,EAAA,IAAC,OAAI,UAAU,wCAAyC,SAAKmB,EAAA,UAAA,CAAW,CAC1E,CAAA,EACCnB,EAAA,IAAA8B,EAAM,KAAN,CACC,eAACC,EAAM,CAAA,MAAM,UAAU,KAAK,KAAK,UAAU,QACxC,SAAAZ,EAAK,SACR,CAAA,EACF,QACCW,EAAM,KAAN,CACC,SAAChC,OAAA,MAAA,CAAI,UAAU,wCACZ,SAAA,CAAKqB,EAAA,aAAa,OAAA,CAAA,CACrB,CACF,CAAA,QACCW,EAAM,KAAN,CACC,SAAChC,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAE,EAAA,IAACiB,EAAA,CACC,OAAO,KACP,MAAM,OACN,QAAUf,GAAwB,CAChCA,EAAE,gBAAgB,EAClBwB,EAAOP,CAAI,CACb,EACA,MAAM,aACN,UAAU,aAEV,SAAAnB,EAAAA,IAACgC,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAC/B,EACAhC,EAAA,IAACiB,EAAA,CACC,OAAO,KACP,MAAM,OACN,QAAUf,GAAwB,CAChCA,EAAE,gBAAgB,EAClByB,EAAYR,CAAI,CAClB,EACA,MAAM,WACN,UAAU,aAEV,SAAAnB,EAAAA,IAACiC,EAAsB,CAAA,UAAU,SAAU,CAAA,CAAA,CAC7C,EACAjC,EAAA,IAACiB,EAAA,CACC,OAAO,KACP,MAAM,OACN,QAAUf,GAAwB,CAChCA,EAAE,gBAAgB,EAClB2B,EAAaV,CAAI,CACnB,EACA,MAAM,UACN,UAAU,aAEV,SAAAnB,EAAAA,IAACkC,GAAU,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACjC,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EAnEKf,EAAK,EAAA,CAqEb,EAEDnB,EAAAA,IAAC8B,EAAM,IAAN,CACC,SAAC9B,EAAA,IAAA8B,EAAM,KAAN,CAAW,QAAS,EAAG,UAAU,mBAChC,SAAChC,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAACE,EAAAA,IAAAnB,GAAA,CAAiB,UAAU,8BAA+B,CAAA,EAC1DmB,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAA6B,gCAAA,EAC5EA,EAAA,IAAA,IAAA,CAAE,UAAU,gDAAgD,SAE7D,8CAAA,CAAA,CAAA,EACF,CAAA,CACF,EACF,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC7CMmC,GAA4BC,IACiB,CAC/C,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,wBAAyB,IACzB,oBAAqB,GACrB,mBAAoB,GACpB,oBAAqB,EACrB,yBAA0B,EAC1B,YAAe,EACjB,GAEwBA,EAAQ,SAAS,GAAK,GAM1CC,GAAwBD,GAA6B,CACnD,MAAAE,MAAW,KACXC,EAAe,IAAI,KAAKD,CAAI,EAG5BE,EAAcJ,EAAQ,aAAe,IAC3C,OAAAG,EAAa,QAAQA,EAAa,QAAQ,EAAIC,CAAW,EAElDD,EAAa,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,CAChD,EAKaE,GAA8B,MAAOL,GAI5C,CACA,GAAA,CACF,QAAQ,IAAI,0CAA0CA,EAAQ,eAAe,EAAE,EAE/E,MAAMM,EAAkB,CAAC,EACzB,IAAIC,EAAmB,EAGnB,GAAA,CACF,MAAMC,EAA2C,CAC/C,UAAWR,EAAQ,GACnB,UAAW,eACX,WAAY,EACZ,iBAAkBD,GAAyBC,CAAO,EAClD,YAAa,uBACb,KAAM,QAAQ,KAAK,IAAK,CAAA,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GACnE,aAAcC,GAAqBD,CAAO,CAC5C,EAEMS,EAAa,MAAMC,EAAW,OAAO,CACzC,GAAI,WAAW,KAAK,IAAK,CAAA,IAAIV,EAAQ,EAAE,GACvC,GAAGQ,CAAA,CACJ,EAGK,MAAAG,GACJC,GACE,OAAOH,EAAW,EAAE,EACpBT,EAAQ,gBACR,EACA,SAAA,CAEJ,EAEAO,IACA,QAAQ,IAAI,0CAA0C,QAE/C7B,EAAO,CACd,MAAMmC,EAAe,0BAA0BnC,aAAiB,MAAQA,EAAM,QAAU,mBAAmB,GAC3G4B,EAAM,KAAKO,CAAY,EACf,QAAA,MAAM,IAAKA,CAAY,CAAA,CAG1B,MAAA,CACL,QAASP,EAAM,SAAW,EAC1B,iBAAAC,EACA,MAAAD,CACF,QAEO5B,EAAO,CACd,MAAMmC,EAAe,6CAA6CnC,aAAiB,MAAQA,EAAM,QAAU,mBAAmB,GACtH,eAAA,MAAM,KAAMmC,CAAY,EAEzB,CACL,QAAS,GACT,iBAAkB,EAClB,MAAO,CAACA,CAAY,CACtB,CAAA,CAEJ,EAMaC,GAAoC,MAAOC,GAIlD,CACA,GAAA,CACM,QAAA,IAAI,iDAAiDA,CAAS,EAAE,EAGxE,MAAMC,EAAe,MAAMN,EAAW,aAAaK,CAAS,EAEtDT,EAAkB,CAAC,EACzB,IAAIW,EAAiB,EAErB,UAAWC,KAAQF,EACb,GAAA,CACEE,EAAK,aAAe,GAEhB,MAAAR,EAAW,OAAOQ,EAAK,EAAE,EAC/BD,IACA,QAAQ,IAAI,+BAA+BC,EAAK,EAAE,EAAE,GAEpDZ,EAAM,KAAK,QAAQY,EAAK,EAAE,qCAAqCA,EAAK,UAAU,EAAE,QAE3ExC,EAAO,CACR,MAAAmC,EAAe,wBAAwBK,EAAK,EAAE,KAAKxC,aAAiB,MAAQA,EAAM,QAAU,mBAAmB,GACrH4B,EAAM,KAAKO,CAAY,EACf,QAAA,MAAM,IAAKA,CAAY,CAAA,CAI5B,MAAA,CACL,QAASP,EAAM,SAAW,EAC1B,eAAAW,EACA,MAAAX,CACF,QAEO5B,EAAO,CACd,MAAMmC,EAAe,0CAA0CnC,aAAiB,MAAQA,EAAM,QAAU,mBAAmB,GACnH,eAAA,MAAM,KAAMmC,CAAY,EAEzB,CACL,QAAS,GACT,eAAgB,EAChB,MAAO,CAACA,CAAY,CACtB,CAAA,CAEJ,EC/LMM,EAAsC,CAC1C,SAAU,GACV,gBAAiB,GACjB,UAAW,GACX,WAAY,GACZ,UAAW,GACX,aAAc,IACd,KAAM,EACR,EAEaC,GAAgB,IAA2B,CAEhD,KAAA,CAAE,KAAMC,EAAU,QAAAC,EAAS,MAAA5C,EAAO,QAAA6C,GAAYC,GAAkBC,EAAY,MAAM,EAGlF,CAACC,EAAmBC,CAAoB,EAAIC,EAAAA,SAAS,EAAK,EAC1D,CAACC,EAAmBC,CAAoB,EAAIF,EAAAA,SAAS,EAAK,EAC1D,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAyB,IAAI,EAC/D,CAACrD,EAAU0D,CAAW,EAAIL,EAAAA,SAAS,EAAK,EAGxC,CAACM,EAAYC,CAAa,EAAIP,EAAAA,SAAS,EAAE,EACzC,CAACQ,EAAiBC,CAAkB,EAAIT,EAAAA,SAAiB,OAAO,EAGhE,CAACxE,EAAUkF,CAAW,EAAIV,EAAAA,SAA2BT,CAAiB,EAGtE,CAACoB,EAAaC,CAAc,EAAIZ,EAAAA,SAAS,CAAC,EAC1Ca,EAAe,GAGf,CAAE,MAAOC,CAAA,EAAmBC,GAAgBtB,GAAY,CAAA,EAAI,CAChE,QAAS,CAAE,UAAWe,CAAgB,EACtC,WAAAF,EACA,aAAc,CAAC,kBAAmB,WAAY,YAAY,EAC1D,UAAW,kBACX,cAAe,KAAA,CAChB,EAGKU,EAAa,KAAK,KAAKF,EAAe,OAASD,CAAY,EAC3DI,EAAiBH,EAAe,OACnCH,EAAc,GAAKE,EACpBF,EAAcE,CAChB,EAGMK,EAAY,IAAM,CACtBR,EAAYnB,CAAiB,EAC7Bc,EAAY,EAAK,CACnB,EAGMc,EAAoB,CAACtF,EAAsBuF,IAA2B,CAC1EV,EAAqBW,IAAA,CACnB,GAAGA,EACH,CAACxF,CAAK,EAAGuF,CAAA,EACT,CACJ,EAGMvE,EAAe,SAAY,CAC3B,GAAA,CACE,IAAAyE,EAEJ,GAAI3E,GAAYwD,EAEdmB,EAAe,MAAMzB,EAAY,OAAOM,EAAa,GAAI,CACvD,GAAGA,EACH,GAAG3E,CAAA,CACJ,MACI,CAEL,MAAM+F,EAAW,CACf,GAAI,QAAQ,KAAK,IAAK,CAAA,GACtB,GAAG/F,CACL,EACe8F,EAAA,MAAMzB,EAAY,OAAO0B,CAAQ,EAG5C,GAAA,CACF,QAAQ,IAAI,0DAA0D,EAChE,MAAAC,EAAmB,MAAM/C,GAA4B6C,CAAY,EAEnEE,EAAiB,QACnB,QAAQ,IAAI,KAAKA,EAAiB,gBAAgB,2CAA2C,EAErF,QAAA,KAAK,gDAAiDA,EAAiB,KAAK,QAE/E1E,EAAO,CACN,QAAA,MAAM,2CAA4CA,CAAK,CAAA,CAEjE,CAIF,MAAM6C,EAAQ,EAGdI,EAAqB,EAAK,EAC1BG,EAAqB,EAAK,EAChBgB,EAAA,EACVd,EAAgB,IAAI,QAEbtD,EAAO,CACN,cAAA,MAAM,2BAA4BA,CAAK,EACzCA,CAAA,CAEV,EAGM2E,EAAiBtE,GAAkB,CACvCiD,EAAgBjD,CAAI,EACpB+C,EAAqB,EAAI,EACzBG,EAAY,EAAK,CACnB,EAGMqB,EAAgB,IAAM,CACtBvB,IACFO,EAAYP,CAAY,EACxBE,EAAY,EAAI,EAEpB,EAGMsB,EAAc,MAAOxE,GAAkB,CACvC,GAAA,CAEE,GAAA,CACF,QAAQ,IAAI,+CAA+C,EAC3D,MAAMqE,EAAmB,MAAMtC,GAAkC/B,EAAK,EAAE,EAEpEqE,EAAiB,QACnB,QAAQ,IAAI,KAAKA,EAAiB,cAAc,6BAA6B,EAErE,QAAA,KAAK,kDAAmDA,EAAiB,KAAK,QAGjF1E,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAK7C,MAAA+C,EAAY,OAAO1C,EAAK,EAAE,EAChC,MAAMwC,EAAQ,QACP7C,EAAO,CACN,cAAA,MAAM,4BAA6BA,CAAK,EAC1CA,CAAA,CAEV,EAGM8E,EAAgBzE,GAAkB,CAC1BuD,EAAA,CACV,GAAGvD,EACH,SAAU,GACV,gBAAiB,GAAGA,EAAK,eAAe,UAAA,CACzC,EACD4C,EAAqB,EAAI,EACzBM,EAAY,EAAK,CACnB,EAGMwB,EAAqB,IAAM,CAC/BjB,EAAe,CAAC,CAClB,EAGA,OAAAkB,GAAM,UAAU,IAAM,CACDD,EAAA,CAAA,EAElB,CAACvB,EAAYE,CAAe,CAAC,EAEzB,CAEL,SAAAf,EACA,QAAAC,EACA,MAAA5C,EAGA,SAAAtB,EACA,YAAAkF,EAGA,kBAAAZ,EACA,qBAAAC,EACA,kBAAAE,EACA,qBAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,SAAAzD,EACA,YAAA0D,EAGA,WAAAC,EACA,cAAAC,EACA,gBAAAC,EACA,mBAAAC,EAGA,eAAAK,EACA,eAAAG,EACA,WAAAD,EACA,YAAAL,EACA,eAAAC,EAGA,QAAAjB,EACA,UAAAuB,EACA,kBAAAC,EACA,aAAAtE,EACA,cAAA4E,EACA,cAAAC,EACA,YAAAC,EACA,aAAAC,CACF,CACF,ECxPMG,GAA6B,IAAM,CAEjC,KAAA,CAEJ,QAAArC,EACA,MAAA5C,EAGA,SAAAtB,EAGA,kBAAAsE,EACA,qBAAAC,EACA,kBAAAE,EACA,qBAAAC,EACA,aAAAC,EACA,SAAAxD,EAGA,WAAA2D,EACA,cAAAC,EACA,gBAAAC,EACA,mBAAAC,EAGA,eAAAK,EACA,eAAAG,EACA,WAAAD,EACA,YAAAL,EACA,eAAAC,EAGA,QAAAjB,EACA,UAAAuB,EACA,kBAAAC,EACA,aAAAtE,EACA,cAAA4E,EACA,cAAAC,EACA,YAAAC,EACA,aAAAC,GACEpC,GAAc,EAEZwC,EAAgBC,GAAiB,CACrCrB,EAAeqB,CAAI,EACZ,OAAA,SAAS,EAAG,CAAC,CACtB,EAEMC,EAAmB,IAAM,CACnBhB,EAAA,CACZ,EAGA,OAAIxB,QAEC,MAAI,CAAA,UAAU,wCACb,SAAC5D,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,2EAA4E,CAAA,EAC1FA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAAsB,wBAAA,CAAA,CAAA,CAAA,CAC7E,CACF,CAAA,EAKAc,EAEAd,EAAAA,IAAC,MAAI,CAAA,UAAU,6BACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,iDACb,SAAAF,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,uBAAuB,QAAQ,YAAY,KAAK,eAC7D,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,0NAA0N,SAAS,UAAU,EAC1Q,CACF,CAAA,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAyB,4BAAA,EAC1EF,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAE,EAAAA,IAAC,KAAG,SAAMc,CAAA,CAAA,EACTd,EAAA,IAAA,IAAA,CAAE,UAAU,OAAO,SAAsD,wDAAA,CAAA,CAAA,EAC5E,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACiB,EAAA,CACC,QAAS0C,EACT,MAAM,UACN,KAAK,KACL,UAAU,aACX,SAAA,kBAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAKF7D,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAE,EAAAA,IAAC,OAAI,UAAU,qBAEb,SAACF,EAAA,KAAA,MAAA,CAAI,UAAU,6EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iGACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAAgB,mBAAA,EACnFA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAqD,uDAAA,CAAA,CAAA,EACvG,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAAA,EAAA,KAACmB,EAAA,CACC,QAAS,IAAM,CACHiE,EAAA,EACVnB,EAAqB,EAAI,CAC3B,EACA,MAAM,UACN,OAAO,KACP,UAAU,aAEV,SAAA,CAAC/D,EAAAA,IAAAmG,GAAA,CAAS,UAAU,cAAe,CAAA,EAAE,eAAA,CAAA,CAEvC,EACArG,EAAA,KAACsG,EAAA,CACC,MAAM,GACN,eAAgB,GAChB,cAAe,IACZpG,EAAAA,IAAAiB,EAAA,CAAO,MAAM,QAAQ,OAAO,KAAK,UAAU,aAC1C,SAAAjB,MAACqG,GAAqB,CAAA,UAAU,SAAU,CAAA,EAC5C,EAGF,SAAA,CAAArG,EAAA,IAACoG,EAAS,KAAT,CAAc,KAAME,GAAmB,SAExC,oBAAA,QACCF,EAAS,KAAT,CAAc,KAAMnE,EAAuB,SAE5C,gBAAA,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAnC,EAAAA,KAAC,MAAI,CAAA,UAAU,+HACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAE,MAACD,EAAM,CAAA,QAAQ,eAAe,UAAU,UAAU,SAAM,SAAA,EACxDD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,uEACb,SAAAA,MAAC,OAAI,UAAU,2CAA2C,KAAK,eAAe,QAAQ,YACpF,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,mHAAmH,SAAS,UAAU,EACnK,CACF,CAAA,EACAA,EAAA,IAACC,EAAA,CACC,GAAG,eACH,YAAY,uCACZ,MAAOqE,EACP,SAAWpE,GAAMqE,EAAcrE,EAAE,OAAO,KAAK,EAC7C,OAAO,KACP,UAAU,kBAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EACAJ,EAAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAAE,EAAA,IAACuG,GAAA,CACC,QAASlH,EAAe,IAAYe,IAAA,CAClC,MAAOA,EACP,MAAOA,CAAA,EACP,EACF,MAAOoE,EACP,SAAUC,EACV,YAAY,0BACZ,kBAAkB,uBAClB,gBAAgB,sBAChB,OAAO,IAAA,CACT,SACCxD,EAAO,CAAA,MAAM,QAAQ,OAAO,KAAK,UAAU,aAC1C,SAAA,CAACjB,EAAAA,IAAAwG,GAAA,CAAW,UAAU,cAAe,CAAA,EAAE,SAAA,CAEzC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAxG,EAAA,IAACwB,GAAA,CACC,MAAOyD,EACP,OAAQQ,EACR,YAAaG,EACb,SAAUD,CAAA,CACZ,EAGCX,EAAa,GACXlF,OAAA,MAAA,CAAI,UAAU,mGACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,uDAAuD,SAAA,CAAA,aAC3DA,EAAAA,KAAC,OAAK,CAAA,UAAU,8CAAiD,SAAA,EAAA6E,EAAc,GAAK,GAAM,EAAE,IAAE,KAAK,IAAIA,EAAc,GAAIG,EAAe,MAAM,CAAA,EAAE,EAAO,OAAK9E,EAAA,IAAA,OAAA,CAAK,UAAU,8CAA+C,WAAe,MAAO,CAAA,CAAA,EAC5P,EACAA,EAAA,IAACyG,GAAA,CACC,YAAA9B,EACA,WAAAK,EACA,aAAAgB,EACA,UAAS,EAAA,CAAA,CACX,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAGAhG,EAAA,IAACO,GAAA,CACC,KAAMuD,EACN,QAAS,IAAM,CACbC,EAAqB,EAAK,EAChBmB,EAAA,CACZ,EACA,OAAQrE,EACR,SAAArB,EACA,SAAU2F,EACV,SAAAxE,CAAA,CACF,EAEAX,EAAA,IAACkB,GAAA,CACC,KAAM+C,EACN,QAAS,IAAM,CACbC,EAAqB,EAAK,EAChBgB,EAAA,CACZ,EACA,KAAMf,EACN,SAAA3E,EACA,SAAU2F,EACV,OAAQO,EACR,OAAQ7E,EACR,SAAAF,EACA,aAAcuF,CAAA,CAAA,CAChB,EACF,CAEJ","x_google_ignoreList":[0]}